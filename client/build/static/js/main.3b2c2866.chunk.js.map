{"version":3,"sources":["components/wiser.jpg","http-common.js","services/student.service.js","components/add-student.component.js","components/student.component.js","components/student-list.component.js","services/teacher.service.js","components/authentication.js","services/report.service.js","components/addReport.js","services/activity.service.js","components/addActivity.js","services/graduate.service.js","components/addGraduate.js","components/analytics.js","components/add.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","axios","create","baseURL","headers","http","get","id","data","post","put","delete","name","year","addStudent","props","onChangename","bind","onChangeForm","onChangeGraduationYear","savestudent","newstudent","state","form","graduationYear","graduated","submitted","e","this","setState","target","value","studentDataService","then","response","console","log","catch","className","onClick","htmlFor","type","required","onChange","Component","Student","getstudent","updateGraduated","updatestudent","deletestudent","currentstudent","message","match","params","prevState","status","update","history","push","StudentsList","onChangeSearchname","retrievestudents","refreshList","setActivestudent","removeAllstudents","searchname","students","currentIndex","gradYear","getAll","student","index","deleteAll","findByname","findByGraduationYear","label","defaultInputValue","options","selectGraduationYear","allowClear","to","placeholder","map","key","src","process","width","height","alt","teacherLogin","registerName","registerPswd","saveTeacher","loginName","loginPswd","loginTeacher","username","password","teacherDataService","logo","align","Value","addReport","onChangeReportTime","onChangeStudentid","onChangeTitle","onChangeComments","onChangeTeacher","saveReport","newReport","studentid","title","comments","teacher","reportTime","reportDataService","style","color","fontSize","margin","rows","class","addActivity","onChangeEvent","onChangeAward","onChangeDescription","event","award","description","activityDataService","addGraduate","onChangeUniversity","onChangeMajor","onChangeMarriage","onChangeChildren","onChangeJob","onChangeNote","university","major","note","job","marriage","children","graduateDataService","padding","analytics","add","justify-content","App","exact","path","component","studentsList","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.3b2c2866.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wiser.25986481.jpg\";","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://localhost:8080/api\",\n  //baseURL: \"https://wiser-student-system.herokuapp.com/api\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});","import http from \"../http-common\";\n\nclass studentDataService {\n  getAll() {\n    return http.get(\"/students\");\n  }\n\n  get(id) {\n    return http.get(`/students/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/students\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/students/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/students/${id}`);\n  }\n\n  deleteAll() {\n    return http.delete(`/students`);\n  }\n\n  findByname(name) {\n    return http.get(`/students?name=${name}`);\n  }\n  \n  findByGraduationYear(year) {\n    return http.get(`/students?graduationYear=${year}`);\n  }\n}\n\nexport default new studentDataService();","import React, { Component } from \"react\";\nimport studentDataService from \"../services/student.service\";\n\nexport default class addStudent extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangename = this.onChangename.bind(this);\n    this.onChangeForm = this.onChangeForm.bind(this);\n    this.onChangeGraduationYear = this.onChangeGraduationYear.bind(this);\n    this.savestudent = this.savestudent.bind(this);\n    this.newstudent = this.newstudent.bind(this);\n\n    this.state = {\n      id: null,\n      name: \"\",\n      form: \"\", \n      graduationYear: \"\",\n      graduated: false,\n      submitted: false\n    };\n  }\n\n  onChangename(e) {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  onChangeForm(e) {\n    this.setState({\n      form: e.target.value\n    });\n  }\n\n  onChangeGraduationYear(e) {\n    this.setState({\n      graduationYear: e.target.value\n    });\n  }\n\n  savestudent() {\n    var data = {\n      name: this.state.name,\n      form: this.state.form,\n      graduationYear: this.state.graduationYear\n    };\n\n    studentDataService.create(data)\n      .then(response => {\n        this.setState({\n          id: response.data.id,\n          name: response.data.name,\n          form: response.data.form,\n          graduationYear: response.data.graduationYear,\n          graduated: response.data.graduated,\n\n          submitted: true\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  newstudent() {\n    this.setState({\n      id: null,\n      name: \"\",\n      form: \"\",\n      graduationYear: \"\",\n      graduated: false,\n\n      submitted: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"submit-form\">\n        {this.state.submitted ? (\n          <div>\n            <h4>You submitted successfully!</h4>\n            <button className=\"btn btn-success\" onClick={this.newstudent}>\n              Add\n            </button>\n          </div>\n        ) : (\n          <div>\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Student Full Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"name\"\n                required\n                value={this.state.name}\n                onChange={this.onChangename}\n                name=\"name\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"form\">Form</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"form\"\n                required\n                value={this.state.form}\n                onChange={this.onChangeForm}\n                name=\"form\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"graduationYear\">Graduation Year</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"graduationYear\"\n                required\n                value={this.state.graduationYear}\n                onChange={this.onChangeGraduationYear}\n                name=\"graduationYear\"\n              />\n            </div>\n\n            <button onClick={this.savestudent} className=\"btn btn-success\">\n              Submit\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport studentDataService from \"../services/student.service\";\n\nexport default class Student extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangename = this.onChangename.bind(this);\n    this.onChangeForm = this.onChangeForm.bind(this);\n    this.onChangeGraduationYear = this.onChangeGraduationYear.bind(this);\n    this.getstudent = this.getstudent.bind(this);\n    this.updateGraduated = this.updateGraduated.bind(this);\n    this.updatestudent = this.updatestudent.bind(this);\n    this.deletestudent = this.deletestudent.bind(this);\n\n    this.state = {\n      currentstudent: {\n        id: null,\n        name: \"\",\n        form: \"\",\n        graduationYear: \"\",\n        graduated: false\n      },\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getstudent(this.props.match.params.id);\n  }\n\n  onChangename(e) {\n    const name = e.target.value;\n\n    this.setState(function(prevState) {\n      return {\n        currentstudent: {\n          ...prevState.currentstudent,\n          name: name\n        }\n      };\n    });\n  }\n\n  onChangeForm(e) {\n    const form = e.target.value;\n    \n    this.setState(prevState => ({\n      currentstudent: {\n        ...prevState.currentstudent,\n        form: form\n      }\n    }));\n  }\n\n  onChangeGraduationYear(e) {\n    const graduationYear = e.target.value;\n    \n    this.setState(prevState => ({\n      currentstudent: {\n        ...prevState.currentstudent,\n        graduationYear: graduationYear\n      }\n    }));\n  }\n\n  getstudent(id) {\n    studentDataService.get(id)\n      .then(response => {\n        this.setState({\n          currentstudent: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  updateGraduated(status) {\n    var data = {\n      id: this.state.currentstudent.id,\n      name: this.state.currentstudent.name,\n      form: this.state.currentstudent.form,\n      graduationYear:this.state.currentstudent.graduationYear,\n      graduated: status\n    };\n\n    studentDataService.update(this.state.currentstudent.id, data)\n      .then(response => {\n        this.setState(prevState => ({\n          currentstudent: {\n            ...prevState.currentstudent,\n            graduated: status\n          }\n        }));\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  updatestudent() {\n    studentDataService.update(\n      this.state.currentstudent.id,\n      this.state.currentstudent\n    )\n      .then(response => {\n        console.log(response.data);\n        this.setState({\n          message: \"The student info was updated successfully!\"\n        });\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  deletestudent() {    \n    studentDataService.delete(this.state.currentstudent.id)\n      .then(response => {\n        console.log(response.data);\n        this.props.history.push('/students')\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { currentstudent } = this.state;\n\n    return (\n      <div>\n        {currentstudent ? (\n          <div className=\"edit-form\">\n            <h4>Student</h4>\n            <form>\n              <div className=\"form-group\">\n                <label htmlFor=\"name\">Full Name</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"name\"\n                  value={currentstudent.name}\n                  onChange={this.onChangename}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"form\">Form</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"form\"\n                  value={currentstudent.form}\n                  onChange={this.onChangeForm}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"graduationYear\">Graduation Year</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"graduationYear\"\n                  value={currentstudent.graduationYear}\n                  onChange={this.onChangeGraduationYear}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>\n                  <strong>Status:</strong>\n                </label>\n                {currentstudent.graduated ? \"Graduated\" : \"In School\"}\n              </div>\n            </form>\n\n            {currentstudent.graduated ? (\n              <button\n                className=\"badge badge-primary mr-2\"\n                onClick={() => this.updateGraduated(false)}\n              >\n                In School\n              </button>\n            ) : (\n              <button\n                className=\"badge badge-primary mr-2\"\n                onClick={() => this.updateGraduated(true)}\n              >\n                Graduated\n              </button>\n            )}\n\n            <button\n              className=\"badge badge-danger mr-2\"\n              onClick={this.deletestudent}\n            >\n              Delete\n            </button>\n\n            <button\n              type=\"submit\"\n              className=\"badge badge-success\"\n              onClick={this.updatestudent}\n            >\n              Update\n            </button>\n            <p>{this.state.message}</p>\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>Please click to select a student...</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport studentDataService from \"../services/student.service\";\nimport { Link } from \"react-router-dom\";\nimport Select from 'react-select';\n\nexport default class StudentsList extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeSearchname = this.onChangeSearchname.bind(this);\n    this.retrievestudents = this.retrievestudents.bind(this);\n    this.refreshList = this.refreshList.bind(this);\n    this.setActivestudent = this.setActivestudent.bind(this);\n    this.removeAllstudents = this.removeAllstudents.bind(this);\n    this.searchname = this.searchname.bind(this);\n\n    this.state = {\n      students: [],\n      currentstudent: null,\n      currentIndex: -1,\n      searchname: \"\",\n      gradYear:\"\"\n    };\n  }\n\n  componentDidMount() {\n    this.retrievestudents();\n  }\n\n  onChangeSearchname(e) {\n    const searchname = e.target.value;\n\n    this.setState({\n      searchname: searchname\n    });\n  }\n\n  retrievestudents() {\n    studentDataService.getAll()\n      .then(response => {\n        this.setState({\n          students: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  refreshList() {\n    this.retrievestudents();\n    this.setState({\n      currentstudent: null,\n      currentIndex: -1\n    });\n  }\n\n  setActivestudent(student, index) {\n    this.setState({\n      currentstudent: student,\n      currentIndex: index\n    });\n  }\n\n  removeAllstudents() {\n    studentDataService.deleteAll()\n      .then(response => {\n        console.log(response.data);\n        this.refreshList();\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  searchname() {\n    this.setState({\n      currentstudent: null,\n      currentIndex: -1\n    });\n\n    studentDataService.findByname(this.state.searchname)\n      .then(response => {\n        this.setState({\n          students: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  selectGraduationYear(value) {\n    console.log(this.state.gradYear);\n    this.setState({\n      currentstudent: null,\n      currentIndex: -1,\n      //gradYear:value[\"value\"]\n    });\n\n    studentDataService.findByGraduationYear(value[\"value\"])\n      .then(response => {\n        this.setState({\n          students: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n\n  render() {\n    const { searchname, students, currentstudent, currentIndex } = this.state;\n    const s_GraduationYear = [\n      { value: '', label: 'All Year' },\n      { value: '2022', label: '2022' },\n      { value: '2023', label: '2023' },\n      { value: '2024', label: '2024' },\n      { value: '2025', label: '2025' }\n    ]\n    const s_Class = [\n      { value: 'All Class', label: 'All Class' },\n      { value: 'Prime', label: 'Prime' },\n      { value: 'Royal', label: 'Royal' },\n      { value: 'Imperial', label: 'Imperial' }\n    ]\n    const s_Subject = [\n      { value: 'All Subject', label: 'All Subject' },\n      { value: 'Math', label: 'Math' },\n      { value: 'English', label: 'English' },\n      { value: 'Kiswahili', label: 'Kiswahili' },\n      { value: 'Physics', label: 'Physics' }\n    ]\n    const s_House = [\n      { value: 'All House', label: 'All House' },\n      { value: 'Mirror', label: 'Mirror' },\n      { value: 'Savvy', label: 'Savvy' },\n      { value: 'Noble', label: 'Noble' },\n      { value: 'Competent', label: 'Competent' }\n    ]\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-2\">\n          <div className=\"container\">\n            <div id=\"root\">\n              <Select className=\"mt-4\" label=\"graduationYear\" defaultInputValue=\"All Year\" options={s_GraduationYear} \n                //value={this.state.gradYear}\n                //onChange={value => this.setState({gradYear: value})}\n                //onFocus={value=>this.selectGraduationYear(value)}\n                onChange={value=>this.selectGraduationYear(value)}\n                allowClear\n              />\n            </div>\n            <div id=\"root\">\n              <Select className=\"mt-4\" label=\"class\" defaultInputValue=\"All Class\" options={s_Class} />\n            </div>\n            <div id=\"root\">\n              <Select className=\"mt-4\" label=\"subject\" defaultInputValue=\"All Subject\" options={s_Subject} />\n            </div>\n            <div id=\"root\">\n              <Select className=\"mt-4\" label=\"house\" defaultInputValue=\"All House\" options={s_House} />\n            </div>\n          </div>\n          <Link\n            to={\"/addStudents\"}\n            className=\"m-3 btn btn-sm btn-danger\"\n          >\n            Add Student\n          </Link>\n          <button\n                className=\"m-3 btn btn-sm btn-danger\"\n                onClick={this.removeAllstudents}\n              >\n                Remove All\n          </button>\n        </div>\n\n        <div className=\"col-md-10\">\n          <div className=\"col-md-8\">\n            <div className=\"input-group mb-3\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Search by student name\"\n                value={searchname}\n                onChange={this.onChangeSearchname}\n              />\n              <div className=\"input-group-append\">\n                <button\n                  className=\"btn btn-outline-secondary\"\n                  type=\"button\"\n                  onClick={this.searchname}\n                >\n                  Search\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-md-5\">\n              <h4>All Students</h4>\n\n              <ul className=\"list-group\">\n                {students &&\n                  students.map((student, index) => (\n                    <li\n                      className={\n                        \"list-group-item \" +\n                        (index === currentIndex ? \"active\" : \"\")\n                      }\n                      onClick={() => this.setActivestudent(student, index)}\n                      key={index}\n                    >\n                      {student.id} {student.name} Form:{student.form} {student.graduationYear}\n                    </li>\n                  ))}\n              </ul>\n            </div>\n\n            <div className=\"col-md-5\">\n              {currentstudent ? (\n                <div>\n                  <h4>Student</h4>\n                  <div>\n                  <img className=\"img-fluid\" \n                    src={`${process.env.PUBLIC_URL}/assets/pfp/${currentstudent.id}.png`} \n                    width=\"180\" height=\"250\"\n                    alt=\"student_profile_pic\"/>\n                  </div>\n                  <div>\n                    <label>\n                      <strong>Full Name:</strong>\n                    </label>{\" \"}\n                    {currentstudent.name}\n                  </div>\n                  <div>\n                    <label>\n                      <strong>Form:</strong>\n                    </label>{\" \"}\n                    {currentstudent.form}\n                  </div>\n                  <div>\n                    <label>\n                      <strong>Graduation Year:</strong>\n                    </label>{\" \"}\n                    {currentstudent.graduationYear}\n                  </div>\n                  <div>\n                    <label>\n                      <strong>Status:</strong>\n                    </label>{\" \"}\n                    {currentstudent.graduated ? \"Graduated\" : \"In School\"}\n                  </div>\n\n                  <Link\n                    to={\"/students/\" + currentstudent.id}\n                    className=\"btn btn-outline-primary\"\n                  >\n                    More\n                  </Link>\n                </div>\n              ) : (\n                <div>\n                  <br />\n                  <p>Please click to select a student...</p>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import http from \"../http-common\";\n\nclass teacherDataService {\n  getAll() {\n    return http.get(\"/teachers\");\n  }\n\n  get(id) {\n    return http.get(`/teachers/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/teachers\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/teachers/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/teachers/${id}`);\n  }\n}\n\nexport default new teacherDataService();","import React, { Component } from \"react\";\nimport teacherDataService from \"../services/teacher.service\";\nimport { Link } from \"react-router-dom\";\nimport logo from './wiser.jpg';\n\n\nexport default class teacherLogin extends Component {\n    constructor(props) {\n      super(props);\n      this.registerName = this.registerName.bind(this);\n      this.registerPswd = this.registerPswd.bind(this);\n      this.saveTeacher = this.saveTeacher.bind(this);\n      this.loginName = this.loginName.bind(this);\n      this.loginPswd = this.loginPswd.bind(this);\n      this.loginTeacher = this.loginTeacher.bind(this);\n  \n      this.state = {\n          id: null,\n          username: \"\",\n          password: \"\",\n          submitted: false\n      };\n    }\n\n  \n    registerName(e) {\n        this.setState({\n            username: e.target.value\n        }); \n    }\n  \n    registerPswd(e) {\n        this.setState({\n            password: e.target.value\n        });\n    }\n  \n    saveTeacher() {\n        var data = {\n          username: this.state.username,\n          password: this.state.password\n        };\n  \n        teacherDataService.create(data)\n        .then(response => {\n          this.setState({\n            id: response.data.id,\n            username: response.data.username,\n            password: response.data.password,\n\n            submitted: true\n          });\n          console.log(response.data);\n        })\n        .catch(e => {\n            console.log(e);\n        });\n    }\n\n    loginName(e) {\n        this.setState({\n            password: e.target.value\n        });\n    }\n\n    loginPswd(e) {\n        this.setState({\n            password: e.target.value\n        });\n    }\n  \n    loginTeacher() {\n        var data = {\n          username: this.state.username,\n          password: this.state.password,\n        };\n  \n        teacherDataService.create(data)\n        .then(response => {\n          this.setState({\n            id: response.data.id,\n            username: response.data.username,\n            password: response.data.password,\n\n            submitted: true\n          });\n          console.log(response.data);\n        })\n        .catch(e => {\n            console.log(e);\n        });\n    }\n  \n    /***                        <Link to={\"/students\"} className=\"badge badge-warning\">\n                            Continue\n                        </Link> */\n    render() {\n        return (\n            <div className=\"submit-form\">\n                {this.state.submitted ? (\n                    <div>\n                        <h2>Kalibu, Teacher!</h2>\n                        <p>Education is life.</p>\n                        <Link\n                            to={\"/students\"}\n                            className=\"badge badge-warning\"\n                        >\n                            Continue\n                        </Link>\n                    </div>\n                ) : (\n                <div>\n                    <img src={logo} alt=\"logo\" width=\"280\" height=\"280\" align='center'/>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"username\">Username</label>\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"username\"\n                            required\n                            Value={this.state.username}\n                            onChange={this.registerName}\n                            name=\"username\"\n                        />\n                    </div>\n        \n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"password\"\n                            required\n                            value={this.state.password}\n                            onChange={this.registerPswd}\n                            name=\"password\"\n                        />\n                    </div>\n        \n                    <button onClick={this.saveTeacher} className=\"btn btn-success\">\n                        Login\n                    </button>\n                </div>\n                )}\n            </div>\n            );\n        }\n    }\n    \n/*** \nfunction App(){\n    const[usernameReg, setUsernameReg] = useState(\"\")\n    const[passwordReg, setPasswordReg] = useState(\"\")\n    \n    return(\n        <div className=\"App\">\n            <div className=\"registration\">\n                <h1>Register</h1>\n                <label>Username</label>\n                <input \n                    type=\"text\"\n                    onChange={(e) => {\n                        setUsernameReg(e.target.value);\n                    }} \n                />\n                <label>Password</label>\n                <input \n                    type=\"text\"\n                    onChange={(e) => {\n                        setPasswordReg(e.target.value);\n                    }} \n                />\n                <button>Register</button>\n            </div>\n            <div className=\"login\">\n                <h1>Login</h1>\n                <input type=\"username\" placeholder=\"Username...\" />\n                <input type=\"password\" placeholder=\"Password...\" />\n                <button>Login</button>\n            </div>\n        </div>\n    );\n}\n***/","import http from \"../http-common\";\n\nclass reportDataService {\n  getAll() {\n    return http.get(\"/reports\");\n  }\n\n  get(id) {\n    return http.get(`/reports/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/reports\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/reports/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/reports/${id}`);\n  }\n}\n\nexport default new reportDataService();","import React, { Component } from \"react\";\nimport reportDataService from \"../services/report.service\";\n\nexport default class addReport extends Component {\n  constructor(props) {\n    super(props);\n    // need to add in select student\n    this.onChangeReportTime = this.onChangeReportTime.bind(this);\n    this.onChangeStudentid = this.onChangeStudentid.bind(this);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeComments = this.onChangeComments.bind(this);\n    this.onChangeTeacher = this.onChangeTeacher.bind(this);\n    this.saveReport = this.saveReport.bind(this);\n    this.newReport = this.newReport.bind(this);\n    // need to add in time input year+term\n\n    this.state = {\n      studentid: null,\n      title: \"\",\n      comments: \"\", \n      teacher: \"\",\n      reportTime:\"\",\n      submitted: false\n    };\n  }\n\n  onChangeStudentid(e) {\n    this.setState({\n      studentid: e.target.value\n    });\n  }\n\n  onChangeTitle(e) {\n    this.setState({\n      title: e.target.value\n    });\n  }\n\n  onChangeComments(e) {\n    this.setState({\n      comments: e.target.value\n    });\n  }\n\n  onChangeTeacher(e) {\n    this.setState({\n      teacher: e.target.value\n    });\n  }\n\n  onChangeReportTime(e) {\n    this.setState({\n      reportTime: e.target.value\n    });\n  }\n\n  saveReport() {\n    var data = {\n      studentid: this.state.studentid,\n      title: this.state.title,\n      comments: this.state.comments,\n      teacher: this.state.teacher,\n      reportTime: this.state.reportTime\n    };\n\n    reportDataService.create(data)\n      .then(response => {\n        this.setState({\n          studentid: response.data.studentid,\n          title: response.data.title,\n          comments: response.data.comments,\n          teacher: response.data.teacher,\n          reportTime: response.data.reportTime,\n\n          submitted: true\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  newReport() {\n    this.setState({\n      studentid: null,\n      title: \"\",\n      comments: \"\",\n      teacher: \"\",\n      reportTime:\"\",\n\n      submitted: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"submit-form\">\n        {this.state.submitted ? (\n          <div>\n            <h4>Teacher's report added successfully!</h4>\n            <h4>Thank you, teacher!</h4>\n            <button className=\"btn btn-success\" onClick={this.newReport}>\n              Add\n            </button>\n          </div>\n        ) : (\n          <div>\n            <div className=\"form-group\">\n              <label htmlFor=\"reportTime\">Report Time</label>\n              <p style={{ color: 'red',fontSize:'12px',margin:'0px' }}> Format: School Year and Term</p>\n              <p style={{ color: 'grey',fontSize:'12px',margin:'0px'  }}> Ex: School Year 2022 Term 1 then you input 202201</p>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"reportTime\"\n                required\n                value={this.state.reportTime}\n                onChange={this.onChangeReportTime}\n                name=\"reportTime\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"studentid\">Student ID</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"studentid\"\n                required\n                value={this.state.studentid}\n                onChange={this.onChangeStudentid}\n                name=\"studentid\"\n              />\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"title\">Title</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"title\"\n                required\n                value={this.state.title}\n                onChange={this.onChangeTitle}\n                name=\"title\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"comments\">Comments</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"comments\"\n                required\n                value={this.state.comments}\n                onChange={this.onChangeComments}\n                name=\"comments\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"teacher\">Teacher</label>\n              <textarea \n                rows=\"3\"\n                className=\"form-control\"\n                id=\"teacher\"\n                required\n                value={this.state.teacher}\n                onChange={this.onChangeTeacher}\n                name=\"teacher\"\n              />\n            </div>\n\n            <div class=\"text-right\">\n                <button onClick={this.saveReport} className=\"btn btn-success\">\n                Submit\n                </button>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import http from \"../http-common\";\n\nclass activityDataService {\n  getAll() {\n    return http.get(\"/activity\");\n  }\n\n  get(id) {\n    return http.get(`/activity/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/activity\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/activity/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/activity/${id}`);\n  }\n}\n\nexport default new activityDataService();","import React, { Component } from \"react\";\nimport activityDataService from \"../services/activity.service\";\n\nexport default class addActivity extends Component {\n  constructor(props) {\n    super(props);\n    // need to add in select student\n    this.onChangeReportTime = this.onChangeReportTime.bind(this);\n    this.onChangeStudentid = this.onChangeStudentid.bind(this);\n    this.onChangeEvent = this.onChangeEvent.bind(this);\n    this.onChangeAward = this.onChangeAward.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeTeacher = this.onChangeTeacher.bind(this);\n    this.saveReport = this.saveReport.bind(this);\n    this.newReport = this.newReport.bind(this);\n    // need to add in time input year+term\n\n    this.state = {\n      studentid: null,\n      event: \"\",\n      award: \"\", \n      description:\"\",\n      teacher: \"\",\n      reportTime:\"\",\n      submitted: false\n    };\n  }\n\n  onChangeStudentid(e) {\n    this.setState({\n      studentid: e.target.value\n    });\n  }\n\n  onChangeEvent(e) {\n    this.setState({\n      event: e.target.value\n    });\n  }\n\n  onChangeAward(e) {\n    this.setState({\n      award: e.target.value\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value\n    });\n  }\n\n  onChangeTeacher(e) {\n    this.setState({\n      teacher: e.target.value\n    });\n  }\n\n  onChangeReportTime(e) {\n    this.setState({\n      reportTime: e.target.value\n    });\n  }\n\n  saveReport() {\n    var data = {\n      studentid: this.state.studentid,\n      event: this.state.event,\n      award: this.state.award,\n      description: this.state.description,\n      teacher: this.state.teacher,\n      reportTime: this.state.reportTime\n    };\n\n    activityDataService.create(data)\n      .then(response => {\n        this.setState({\n          studentid: response.data.studentid,\n          event: response.data.event,\n          award: response.data.award,\n          description: response.data.description,\n          teacher: response.data.teacher,\n          reportTime: response.data.reportTime,\n\n          submitted: true\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  newReport() {\n    this.setState({\n      studentid: null,\n      event: \"\",\n      award:\"\",\n      description: \"\",\n      teacher: \"\",\n      reportTime:\"\",\n\n      submitted: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"submit-form\">\n        {this.state.submitted ? (\n          <div>\n            <h4>Activity record added successfully!</h4>\n            <h4>Thank you, teacher!</h4>\n            <button className=\"btn btn-success\" onClick={this.newReport}>\n              Add\n            </button>\n          </div>\n        ) : (\n          <div>\n            <h3 htmlFor=\"activity\">Activity</h3>\n            <div className=\"form-group\">\n              <label htmlFor=\"reportTime\">Report Time</label>\n              <p style={{ color: 'red',fontSize:'12px',margin:'0px' }}> Format: School Year and Term</p>\n              <p style={{ color: 'grey',fontSize:'12px',margin:'0px'  }}> Ex: School Year 2022 Term 1 then you input 202201</p>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"reportTime\"\n                required\n                value={this.state.reportTime}\n                onChange={this.onChangeReportTime}\n                name=\"reportTime\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"studentid\">Student ID</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"studentid\"\n                required\n                value={this.state.studentid}\n                onChange={this.onChangeStudentid}\n                name=\"studentid\"\n              />\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"event\">Event</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"event\"\n                required\n                value={this.state.event}\n                onChange={this.onChangeEvent}\n                name=\"event\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"Award\">Award</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"award\"\n                required\n                value={this.state.award}\n                onChange={this.onChangeAward}\n                name=\"award\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"Description\">Description</label>\n              <textarea \n                rows=\"3\"\n                className=\"form-control\"\n                id=\"description\"\n                required\n                value={this.state.description}\n                onChange={this.onChangeDescription}\n                name=\"description\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"teacher\">Teacher</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"teacher\"\n                required\n                value={this.state.teacher}\n                onChange={this.onChangeTeacher}\n                name=\"teacher\"\n              />\n            </div>\n\n            <div class=\"text-right\">\n                <button onClick={this.saveReport} className=\"btn btn-success\">\n                Submit\n                </button>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import http from \"../http-common\";\n\nclass graduateDataService {\n  getAll() {\n    return http.get(\"/graduate\");\n  }\n\n  get(id) {\n    return http.get(`/graduate/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/graduate\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/graduate/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/graduate/${id}`);\n  }\n}\n\nexport default new graduateDataService();","import React, { Component } from \"react\";\nimport graduateDataService from \"../services/graduate.service\";\n\nexport default class addGraduate extends Component {\n  constructor(props) {\n    super(props);\n    // need to add in select student\n    this.onChangeReportTime = this.onChangeReportTime.bind(this);\n    this.onChangeStudentid = this.onChangeStudentid.bind(this);\n    this.onChangeUniversity = this.onChangeUniversity.bind(this);\n    this.onChangeMajor = this.onChangeMajor.bind(this);\n    this.onChangeMarriage = this.onChangeMarriage.bind(this);\n    this.onChangeChildren = this.onChangeChildren.bind(this);\n    this.onChangeJob = this.onChangeJob.bind(this);\n    this.onChangeNote = this.onChangeNote.bind(this);\n    this.saveReport = this.saveReport.bind(this);\n    this.newReport = this.newReport.bind(this);\n    // need to add in time input year+term\n\n    this.state = {\n      studentid: null,\n      university: \"\",\n      major: \"\", \n      note:\"\",\n      job: \"\",\n      marriage:\"\",\n      children:\"\",\n      reportTime:\"\",\n      submitted: false\n    };\n  }\n\n  onChangeStudentid(e) {\n    this.setState({\n      studentid: e.target.value\n    });\n  }\n\n  onChangeUniversity(e) {\n    this.setState({\n      university: e.target.value\n    });\n  }\n\n  onChangeMajor(e) {\n    this.setState({\n      major: e.target.value\n    });\n  }\n\n  onChangeNote(e) {\n    this.setState({\n      note: e.target.value\n    });\n  }\n\n  onChangeJob(e) {\n    this.setState({\n      job: e.target.value\n    });\n  }\n\n  onChangeMarriage(e) {\n    this.setState({\n      marriage: e.target.value\n    });\n  }\n\n  onChangeChildren(e) {\n    this.setState({\n      children: e.target.value\n    });\n  }\n\n  onChangeReportTime(e) {\n    this.setState({\n      reportTime: e.target.value\n    });\n  }\n\n  saveReport() {\n    var data = {\n      studentid: this.state.studentid,\n      university: this.state.university,\n      major: this.state.major,\n      note: this.state.note,\n      job: this.state.job,\n      marriage: this.state.marriage,\n      children: this.state.children,\n      reportTime: this.state.reportTime\n    };\n\n    graduateDataService.create(data)\n      .then(response => {\n        this.setState({\n          studentid: response.data.studentid,\n          university: response.data.university,\n          major: response.data.major,\n          note: response.data.note,\n          job: response.data.job,\n          marriage: response.data.marriage,\n          children: response.data.children,\n          reportTime: response.data.reportTime,\n\n          submitted: true\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  newReport() {\n    this.setState({\n      studentid: null,\n      university: \"\",\n      major:\"\",\n      note: \"\",\n      job: \"\",\n      marriage:\"\",\n      children:\"\",\n      reportTime:\"\",\n\n      submitted: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"submit-form\">\n        {this.state.submitted ? (\n          <div>\n            <h4>Graduate record added successfully!</h4>\n            <h4>Thank you, teacher!</h4>\n            <button className=\"btn btn-success\" onClick={this.newReport}>\n              Add Another\n            </button>\n          </div>\n        ) : (\n          <div>\n            <div className=\"col-md-12\">\n            <h3 htmlFor=\"graduate\">Graduate</h3>\n              <div className=\"form-group\">\n                <label htmlFor=\"reportTime\">Report Time</label>\n                <p style={{ color: 'red',fontSize:'12px',margin:'0px' }}> Format: School Year and Term</p>\n                <p style={{ color: 'grey',fontSize:'12px',margin:'0px'  }}> Ex: School Year 2022 Term 1 then you input 202201</p>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"reportTime\"\n                    required\n                    value={this.state.reportTime}\n                    onChange={this.onChangeReportTime}\n                    name=\"reportTime\"\n                />\n              </div>\n            </div>\n\n            <div className=\"col-md-12\">\n                <div className=\"form-group\">\n                <label htmlFor=\"studentid\">Student ID</label>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"studentid\"\n                    required\n                    value={this.state.studentid}\n                    onChange={this.onChangeStudentid}\n                    name=\"studentid\"\n                />\n                </div>\n            </div>\n            \n            <div className=\"list row\">\n                <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n                    <label htmlFor=\"university\">University</label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"university\"\n                        required\n                        value={this.state.university}\n                        onChange={this.onChangeUniversity}\n                        name=\"university\"\n                    />\n                    </div>\n                </div>\n\n                <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n                    <label htmlFor=\"Major\">Major</label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"major\"\n                        required\n                        value={this.state.major}\n                        onChange={this.onChangeMajor}\n                        name=\"major\"\n                    />\n                    </div>\n                </div>\n                \n                <div className=\"col-md-12\">\n                    <div className=\"form-group\">\n                    <label htmlFor=\"job\">Job</label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"job\"\n                        required\n                        value={this.state.job}\n                        onChange={this.onChangeJob}\n                        name=\"job\"\n                    />\n                    </div>\n                </div>\n\n                <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n                    <label htmlFor=\"marriage\">Marriage Status</label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"marriage\"\n                        required\n                        value={this.state.marriage}\n                        onChange={this.onChangeMarriage}\n                        name=\"marriage\"\n                    />\n                    </div>\n                </div>\n\n                <div className=\"col-md-6\" padding=\"-10px\">\n                    <div className=\"form-group\">\n                    <label htmlFor=\"children\">Children</label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"children\"\n                        required\n                        value={this.state.children}\n                        onChange={this.onChangeChildren}\n                        name=\"children\"\n                    />\n                    </div>\n                </div>\n\n                <div className=\"col-md-12\">\n                    <div className=\"form-group\">\n                    <label htmlFor=\"Note\">Note</label>\n                    <textarea \n                        id=\"note\"\n                        className=\"form-control\" \n                        rows=\"3\"\n                        value={this.state.note}\n                        onChange={this.onChangeNote}\n                        name=\"note\"\n                        />\n                    </div>\n                </div>\n            </div>\n            <div class=\"text-right\">\n                <button onClick={this.saveReport} className=\"btn btn-success\">\n                Submit\n                </button>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport studentDataService from \"../services/student.service\";\n\nexport default class analytics extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangename = this.onChangename.bind(this);\n    this.onChangeForm = this.onChangeForm.bind(this);\n    this.onChangeGraduationYear = this.onChangeGraduationYear.bind(this);\n    this.savestudent = this.savestudent.bind(this);\n    this.newstudent = this.newstudent.bind(this);\n\n    this.state = {\n      id: null,\n      name: \"\",\n      form: \"\", \n      graduationYear: \"\",\n      graduated: false,\n      submitted: false\n    };\n  }\n\n  onChangename(e) {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  onChangeForm(e) {\n    this.setState({\n      form: e.target.value\n    });\n  }\n\n  onChangeGraduationYear(e) {\n    this.setState({\n      graduationYear: e.target.value\n    });\n  }\n\n  savestudent() {\n    var data = {\n      name: this.state.name,\n      form: this.state.form,\n      graduationYear: this.state.graduationYear\n    };\n\n    studentDataService.create(data)\n      .then(response => {\n        this.setState({\n          id: response.data.id,\n          name: response.data.name,\n          form: response.data.form,\n          graduationYear: response.data.graduationYear,\n          graduated: response.data.graduated,\n\n          submitted: true\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  newstudent() {\n    this.setState({\n      id: null,\n      name: \"\",\n      form: \"\",\n      graduationYear: \"\",\n      graduated: false,\n\n      submitted: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"list row\">\n          <p>In construction...</p>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport studentDataService from \"../services/student.service\";\nimport { Link } from \"react-router-dom\";\nimport \"../App.css\";\n\nexport default class add extends Component {\n\n  render() {\n    return (\n      <div className=\"list row\" justify-content=\"space-between\">\n          <Link to={\"/addExam\"} className=\"btn btn-secondary btn-square-xl-secondary\">Add Exam</Link>\n          <Link to={\"/addScore\"} className=\"btn btn-primary btn-square-xl-secondary\">Upload Score</Link>\n          <Link to={\"/addActivity\"} className=\"btn btn-primary btn-square-xl-secondary\">Add Activity</Link>\n          <Link to={\"/addReport\"} className=\"btn btn-primary btn-square-xl-secondary\">Teacher's Report</Link>\n          <Link to={\"/addGraduate\"} className=\"btn btn-primary btn-square-xl-secondary\">Graduate</Link>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport addStudent from \"./components/add-student.component\";\nimport student from \"./components/student.component\";\nimport studentsList from \"./components/student-list.component\";\nimport teacherLogin from \"./components/authentication\";\nimport addReport from \"./components/addReport\";\nimport addActivity from \"./components/addActivity\";\nimport addGraduate from \"./components/addGraduate\";\nimport analytics from \"./components/analytics\";\nimport add from \"./components/add\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <Link to={\"/students\"} className=\"navbar-brand\">\n            Wiser\n          </Link>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/students\"} className=\"nav-link\">\n                All Students\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/analytics\"} className=\"nav-link\">\n                Analytics\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/add\"} className=\"nav-link\">\n                Add Records\n              </Link>\n            </li>\n          </div>\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={\"/\"} component={teacherLogin}/>\n            <Route exact path={\"/students\"} component={studentsList} />\n            <Route exact path=\"/addStudents\" component={addStudent} />\n            <Route path=\"/add\" component={add} />\n            <Route exact path=\"/addReport\" component={addReport} />\n            <Route exact path=\"/addActivity\" component={addActivity} />\n            <Route exact path=\"/addGraduate\" component={addGraduate} />\n            <Route path=\"/analytics\" component={analytics} />\n            <Route path=\"/students/:id\" component={student} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();"],"sourceRoot":""}