{"ast":null,"code":"import _objectSpread from \"/Users/yan/Desktop/WISERStudentSystem/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _assertThisInitialized from \"/Users/yan/Desktop/WISERStudentSystem/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"/Users/yan/Desktop/WISERStudentSystem/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yan/Desktop/WISERStudentSystem/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"/Users/yan/Desktop/WISERStudentSystem/client/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/Users/yan/Desktop/WISERStudentSystem/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _slicedToArray from \"/Users/yan/Desktop/WISERStudentSystem/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/yan/Desktop/WISERStudentSystem/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/yan/Desktop/WISERStudentSystem/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/yan/Desktop/WISERStudentSystem/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yan/Desktop/WISERStudentSystem/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*!\n * Chart.js v3.8.0\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as _color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _isPointInArea, C as getAngleFromPoint, D as toPadding, E as each, F as _getMaximumSize, G as _getParentNode, I as readUsedSize, J as throttled, K as supportsEventListenerOptions, L as _isDomSupported, M as log10, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as toDegrees, U as _measureText, V as _int16Range, W as _alignPixel, X as clipArea, Y as renderText, Z as unclipArea, $ as toFont, a0 as _toLeftRightCenter, a1 as _alignStartEnd, a2 as overrides, a3 as merge, a4 as _capitalize, a5 as descriptors, a6 as isFunction, a7 as _attachContext, a8 as _createResolver, a9 as _descriptors, aa as mergeIf, ab as uid, ac as debounce, ad as retinaScale, ae as clearCanvas, af as setsEqual, ag as _elementsEqual, ah as _isClickEvent, ai as _isBetween, aj as _readValueToProps, ak as _updateBezierControlPoints, al as _computeSegments, am as _boundSegments, an as _steppedInterpolation, ao as _bezierInterpolation, ap as _pointInLine, aq as _steppedLineTo, ar as _bezierCurveTo, as as drawPoint, at as addRoundedRectPath, au as toTRBL, av as toTRBLCorners, aw as _boundSegment, ax as _normalizeAngle, ay as getRtlAdapter, az as overrideTextDirection, aA as _textX, aB as restoreTextDirection, aC as noop, aD as distanceBetweenPoints, aE as _setMinAndMaxByKey, aF as niceNum, aG as almostWhole, aH as almostEquals, aI as _decimalPlaces, aJ as _longestText, aK as _filterBetween, aL as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nvar Animator =\n/*#__PURE__*/\nfunction () {\n  function Animator() {\n    _classCallCheck(this, Animator);\n\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  _createClass(Animator, [{\n    key: \"_notify\",\n    value: function _notify(chart, anims, date, type) {\n      var callbacks = anims.listeners[type];\n      var numSteps = anims.duration;\n      callbacks.forEach(function (fn) {\n        return fn({\n          chart: chart,\n          initial: anims.initial,\n          numSteps: numSteps,\n          currentStep: Math.min(date - anims.start, numSteps)\n        });\n      });\n    }\n  }, {\n    key: \"_refresh\",\n    value: function _refresh() {\n      var _this = this;\n\n      if (this._request) {\n        return;\n      }\n\n      this._running = true;\n      this._request = requestAnimFrame.call(window, function () {\n        _this._update();\n\n        _this._request = null;\n\n        if (_this._running) {\n          _this._refresh();\n        }\n      });\n    }\n  }, {\n    key: \"_update\",\n    value: function _update() {\n      var _this2 = this;\n\n      var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n      var remaining = 0;\n\n      this._charts.forEach(function (anims, chart) {\n        if (!anims.running || !anims.items.length) {\n          return;\n        }\n\n        var items = anims.items;\n        var i = items.length - 1;\n        var draw = false;\n        var item;\n\n        for (; i >= 0; --i) {\n          item = items[i];\n\n          if (item._active) {\n            if (item._total > anims.duration) {\n              anims.duration = item._total;\n            }\n\n            item.tick(date);\n            draw = true;\n          } else {\n            items[i] = items[items.length - 1];\n            items.pop();\n          }\n        }\n\n        if (draw) {\n          chart.draw();\n\n          _this2._notify(chart, anims, date, 'progress');\n        }\n\n        if (!items.length) {\n          anims.running = false;\n\n          _this2._notify(chart, anims, date, 'complete');\n\n          anims.initial = false;\n        }\n\n        remaining += items.length;\n      });\n\n      this._lastDate = date;\n\n      if (remaining === 0) {\n        this._running = false;\n      }\n    }\n  }, {\n    key: \"_getAnims\",\n    value: function _getAnims(chart) {\n      var charts = this._charts;\n      var anims = charts.get(chart);\n\n      if (!anims) {\n        anims = {\n          running: false,\n          initial: true,\n          items: [],\n          listeners: {\n            complete: [],\n            progress: []\n          }\n        };\n        charts.set(chart, anims);\n      }\n\n      return anims;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(chart, event, cb) {\n      this._getAnims(chart).listeners[event].push(cb);\n    }\n  }, {\n    key: \"add\",\n    value: function add(chart, items) {\n      var _this$_getAnims$items;\n\n      if (!items || !items.length) {\n        return;\n      }\n\n      (_this$_getAnims$items = this._getAnims(chart).items).push.apply(_this$_getAnims$items, _toConsumableArray(items));\n    }\n  }, {\n    key: \"has\",\n    value: function has(chart) {\n      return this._getAnims(chart).items.length > 0;\n    }\n  }, {\n    key: \"start\",\n    value: function start(chart) {\n      var anims = this._charts.get(chart);\n\n      if (!anims) {\n        return;\n      }\n\n      anims.running = true;\n      anims.start = Date.now();\n      anims.duration = anims.items.reduce(function (acc, cur) {\n        return Math.max(acc, cur._duration);\n      }, 0);\n\n      this._refresh();\n    }\n  }, {\n    key: \"running\",\n    value: function running(chart) {\n      if (!this._running) {\n        return false;\n      }\n\n      var anims = this._charts.get(chart);\n\n      if (!anims || !anims.running || !anims.items.length) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(chart) {\n      var anims = this._charts.get(chart);\n\n      if (!anims || !anims.items.length) {\n        return;\n      }\n\n      var items = anims.items;\n      var i = items.length - 1;\n\n      for (; i >= 0; --i) {\n        items[i].cancel();\n      }\n\n      anims.items = [];\n\n      this._notify(chart, anims, Date.now(), 'complete');\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(chart) {\n      return this._charts.delete(chart);\n    }\n  }]);\n\n  return Animator;\n}();\n\nvar animator = new Animator();\nvar transparent = 'transparent';\nvar interpolators = {\n  boolean: function boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color: function color(from, to, factor) {\n    var c0 = _color(from || transparent);\n\n    var c1 = c0.valid && _color(to || transparent);\n\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n  number: function number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nvar Animation =\n/*#__PURE__*/\nfunction () {\n  function Animation(cfg, target, prop, to) {\n    _classCallCheck(this, Animation);\n\n    var currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    var from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  _createClass(Animation, [{\n    key: \"active\",\n    value: function active() {\n      return this._active;\n    }\n  }, {\n    key: \"update\",\n    value: function update(cfg, to, date) {\n      if (this._active) {\n        this._notify(false);\n\n        var currentValue = this._target[this._prop];\n        var elapsed = date - this._start;\n        var remain = this._duration - elapsed;\n        this._start = date;\n        this._duration = Math.floor(Math.max(remain, cfg.duration));\n        this._total += elapsed;\n        this._loop = !!cfg.loop;\n        this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n        this._from = resolve([cfg.from, currentValue, to]);\n      }\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      if (this._active) {\n        this.tick(Date.now());\n        this._active = false;\n\n        this._notify(false);\n      }\n    }\n  }, {\n    key: \"tick\",\n    value: function tick(date) {\n      var elapsed = date - this._start;\n      var duration = this._duration;\n      var prop = this._prop;\n      var from = this._from;\n      var loop = this._loop;\n      var to = this._to;\n      var factor;\n      this._active = from !== to && (loop || elapsed < duration);\n\n      if (!this._active) {\n        this._target[prop] = to;\n\n        this._notify(true);\n\n        return;\n      }\n\n      if (elapsed < 0) {\n        this._target[prop] = from;\n        return;\n      }\n\n      factor = elapsed / duration % 2;\n      factor = loop && factor > 1 ? 2 - factor : factor;\n      factor = this._easing(Math.min(1, Math.max(0, factor)));\n      this._target[prop] = this._fn(from, to, factor);\n    }\n  }, {\n    key: \"wait\",\n    value: function wait() {\n      var promises = this._promises || (this._promises = []);\n      return new Promise(function (res, rej) {\n        promises.push({\n          res: res,\n          rej: rej\n        });\n      });\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(resolved) {\n      var method = resolved ? 'res' : 'rej';\n      var promises = this._promises || [];\n\n      for (var i = 0; i < promises.length; i++) {\n        promises[i][method]();\n      }\n    }\n  }]);\n\n  return Animation;\n}();\n\nvar numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nvar colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nvar animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: function _scriptable(name) {\n    return name !== 'onProgress' && name !== 'onComplete' && name !== 'fn';\n  }\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: function fn(v) {\n          return v | 0;\n        }\n      }\n    }\n  }\n});\n\nvar Animations =\n/*#__PURE__*/\nfunction () {\n  function Animations(chart, config) {\n    _classCallCheck(this, Animations);\n\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  _createClass(Animations, [{\n    key: \"configure\",\n    value: function configure(config) {\n      if (!isObject(config)) {\n        return;\n      }\n\n      var animatedProps = this._properties;\n      Object.getOwnPropertyNames(config).forEach(function (key) {\n        var cfg = config[key];\n\n        if (!isObject(cfg)) {\n          return;\n        }\n\n        var resolved = {};\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = animationOptions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var option = _step.value;\n            resolved[option] = cfg[option];\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        (isArray(cfg.properties) && cfg.properties || [key]).forEach(function (prop) {\n          if (prop === key || !animatedProps.has(prop)) {\n            animatedProps.set(prop, resolved);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_animateOptions\",\n    value: function _animateOptions(target, values) {\n      var newOptions = values.options;\n      var options = resolveTargetOptions(target, newOptions);\n\n      if (!options) {\n        return [];\n      }\n\n      var animations = this._createAnimations(options, newOptions);\n\n      if (newOptions.$shared) {\n        awaitAll(target.options.$animations, newOptions).then(function () {\n          target.options = newOptions;\n        }, function () {});\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"_createAnimations\",\n    value: function _createAnimations(target, values) {\n      var animatedProps = this._properties;\n      var animations = [];\n      var running = target.$animations || (target.$animations = {});\n      var props = Object.keys(values);\n      var date = Date.now();\n      var i;\n\n      for (i = props.length - 1; i >= 0; --i) {\n        var prop = props[i];\n\n        if (prop.charAt(0) === '$') {\n          continue;\n        }\n\n        if (prop === 'options') {\n          animations.push.apply(animations, _toConsumableArray(this._animateOptions(target, values)));\n          continue;\n        }\n\n        var value = values[prop];\n        var animation = running[prop];\n        var cfg = animatedProps.get(prop);\n\n        if (animation) {\n          if (cfg && animation.active()) {\n            animation.update(cfg, value, date);\n            continue;\n          } else {\n            animation.cancel();\n          }\n        }\n\n        if (!cfg || !cfg.duration) {\n          target[prop] = value;\n          continue;\n        }\n\n        running[prop] = animation = new Animation(cfg, target, prop, value);\n        animations.push(animation);\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"update\",\n    value: function update(target, values) {\n      if (this._properties.size === 0) {\n        Object.assign(target, values);\n        return;\n      }\n\n      var animations = this._createAnimations(target, values);\n\n      if (animations.length) {\n        animator.add(this._chart, animations);\n        return true;\n      }\n    }\n  }]);\n\n  return Animations;\n}();\n\nfunction awaitAll(animations, properties) {\n  var running = [];\n  var keys = Object.keys(properties);\n\n  for (var i = 0; i < keys.length; i++) {\n    var anim = animations[keys[i]];\n\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n\n  var options = target.options;\n\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  var opts = scale && scale.options || {};\n  var reverse = opts.reverse;\n  var min = opts.min === undefined ? allowedOverflow : 0;\n  var max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n\n  var x = scaleClip(xScale, allowedOverflow);\n  var y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  var t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  var keys = [];\n\n  var metasets = chart._getSortedDatasetMetas(filterVisible);\n\n  var i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n\n  return keys;\n}\n\nfunction _applyStack(stack, value, dsIndex) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var keys = stack.keys;\n  var singleMode = options.mode === 'single';\n  var i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n\n      break;\n    }\n\n    otherValue = stack.values[datasetIndex];\n\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  var keys = Object.keys(data);\n  var adata = new Array(keys.length);\n  var i, ilen, key;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  var stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return \"\".concat(indexScale.id, \".\").concat(valueScale.id, \".\").concat(meta.stack || meta.type);\n}\n\nfunction getUserBounds(scale) {\n  var _scale$getUserBounds = scale.getUserBounds(),\n      min = _scale$getUserBounds.min,\n      max = _scale$getUserBounds.max,\n      minDefined = _scale$getUserBounds.minDefined,\n      maxDefined = _scale$getUserBounds.maxDefined;\n\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  var subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = vScale.getMatchingVisibleMetas(type).reverse()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var meta = _step2.value;\n      var value = stack[meta.index];\n\n      if (positive && value > 0 || !positive && value < 0) {\n        return meta.index;\n      }\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  var chart = controller.chart,\n      meta = controller._cachedMeta;\n  var stacks = chart._stacks || (chart._stacks = {});\n  var iScale = meta.iScale,\n      vScale = meta.vScale,\n      datasetIndex = meta.index;\n  var iAxis = iScale.axis;\n  var vAxis = vScale.axis;\n  var key = getStackKey(iScale, vScale, meta);\n  var ilen = parsed.length;\n  var stack;\n\n  for (var i = 0; i < ilen; ++i) {\n    var item = parsed[i];\n    var _index = item[iAxis],\n        value = item[vAxis];\n    var itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, _index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  var scales = chart.scales;\n  return Object.keys(scales).filter(function (key) {\n    return scales[key].axis === axis;\n  }).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent, {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index: index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element: element,\n    index: index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  var datasetIndex = meta.controller.index;\n  var axis = meta.vScale && meta.vScale.axis;\n\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = items[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var parsed = _step3.value;\n      var stacks = parsed._stacks;\n\n      if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n        return;\n      }\n\n      delete stacks[axis][datasetIndex];\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n        _iterator3.return();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n}\n\nvar isDirectUpdateMode = function isDirectUpdateMode(mode) {\n  return mode === 'reset' || mode === 'none';\n};\n\nvar cloneIfNotShared = function cloneIfNotShared(cached, shared) {\n  return shared ? cached : Object.assign({}, cached);\n};\n\nvar createStack = function createStack(canStack, meta, chart) {\n  return canStack && !meta.hidden && meta._stacked && {\n    keys: getSortedDatasetIndices(chart, true),\n    values: null\n  };\n};\n\nvar DatasetController =\n/*#__PURE__*/\nfunction () {\n  function DatasetController(chart, datasetIndex) {\n    _classCallCheck(this, DatasetController);\n\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n\n  _createClass(DatasetController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      var meta = this._cachedMeta;\n      this.configure();\n      this.linkScales();\n      meta._stacked = isStacked(meta.vScale, meta);\n      this.addElements();\n    }\n  }, {\n    key: \"updateIndex\",\n    value: function updateIndex(datasetIndex) {\n      if (this.index !== datasetIndex) {\n        clearStacks(this._cachedMeta);\n      }\n\n      this.index = datasetIndex;\n    }\n  }, {\n    key: \"linkScales\",\n    value: function linkScales() {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var dataset = this.getDataset();\n\n      var chooseId = function chooseId(axis, x, y, r) {\n        return axis === 'x' ? x : axis === 'r' ? r : y;\n      };\n\n      var xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n      var yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n      var rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n      var indexAxis = meta.indexAxis;\n      var iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n      var vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n      meta.xScale = this.getScaleForId(xid);\n      meta.yScale = this.getScaleForId(yid);\n      meta.rScale = this.getScaleForId(rid);\n      meta.iScale = this.getScaleForId(iid);\n      meta.vScale = this.getScaleForId(vid);\n    }\n  }, {\n    key: \"getDataset\",\n    value: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    }\n  }, {\n    key: \"getMeta\",\n    value: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    }\n  }, {\n    key: \"getScaleForId\",\n    value: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    }\n  }, {\n    key: \"_getOtherScale\",\n    value: function _getOtherScale(scale) {\n      var meta = this._cachedMeta;\n      return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._update('reset');\n    }\n  }, {\n    key: \"_destroy\",\n    value: function _destroy() {\n      var meta = this._cachedMeta;\n\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n\n      if (meta._stacked) {\n        clearStacks(meta);\n      }\n    }\n  }, {\n    key: \"_dataCheck\",\n    value: function _dataCheck() {\n      var dataset = this.getDataset();\n      var data = dataset.data || (dataset.data = []);\n      var _data = this._data;\n\n      if (isObject(data)) {\n        this._data = convertObjectDataToArray(data);\n      } else if (_data !== data) {\n        if (_data) {\n          unlistenArrayEvents(_data, this);\n          var meta = this._cachedMeta;\n          clearStacks(meta);\n          meta._parsed = [];\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, this);\n        }\n\n        this._syncList = [];\n        this._data = data;\n      }\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      var meta = this._cachedMeta;\n\n      this._dataCheck();\n\n      if (this.datasetElementType) {\n        meta.dataset = new this.datasetElementType();\n      }\n    }\n  }, {\n    key: \"buildOrUpdateElements\",\n    value: function buildOrUpdateElements(resetNewElements) {\n      var meta = this._cachedMeta;\n      var dataset = this.getDataset();\n      var stackChanged = false;\n\n      this._dataCheck();\n\n      var oldStacked = meta._stacked;\n      meta._stacked = isStacked(meta.vScale, meta);\n\n      if (meta.stack !== dataset.stack) {\n        stackChanged = true;\n        clearStacks(meta);\n        meta.stack = dataset.stack;\n      }\n\n      this._resyncElements(resetNewElements);\n\n      if (stackChanged || oldStacked !== meta._stacked) {\n        updateStacks(this, meta._parsed);\n      }\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var config = this.chart.config;\n      var scopeKeys = config.datasetScopeKeys(this._type);\n      var scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n      this.options = config.createResolver(scopes, this.getContext());\n      this._parsing = this.options.parsing;\n      this._cachedDataOpts = {};\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var meta = this._cachedMeta,\n          data = this._data;\n      var iScale = meta.iScale,\n          _stacked = meta._stacked;\n      var iAxis = iScale.axis;\n      var sorted = start === 0 && count === data.length ? true : meta._sorted;\n      var prev = start > 0 && meta._parsed[start - 1];\n      var i, cur, parsed;\n\n      if (this._parsing === false) {\n        meta._parsed = data;\n        meta._sorted = true;\n        parsed = data;\n      } else {\n        if (isArray(data[start])) {\n          parsed = this.parseArrayData(meta, data, start, count);\n        } else if (isObject(data[start])) {\n          parsed = this.parseObjectData(meta, data, start, count);\n        } else {\n          parsed = this.parsePrimitiveData(meta, data, start, count);\n        }\n\n        var isNotInOrderComparedToPrev = function isNotInOrderComparedToPrev() {\n          return cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n        };\n\n        for (i = 0; i < count; ++i) {\n          meta._parsed[i + start] = cur = parsed[i];\n\n          if (sorted) {\n            if (isNotInOrderComparedToPrev()) {\n              sorted = false;\n            }\n\n            prev = cur;\n          }\n        }\n\n        meta._sorted = sorted;\n      }\n\n      if (_stacked) {\n        updateStacks(this, parsed);\n      }\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var iScale = meta.iScale,\n          vScale = meta.vScale;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var labels = iScale.getLabels();\n      var singleScale = iScale === vScale;\n      var parsed = new Array(count);\n      var i, ilen, index;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        var _parsed$i;\n\n        index = i + start;\n        parsed[i] = (_parsed$i = {}, _defineProperty(_parsed$i, iAxis, singleScale || iScale.parse(labels[index], index)), _defineProperty(_parsed$i, vAxis, vScale.parse(data[index], index)), _parsed$i);\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(item[0], index),\n          y: yScale.parse(item[1], index)\n        };\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var _this$_parsing = this._parsing,\n          _this$_parsing$xAxisK = _this$_parsing.xAxisKey,\n          xAxisKey = _this$_parsing$xAxisK === void 0 ? 'x' : _this$_parsing$xAxisK,\n          _this$_parsing$yAxisK = _this$_parsing.yAxisKey,\n          yAxisKey = _this$_parsing$yAxisK === void 0 ? 'y' : _this$_parsing$yAxisK;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n        };\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"getParsed\",\n    value: function getParsed(index) {\n      return this._cachedMeta._parsed[index];\n    }\n  }, {\n    key: \"getDataElement\",\n    value: function getDataElement(index) {\n      return this._cachedMeta.data[index];\n    }\n  }, {\n    key: \"applyStack\",\n    value: function applyStack(scale, parsed, mode) {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var value = parsed[scale.axis];\n      var stack = {\n        keys: getSortedDatasetIndices(chart, true),\n        values: parsed._stacks[scale.axis]\n      };\n      return _applyStack(stack, value, meta.index, {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      var parsedValue = parsed[scale.axis];\n      var value = parsedValue === null ? NaN : parsedValue;\n      var values = stack && parsed._stacks[scale.axis];\n\n      if (stack && values) {\n        stack.values = values;\n        value = _applyStack(stack, parsedValue, this._cachedMeta.index);\n      }\n\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(scale, canStack) {\n      var meta = this._cachedMeta;\n      var _parsed = meta._parsed;\n      var sorted = meta._sorted && scale === meta.iScale;\n      var ilen = _parsed.length;\n\n      var otherScale = this._getOtherScale(scale);\n\n      var stack = createStack(canStack, meta, this.chart);\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n\n      var _getUserBounds = getUserBounds(otherScale),\n          otherMin = _getUserBounds.min,\n          otherMax = _getUserBounds.max;\n\n      var i, parsed;\n\n      function _skip() {\n        parsed = _parsed[i];\n        var otherValue = parsed[otherScale.axis];\n        return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n      }\n\n      for (i = 0; i < ilen; ++i) {\n        if (_skip()) {\n          continue;\n        }\n\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n\n        if (sorted) {\n          break;\n        }\n      }\n\n      if (sorted) {\n        for (i = ilen - 1; i >= 0; --i) {\n          if (_skip()) {\n            continue;\n          }\n\n          this.updateRangeFromParsed(range, scale, parsed, stack);\n          break;\n        }\n      }\n\n      return range;\n    }\n  }, {\n    key: \"getAllParsedValues\",\n    value: function getAllParsedValues(scale) {\n      var parsed = this._cachedMeta._parsed;\n      var values = [];\n      var i, ilen, value;\n\n      for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n        value = parsed[i][scale.axis];\n\n        if (isNumberFinite(value)) {\n          values.push(value);\n        }\n      }\n\n      return values;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return false;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale;\n      var vScale = meta.vScale;\n      var parsed = this.getParsed(index);\n      return {\n        label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n        value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n      };\n    }\n  }, {\n    key: \"_update\",\n    value: function _update(mode) {\n      var meta = this._cachedMeta;\n      this.update(mode || 'default');\n      meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {}\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var ctx = this._ctx;\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var elements = meta.data || [];\n      var area = chart.chartArea;\n      var active = [];\n      var start = this._drawStart || 0;\n      var count = this._drawCount || elements.length - start;\n      var drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n      var i;\n\n      if (meta.dataset) {\n        meta.dataset.draw(ctx, area, start, count);\n      }\n\n      for (i = start; i < start + count; ++i) {\n        var element = elements[i];\n\n        if (element.hidden) {\n          continue;\n        }\n\n        if (element.active && drawActiveElementsOnTop) {\n          active.push(element);\n        } else {\n          element.draw(ctx, area);\n        }\n      }\n\n      for (i = 0; i < active.length; ++i) {\n        active[i].draw(ctx, area);\n      }\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle(index, active) {\n      var mode = active ? 'active' : 'default';\n      return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index, active, mode) {\n      var dataset = this.getDataset();\n      var context;\n\n      if (index >= 0 && index < this._cachedMeta.data.length) {\n        var element = this._cachedMeta.data[index];\n        context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n        context.parsed = this.getParsed(index);\n        context.raw = dataset.data[index];\n        context.index = context.dataIndex = index;\n      } else {\n        context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n        context.dataset = dataset;\n        context.index = context.datasetIndex = this.index;\n      }\n\n      context.active = !!active;\n      context.mode = mode;\n      return context;\n    }\n  }, {\n    key: \"resolveDatasetElementOptions\",\n    value: function resolveDatasetElementOptions(mode) {\n      return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n  }, {\n    key: \"_resolveElementOptions\",\n    value: function _resolveElementOptions(elementType) {\n      var _this3 = this;\n\n      var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n      var index = arguments.length > 2 ? arguments[2] : undefined;\n      var active = mode === 'active';\n      var cache = this._cachedDataOpts;\n      var cacheKey = elementType + '-' + mode;\n      var cached = cache[cacheKey];\n      var sharing = this.enableOptionSharing && defined(index);\n\n      if (cached) {\n        return cloneIfNotShared(cached, sharing);\n      }\n\n      var config = this.chart.config;\n      var scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n      var prefixes = active ? [\"\".concat(elementType, \"Hover\"), 'hover', elementType, ''] : [elementType, ''];\n      var scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      var names = Object.keys(defaults.elements[elementType]);\n\n      var context = function context() {\n        return _this3.getContext(index, active);\n      };\n\n      var values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n      if (values.$shared) {\n        values.$shared = sharing;\n        cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n      }\n\n      return values;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations(index, transition, active) {\n      var chart = this.chart;\n      var cache = this._cachedDataOpts;\n      var cacheKey = \"animation-\".concat(transition);\n      var cached = cache[cacheKey];\n\n      if (cached) {\n        return cached;\n      }\n\n      var options;\n\n      if (chart.options.animation !== false) {\n        var config = this.chart.config;\n        var scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n        var scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        options = config.createResolver(scopes, this.getContext(index, active, transition));\n      }\n\n      var animations = new Animations(chart, options && options.animations);\n\n      if (options && options._cacheable) {\n        cache[cacheKey] = Object.freeze(animations);\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"getSharedOptions\",\n    value: function getSharedOptions(options) {\n      if (!options.$shared) {\n        return;\n      }\n\n      return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n  }, {\n    key: \"includeOptions\",\n    value: function includeOptions(mode, sharedOptions) {\n      return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n  }, {\n    key: \"updateElement\",\n    value: function updateElement(element, index, properties, mode) {\n      if (isDirectUpdateMode(mode)) {\n        Object.assign(element, properties);\n      } else {\n        this._resolveAnimations(index, mode).update(element, properties);\n      }\n    }\n  }, {\n    key: \"updateSharedOptions\",\n    value: function updateSharedOptions(sharedOptions, mode, newOptions) {\n      if (sharedOptions && !isDirectUpdateMode(mode)) {\n        this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n      }\n    }\n  }, {\n    key: \"_setStyle\",\n    value: function _setStyle(element, index, mode, active) {\n      element.active = active;\n      var options = this.getStyle(index, active);\n\n      this._resolveAnimations(index, mode, active).update(element, {\n        options: !active && this.getSharedOptions(options) || options\n      });\n    }\n  }, {\n    key: \"removeHoverStyle\",\n    value: function removeHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', false);\n    }\n  }, {\n    key: \"setHoverStyle\",\n    value: function setHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', true);\n    }\n  }, {\n    key: \"_removeDatasetHoverStyle\",\n    value: function _removeDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n\n      if (element) {\n        this._setStyle(element, undefined, 'active', false);\n      }\n    }\n  }, {\n    key: \"_setDatasetHoverStyle\",\n    value: function _setDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n\n      if (element) {\n        this._setStyle(element, undefined, 'active', true);\n      }\n    }\n  }, {\n    key: \"_resyncElements\",\n    value: function _resyncElements(resetNewElements) {\n      var data = this._data;\n      var elements = this._cachedMeta.data;\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this._syncList[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var _step4$value = _slicedToArray(_step4.value, 3),\n              method = _step4$value[0],\n              arg1 = _step4$value[1],\n              arg2 = _step4$value[2];\n\n          this[method](arg1, arg2);\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      this._syncList = [];\n      var numMeta = elements.length;\n      var numData = data.length;\n      var count = Math.min(numData, numMeta);\n\n      if (count) {\n        this.parse(0, count);\n      }\n\n      if (numData > numMeta) {\n        this._insertElements(numMeta, numData - numMeta, resetNewElements);\n      } else if (numData < numMeta) {\n        this._removeElements(numData, numMeta - numData);\n      }\n    }\n  }, {\n    key: \"_insertElements\",\n    value: function _insertElements(start, count) {\n      var resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var meta = this._cachedMeta;\n      var data = meta.data;\n      var end = start + count;\n      var i;\n\n      var move = function move(arr) {\n        arr.length += count;\n\n        for (i = arr.length - 1; i >= end; i--) {\n          arr[i] = arr[i - count];\n        }\n      };\n\n      move(data);\n\n      for (i = start; i < end; ++i) {\n        data[i] = new this.dataElementType();\n      }\n\n      if (this._parsing) {\n        move(meta._parsed);\n      }\n\n      this.parse(start, count);\n\n      if (resetNewElements) {\n        this.updateElements(data, start, count, 'reset');\n      }\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(element, start, count, mode) {}\n  }, {\n    key: \"_removeElements\",\n    value: function _removeElements(start, count) {\n      var meta = this._cachedMeta;\n\n      if (this._parsing) {\n        var removed = meta._parsed.splice(start, count);\n\n        if (meta._stacked) {\n          clearStacks(meta, removed);\n        }\n      }\n\n      meta.data.splice(start, count);\n    }\n  }, {\n    key: \"_sync\",\n    value: function _sync(args) {\n      if (this._parsing) {\n        this._syncList.push(args);\n      } else {\n        var _args2 = _slicedToArray(args, 3),\n            method = _args2[0],\n            arg1 = _args2[1],\n            arg2 = _args2[2];\n\n        this[method](arg1, arg2);\n      }\n\n      this.chart._dataChanges.push([this.index].concat(_toConsumableArray(args)));\n    }\n  }, {\n    key: \"_onDataPush\",\n    value: function _onDataPush() {\n      var count = arguments.length;\n\n      this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n    }\n  }, {\n    key: \"_onDataPop\",\n    value: function _onDataPop() {\n      this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n    }\n  }, {\n    key: \"_onDataShift\",\n    value: function _onDataShift() {\n      this._sync(['_removeElements', 0, 1]);\n    }\n  }, {\n    key: \"_onDataSplice\",\n    value: function _onDataSplice(start, count) {\n      if (count) {\n        this._sync(['_removeElements', start, count]);\n      }\n\n      var newCount = arguments.length - 2;\n\n      if (newCount) {\n        this._sync(['_insertElements', start, newCount]);\n      }\n    }\n  }, {\n    key: \"_onDataUnshift\",\n    value: function _onDataUnshift() {\n      this._sync(['_insertElements', 0, arguments.length]);\n    }\n  }]);\n\n  return DatasetController;\n}();\n\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    var visibleMetas = scale.getMatchingVisibleMetas(type);\n    var values = [];\n\n    for (var i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n\n    scale._cache.$bar = _arrayUnique(values.sort(function (a, b) {\n      return a - b;\n    }));\n  }\n\n  return scale._cache.$bar;\n}\n\nfunction computeMinSampleSize(meta) {\n  var scale = meta.iScale;\n  var values = getAllScaleValues(scale, meta.type);\n  var min = scale._length;\n  var i, ilen, curr, prev;\n\n  var updateMinAndPrev = function updateMinAndPrev() {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  var thickness = options.barThickness;\n  var size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio: ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\n\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n\n  var start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  var size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  var startValue = vScale.parse(entry[0], i);\n  var endValue = vScale.parse(entry[1], i);\n  var min = Math.min(startValue, endValue);\n  var max = Math.max(startValue, endValue);\n  var barStart = min;\n  var barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart: barStart,\n    barEnd: barEnd,\n    start: startValue,\n    end: endValue,\n    min: min,\n    max: max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  var iScale = meta.iScale;\n  var vScale = meta.vScale;\n  var labels = iScale.getLabels();\n  var singleScale = iScale === vScale;\n  var parsed = [];\n  var i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  var reverse, start, end, top, bottom;\n\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n\n  return {\n    start: start,\n    end: end,\n    reverse: reverse,\n    top: top,\n    bottom: bottom\n  };\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  var edge = options.borderSkipped;\n  var res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  var _borderProps = borderProps(properties),\n      start = _borderProps.start,\n      end = _borderProps.end,\n      reverse = _borderProps.reverse,\n      top = _borderProps.top,\n      bottom = _borderProps.bottom;\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, _ref, ratio) {\n  var inflateAmount = _ref.inflateAmount;\n  properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\n\nvar BarController =\n/*#__PURE__*/\nfunction (_DatasetController) {\n  _inherits(BarController, _DatasetController);\n\n  function BarController() {\n    _classCallCheck(this, BarController);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BarController).apply(this, arguments));\n  }\n\n  _createClass(BarController, [{\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var iScale = meta.iScale,\n          vScale = meta.vScale;\n      var _this$_parsing2 = this._parsing,\n          _this$_parsing2$xAxis = _this$_parsing2.xAxisKey,\n          xAxisKey = _this$_parsing2$xAxis === void 0 ? 'x' : _this$_parsing2$xAxis,\n          _this$_parsing2$yAxis = _this$_parsing2.yAxisKey,\n          yAxisKey = _this$_parsing2$yAxis === void 0 ? 'y' : _this$_parsing2$yAxis;\n      var iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var parsed = [];\n      var i, ilen, item, obj;\n\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        obj = data[i];\n        item = {};\n        item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n        parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      _get(_getPrototypeOf(BarController.prototype), \"updateRangeFromParsed\", this).call(this, range, scale, parsed, stack);\n\n      var custom = parsed._custom;\n\n      if (custom && scale === this._cachedMeta.vScale) {\n        range.min = Math.min(range.min, custom.min);\n        range.max = Math.max(range.max, custom.max);\n      }\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale,\n          vScale = meta.vScale;\n      var parsed = this.getParsed(index);\n      var custom = parsed._custom;\n      var value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n      return {\n        label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n        value: value\n      };\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n\n      _get(_getPrototypeOf(BarController.prototype), \"initialize\", this).call(this);\n\n      var meta = this._cachedMeta;\n      meta.stack = this.getDataset().stack;\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(bars, start, count, mode) {\n      var reset = mode === 'reset';\n      var index = this.index,\n          vScale = this._cachedMeta.vScale;\n      var base = vScale.getBasePixel();\n      var horizontal = vScale.isHorizontal();\n\n      var ruler = this._getRuler();\n\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions);\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n\n      for (var i = start; i < start + count; i++) {\n        var parsed = this.getParsed(i);\n        var vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n          base: base,\n          head: base\n        } : this._calculateBarValuePixels(i);\n\n        var ipixels = this._calculateBarIndexPixels(i, ruler);\n\n        var stack = (parsed._stacks || {})[vScale.axis];\n        var properties = {\n          horizontal: horizontal,\n          base: vpixels.base,\n          enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n          x: horizontal ? vpixels.head : ipixels.center,\n          y: horizontal ? ipixels.center : vpixels.head,\n          height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n          width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n        };\n\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n        }\n\n        var options = properties.options || bars[i].options;\n        setBorderSkipped(properties, options, stack, index);\n        setInflateAmount(properties, options, ruler.ratio);\n        this.updateElement(bars[i], i, properties, mode);\n      }\n    }\n  }, {\n    key: \"_getStacks\",\n    value: function _getStacks(last, dataIndex) {\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale;\n      var metasets = iScale.getMatchingVisibleMetas(this._type);\n      var stacked = iScale.options.stacked;\n      var ilen = metasets.length;\n      var stacks = [];\n      var i, item;\n\n      for (i = 0; i < ilen; ++i) {\n        item = metasets[i];\n\n        if (!item.controller.options.grouped) {\n          continue;\n        }\n\n        if (typeof dataIndex !== 'undefined') {\n          var val = item.controller.getParsed(dataIndex)[item.controller._cachedMeta.vScale.axis];\n\n          if (isNullOrUndef(val) || isNaN(val)) {\n            continue;\n          }\n        }\n\n        if (stacked === false || stacks.indexOf(item.stack) === -1 || stacked === undefined && item.stack === undefined) {\n          stacks.push(item.stack);\n        }\n\n        if (item.index === last) {\n          break;\n        }\n      }\n\n      if (!stacks.length) {\n        stacks.push(undefined);\n      }\n\n      return stacks;\n    }\n  }, {\n    key: \"_getStackCount\",\n    value: function _getStackCount(index) {\n      return this._getStacks(undefined, index).length;\n    }\n  }, {\n    key: \"_getStackIndex\",\n    value: function _getStackIndex(datasetIndex, name, dataIndex) {\n      var stacks = this._getStacks(datasetIndex, dataIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1;\n      return index === -1 ? stacks.length - 1 : index;\n    }\n  }, {\n    key: \"_getRuler\",\n    value: function _getRuler() {\n      var opts = this.options;\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale;\n      var pixels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n        pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n      }\n\n      var barThickness = opts.barThickness;\n      var min = barThickness || computeMinSampleSize(meta);\n      return {\n        min: min,\n        pixels: pixels,\n        start: iScale._startPixel,\n        end: iScale._endPixel,\n        stackCount: this._getStackCount(),\n        scale: iScale,\n        grouped: opts.grouped,\n        ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n      };\n    }\n  }, {\n    key: \"_calculateBarValuePixels\",\n    value: function _calculateBarValuePixels(index) {\n      var _this$_cachedMeta = this._cachedMeta,\n          vScale = _this$_cachedMeta.vScale,\n          _stacked = _this$_cachedMeta._stacked,\n          _this$options = this.options,\n          baseValue = _this$options.base,\n          minBarLength = _this$options.minBarLength;\n      var actualBase = baseValue || 0;\n      var parsed = this.getParsed(index);\n      var custom = parsed._custom;\n      var floating = isFloatBar(custom);\n      var value = parsed[vScale.axis];\n      var start = 0;\n      var length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n      var head, size;\n\n      if (length !== value) {\n        start = length - value;\n        length = value;\n      }\n\n      if (floating) {\n        value = custom.barStart;\n        length = custom.barEnd - custom.barStart;\n\n        if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n          start = 0;\n        }\n\n        start += value;\n      }\n\n      var startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n      var base = vScale.getPixelForValue(startValue);\n\n      if (this.chart.getDataVisibility(index)) {\n        head = vScale.getPixelForValue(start + length);\n      } else {\n        head = base;\n      }\n\n      size = head - base;\n\n      if (Math.abs(size) < minBarLength) {\n        size = barSign(size, vScale, actualBase) * minBarLength;\n\n        if (value === actualBase) {\n          base -= size / 2;\n        }\n\n        var startPixel = vScale.getPixelForDecimal(0);\n        var endPixel = vScale.getPixelForDecimal(1);\n        var min = Math.min(startPixel, endPixel);\n        var max = Math.max(startPixel, endPixel);\n        base = Math.max(Math.min(base, max), min);\n        head = base + size;\n      }\n\n      if (base === vScale.getPixelForValue(actualBase)) {\n        var halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n        base += halfGrid;\n        size -= halfGrid;\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    }\n  }, {\n    key: \"_calculateBarIndexPixels\",\n    value: function _calculateBarIndexPixels(index, ruler) {\n      var scale = ruler.scale;\n      var options = this.options;\n      var skipNull = options.skipNull;\n      var maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n      var center, size;\n\n      if (ruler.grouped) {\n        var stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n        var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n        var stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n\n        center = range.start + range.chunk * stackIndex + range.chunk / 2;\n        size = Math.min(maxBarThickness, range.chunk * range.ratio);\n      } else {\n        center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n        size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n      }\n\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      var vScale = meta.vScale;\n      var rects = meta.data;\n      var ilen = rects.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        if (this.getParsed(i)[vScale.axis] !== null) {\n          rects[i].draw(this._ctx);\n        }\n      }\n    }\n  }]);\n\n  return BarController;\n}(DatasetController);\n\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\n\nvar BubbleController =\n/*#__PURE__*/\nfunction (_DatasetController2) {\n  _inherits(BubbleController, _DatasetController2);\n\n  function BubbleController() {\n    _classCallCheck(this, BubbleController);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BubbleController).apply(this, arguments));\n  }\n\n  _createClass(BubbleController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n\n      _get(_getPrototypeOf(BubbleController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var parsed = _get(_getPrototypeOf(BubbleController.prototype), \"parsePrimitiveData\", this).call(this, meta, data, start, count);\n\n      for (var i = 0; i < parsed.length; i++) {\n        parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var parsed = _get(_getPrototypeOf(BubbleController.prototype), \"parseArrayData\", this).call(this, meta, data, start, count);\n\n      for (var i = 0; i < parsed.length; i++) {\n        var item = data[start + i];\n        parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var parsed = _get(_getPrototypeOf(BubbleController.prototype), \"parseObjectData\", this).call(this, meta, data, start, count);\n\n      for (var i = 0; i < parsed.length; i++) {\n        var item = data[start + i];\n        parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var data = this._cachedMeta.data;\n      var max = 0;\n\n      for (var i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n\n      return max > 0 && max;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var parsed = this.getParsed(index);\n      var x = xScale.getLabelForValue(parsed.x);\n      var y = yScale.getLabelForValue(parsed.y);\n      var r = parsed._custom;\n      return {\n        label: meta.label,\n        value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var points = this._cachedMeta.data;\n      this.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta2 = this._cachedMeta,\n          iScale = _this$_cachedMeta2.iScale,\n          vScale = _this$_cachedMeta2.vScale;\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions);\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var parsed = !reset && this.getParsed(i);\n        var properties = {};\n        var iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n        var vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n        if (includeOptions) {\n          properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n          if (reset) {\n            properties.options.radius = 0;\n          }\n        }\n\n        this.updateElement(point, i, properties, mode);\n      }\n\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      var parsed = this.getParsed(index);\n\n      var values = _get(_getPrototypeOf(BubbleController.prototype), \"resolveDataElementOptions\", this).call(this, index, mode);\n\n      if (values.$shared) {\n        values = Object.assign({}, values, {\n          $shared: false\n        });\n      }\n\n      var radius = values.radius;\n\n      if (mode !== 'active') {\n        values.radius = 0;\n      }\n\n      values.radius += valueOrDefault(parsed && parsed._custom, radius);\n      return values;\n    }\n  }]);\n\n  return BubbleController;\n}(DatasetController);\n\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  var ratioX = 1;\n  var ratioY = 1;\n  var offsetX = 0;\n  var offsetY = 0;\n\n  if (circumference < TAU) {\n    var startAngle = rotation;\n    var endAngle = startAngle + circumference;\n    var startX = Math.cos(startAngle);\n    var startY = Math.sin(startAngle);\n    var endX = Math.cos(endAngle);\n    var endY = Math.sin(endAngle);\n\n    var calcMax = function calcMax(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    };\n\n    var calcMin = function calcMin(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    };\n\n    var maxX = calcMax(0, startX, endX);\n    var maxY = calcMax(HALF_PI, startY, endY);\n    var minX = calcMin(PI, startX, endX);\n    var minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n\n  return {\n    ratioX: ratioX,\n    ratioY: ratioY,\n    offsetX: offsetX,\n    offsetY: offsetY\n  };\n}\n\nvar DoughnutController =\n/*#__PURE__*/\nfunction (_DatasetController3) {\n  _inherits(DoughnutController, _DatasetController3);\n\n  function DoughnutController(chart, datasetIndex) {\n    var _this4;\n\n    _classCallCheck(this, DoughnutController);\n\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(DoughnutController).call(this, chart, datasetIndex));\n    _this4.enableOptionSharing = true;\n    _this4.innerRadius = undefined;\n    _this4.outerRadius = undefined;\n    _this4.offsetX = undefined;\n    _this4.offsetY = undefined;\n    return _this4;\n  }\n\n  _createClass(DoughnutController, [{\n    key: \"linkScales\",\n    value: function linkScales() {}\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var data = this.getDataset().data;\n      var meta = this._cachedMeta;\n\n      if (this._parsing === false) {\n        meta._parsed = data;\n      } else {\n        var getter = function getter(i) {\n          return +data[i];\n        };\n\n        if (isObject(data[start])) {\n          var _this$_parsing$key = this._parsing.key,\n              key = _this$_parsing$key === void 0 ? 'value' : _this$_parsing$key;\n\n          getter = function getter(i) {\n            return +resolveObjectKey(data[i], key);\n          };\n        }\n\n        var i, ilen;\n\n        for (i = start, ilen = start + count; i < ilen; ++i) {\n          meta._parsed[i] = getter(i);\n        }\n      }\n    }\n  }, {\n    key: \"_getRotation\",\n    value: function _getRotation() {\n      return toRadians(this.options.rotation - 90);\n    }\n  }, {\n    key: \"_getCircumference\",\n    value: function _getCircumference() {\n      return toRadians(this.options.circumference);\n    }\n  }, {\n    key: \"_getRotationExtents\",\n    value: function _getRotationExtents() {\n      var min = TAU;\n      var max = -TAU;\n\n      for (var i = 0; i < this.chart.data.datasets.length; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          var controller = this.chart.getDatasetMeta(i).controller;\n\n          var rotation = controller._getRotation();\n\n          var circumference = controller._getCircumference();\n\n          min = Math.min(min, rotation);\n          max = Math.max(max, rotation + circumference);\n        }\n      }\n\n      return {\n        rotation: min,\n        circumference: max - min\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var meta = this._cachedMeta;\n      var arcs = meta.data;\n      var spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n      var maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n      var cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n\n      var chartWeight = this._getRingWeight(this.index);\n\n      var _this$_getRotationExt = this._getRotationExtents(),\n          circumference = _this$_getRotationExt.circumference,\n          rotation = _this$_getRotationExt.rotation;\n\n      var _getRatioAndOffset = getRatioAndOffset(rotation, circumference, cutout),\n          ratioX = _getRatioAndOffset.ratioX,\n          ratioY = _getRatioAndOffset.ratioY,\n          offsetX = _getRatioAndOffset.offsetX,\n          offsetY = _getRatioAndOffset.offsetY;\n\n      var maxWidth = (chartArea.width - spacing) / ratioX;\n      var maxHeight = (chartArea.height - spacing) / ratioY;\n      var maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n      var outerRadius = toDimension(this.options.radius, maxRadius);\n      var innerRadius = Math.max(outerRadius * cutout, 0);\n\n      var radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n\n      this.offsetX = offsetX * outerRadius;\n      this.offsetY = offsetY * outerRadius;\n      meta.total = this.calculateTotal();\n      this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n      this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"_circumference\",\n    value: function _circumference(i, reset) {\n      var opts = this.options;\n      var meta = this._cachedMeta;\n\n      var circumference = this._getCircumference();\n\n      if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n        return 0;\n      }\n\n      return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var reset = mode === 'reset';\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var animateScale = reset && animationOpts.animateScale;\n      var innerRadius = animateScale ? 0 : this.innerRadius;\n      var outerRadius = animateScale ? 0 : this.outerRadius;\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions);\n\n      var startAngle = this._getRotation();\n\n      var i;\n\n      for (i = 0; i < start; ++i) {\n        startAngle += this._circumference(i, reset);\n      }\n\n      for (i = start; i < start + count; ++i) {\n        var circumference = this._circumference(i, reset);\n\n        var arc = arcs[i];\n        var properties = {\n          x: centerX + this.offsetX,\n          y: centerY + this.offsetY,\n          startAngle: startAngle,\n          endAngle: startAngle + circumference,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius\n        };\n\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n        }\n\n        startAngle += circumference;\n        this.updateElement(arc, i, properties, mode);\n      }\n\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"calculateTotal\",\n    value: function calculateTotal() {\n      var meta = this._cachedMeta;\n      var metaData = meta.data;\n      var total = 0;\n      var i;\n\n      for (i = 0; i < metaData.length; i++) {\n        var value = meta._parsed[i];\n\n        if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n          total += Math.abs(value);\n        }\n      }\n\n      return total;\n    }\n  }, {\n    key: \"calculateCircumference\",\n    value: function calculateCircumference(value) {\n      var total = this._cachedMeta.total;\n\n      if (total > 0 && !isNaN(value)) {\n        return TAU * (Math.abs(value) / total);\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var chart = this.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index], chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"getMaxBorderWidth\",\n    value: function getMaxBorderWidth(arcs) {\n      var max = 0;\n      var chart = this.chart;\n      var i, ilen, meta, controller, options;\n\n      if (!arcs) {\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n            controller = meta.controller;\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        options = controller.resolveDataElementOptions(i);\n\n        if (options.borderAlign !== 'inner') {\n          max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n        }\n      }\n\n      return max;\n    }\n  }, {\n    key: \"getMaxOffset\",\n    value: function getMaxOffset(arcs) {\n      var max = 0;\n\n      for (var i = 0, ilen = arcs.length; i < ilen; ++i) {\n        var options = this.resolveDataElementOptions(i);\n        max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n      }\n\n      return max;\n    }\n  }, {\n    key: \"_getRingWeightOffset\",\n    value: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    }\n  }, {\n    key: \"_getRingWeight\",\n    value: function _getRingWeight(datasetIndex) {\n      return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n  }, {\n    key: \"_getVisibleDatasetWeightTotal\",\n    value: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n  }]);\n\n  return DoughnutController;\n}(DatasetController);\n\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n};\nDoughnutController.descriptors = {\n  _scriptable: function _scriptable(name) {\n    return name !== 'spacing';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'spacing';\n  }\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            var pointStyle = chart.legend.options.labels.pointStyle;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem) {\n          var dataLabel = tooltipItem.label;\n          var value = ': ' + tooltipItem.formattedValue;\n\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nvar LineController =\n/*#__PURE__*/\nfunction (_DatasetController4) {\n  _inherits(LineController, _DatasetController4);\n\n  function LineController() {\n    _classCallCheck(this, LineController);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(LineController).apply(this, arguments));\n  }\n\n  _createClass(LineController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      this.supportsDecimation = true;\n\n      _get(_getPrototypeOf(LineController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var line = meta.dataset,\n          _meta$data = meta.data,\n          points = _meta$data === void 0 ? [] : _meta$data,\n          _dataset = meta._dataset;\n      var animationsDisabled = this.chart._animationsDisabled;\n\n      var _getStartAndCountOfVi = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled),\n          start = _getStartAndCountOfVi.start,\n          count = _getStartAndCountOfVi.count;\n\n      this._drawStart = start;\n      this._drawCount = count;\n\n      if (scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      var options = this.resolveDatasetElementOptions(mode);\n\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options: options\n      }, mode);\n      this.updateElements(points, start, count, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta3 = this._cachedMeta,\n          iScale = _this$_cachedMeta3.iScale,\n          vScale = _this$_cachedMeta3.vScale,\n          _stacked = _this$_cachedMeta3._stacked,\n          _dataset = _this$_cachedMeta3._dataset;\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions);\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var _this$options2 = this.options,\n          spanGaps = _this$options2.spanGaps,\n          segment = _this$options2.segment;\n      var maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      var directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      var prevParsed = start > 0 && this.getParsed(start - 1);\n\n      for (var i = start; i < start + count; ++i) {\n        var point = points[i];\n        var parsed = this.getParsed(i);\n        var properties = directUpdate ? point : {};\n        var nullData = isNullOrUndef(parsed[vAxis]);\n        var iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        var vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n\n        if (segment) {\n          properties.parsed = parsed;\n          properties.raw = _dataset.data[i];\n        }\n\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n\n        prevParsed = parsed;\n      }\n\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var meta = this._cachedMeta;\n      var dataset = meta.dataset;\n      var border = dataset.options && dataset.options.borderWidth || 0;\n      var data = meta.data || [];\n\n      if (!data.length) {\n        return border;\n      }\n\n      var firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      var lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n\n      _get(_getPrototypeOf(LineController.prototype), \"draw\", this).call(this);\n    }\n  }]);\n\n  return LineController;\n}(DatasetController);\n\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\n\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  var pointCount = points.length;\n  var start = 0;\n  var count = pointCount;\n\n  if (meta._sorted) {\n    var iScale = meta.iScale,\n        _parsed = meta._parsed;\n    var axis = iScale.axis;\n\n    var _iScale$getUserBounds = iScale.getUserBounds(),\n        min = _iScale$getUserBounds.min,\n        max = _iScale$getUserBounds.max,\n        minDefined = _iScale$getUserBounds.minDefined,\n        maxDefined = _iScale$getUserBounds.maxDefined;\n\n    if (minDefined) {\n      start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n    }\n\n    if (maxDefined) {\n      count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1), start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {\n    start: start,\n    count: count\n  };\n}\n\nfunction scaleRangesChanged(meta) {\n  var xScale = meta.xScale,\n      yScale = meta.yScale,\n      _scaleRanges = meta._scaleRanges;\n  var newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n\n  var changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nvar PolarAreaController =\n/*#__PURE__*/\nfunction (_DatasetController5) {\n  _inherits(PolarAreaController, _DatasetController5);\n\n  function PolarAreaController(chart, datasetIndex) {\n    var _this5;\n\n    _classCallCheck(this, PolarAreaController);\n\n    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(PolarAreaController).call(this, chart, datasetIndex));\n    _this5.innerRadius = undefined;\n    _this5.outerRadius = undefined;\n    return _this5;\n  }\n\n  _createClass(PolarAreaController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var chart = this.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index].r, chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var arcs = this._cachedMeta.data;\n\n      this._updateRadius();\n\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax() {\n      var _this6 = this;\n\n      var meta = this._cachedMeta;\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      meta.data.forEach(function (element, index) {\n        var parsed = _this6.getParsed(index).r;\n\n        if (!isNaN(parsed) && _this6.chart.getDataVisibility(index)) {\n          if (parsed < range.min) {\n            range.min = parsed;\n          }\n\n          if (parsed > range.max) {\n            range.max = parsed;\n          }\n        }\n      });\n      return range;\n    }\n  }, {\n    key: \"_updateRadius\",\n    value: function _updateRadius() {\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      var outerRadius = Math.max(minSize / 2, 0);\n      var innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      var radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n      this.outerRadius = outerRadius - radiusLength * this.index;\n      this.innerRadius = this.outerRadius - radiusLength;\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var reset = mode === 'reset';\n      var chart = this.chart;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = this._cachedMeta.rScale;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter;\n      var datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n      var angle = datasetStartAngle;\n      var i;\n      var defaultAngle = 360 / this.countVisibleElements();\n\n      for (i = 0; i < start; ++i) {\n        angle += this._computeAngle(i, mode, defaultAngle);\n      }\n\n      for (i = start; i < start + count; i++) {\n        var arc = arcs[i];\n        var startAngle = angle;\n\n        var endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n\n        var outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n        angle = endAngle;\n\n        if (reset) {\n          if (animationOpts.animateScale) {\n            outerRadius = 0;\n          }\n\n          if (animationOpts.animateRotate) {\n            startAngle = endAngle = datasetStartAngle;\n          }\n        }\n\n        var properties = {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: outerRadius,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n        };\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"countVisibleElements\",\n    value: function countVisibleElements() {\n      var _this7 = this;\n\n      var meta = this._cachedMeta;\n      var count = 0;\n      meta.data.forEach(function (element, index) {\n        if (!isNaN(_this7.getParsed(index).r) && _this7.chart.getDataVisibility(index)) {\n          count++;\n        }\n      });\n      return count;\n    }\n  }, {\n    key: \"_computeAngle\",\n    value: function _computeAngle(index, mode, defaultAngle) {\n      return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n  }]);\n\n  return PolarAreaController;\n}(DatasetController);\n\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            var pointStyle = chart.legend.options.labels.pointStyle;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nvar PieController =\n/*#__PURE__*/\nfunction (_DoughnutController) {\n  _inherits(PieController, _DoughnutController);\n\n  function PieController() {\n    _classCallCheck(this, PieController);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PieController).apply(this, arguments));\n  }\n\n  return PieController;\n}(DoughnutController);\n\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nvar RadarController =\n/*#__PURE__*/\nfunction (_DatasetController6) {\n  _inherits(RadarController, _DatasetController6);\n\n  function RadarController() {\n    _classCallCheck(this, RadarController);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RadarController).apply(this, arguments));\n  }\n\n  _createClass(RadarController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var vScale = this._cachedMeta.vScale;\n      var parsed = this.getParsed(index);\n      return {\n        label: vScale.getLabels()[index],\n        value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n      };\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var labels = meta.iScale.getLabels();\n      line.points = points;\n\n      if (mode !== 'resize') {\n        var options = this.resolveDatasetElementOptions(mode);\n\n        if (!this.options.showLine) {\n          options.borderWidth = 0;\n        }\n\n        var properties = {\n          _loop: true,\n          _fullLoop: labels.length === points.length,\n          options: options\n        };\n        this.updateElement(line, undefined, properties, mode);\n      }\n\n      this.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var scale = this._cachedMeta.rScale;\n      var reset = mode === 'reset';\n\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        var pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n        var x = reset ? scale.xCenter : pointPosition.x;\n        var y = reset ? scale.yCenter : pointPosition.y;\n        var properties = {\n          x: x,\n          y: y,\n          angle: pointPosition.angle,\n          skip: isNaN(x) || isNaN(y),\n          options: options\n        };\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n  }]);\n\n  return RadarController;\n}(DatasetController);\n\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\n\nvar ScatterController =\n/*#__PURE__*/\nfunction (_LineController) {\n  _inherits(ScatterController, _LineController);\n\n  function ScatterController() {\n    _classCallCheck(this, ScatterController);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ScatterController).apply(this, arguments));\n  }\n\n  return ScatterController;\n}(LineController);\n\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers =\n/*#__PURE__*/\nObject.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\nvar DateAdapter =\n/*#__PURE__*/\nfunction () {\n  function DateAdapter(options) {\n    _classCallCheck(this, DateAdapter);\n\n    this.options = options || {};\n  }\n\n  _createClass(DateAdapter, [{\n    key: \"formats\",\n    value: function formats() {\n      return abstract();\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(value, format) {\n      return abstract();\n    }\n  }, {\n    key: \"format\",\n    value: function format(timestamp, _format) {\n      return abstract();\n    }\n  }, {\n    key: \"add\",\n    value: function add(timestamp, amount, unit) {\n      return abstract();\n    }\n  }, {\n    key: \"diff\",\n    value: function diff(a, b, unit) {\n      return abstract();\n    }\n  }, {\n    key: \"startOf\",\n    value: function startOf(timestamp, unit, weekday) {\n      return abstract();\n    }\n  }, {\n    key: \"endOf\",\n    value: function endOf(timestamp, unit) {\n      return abstract();\n    }\n  }]);\n\n  return DateAdapter;\n}();\n\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\n\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  var controller = metaset.controller,\n      data = metaset.data,\n      _sorted = metaset._sorted;\n  var iScale = controller._cachedMeta.iScale;\n\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    var lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      var el = data[0];\n      var range = typeof el.getRange === 'function' && el.getRange(axis);\n\n      if (range) {\n        var start = lookupMethod(data, axis, value - range);\n        var end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\n\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  var metasets = chart.getSortedVisibleDatasetMetas();\n  var value = position[axis];\n\n  for (var i = 0, ilen = metasets.length; i < ilen; ++i) {\n    var _metasets$i = metasets[i],\n        _index2 = _metasets$i.index,\n        data = _metasets$i.data;\n\n    var _binarySearch = binarySearch(metasets[i], axis, value, intersect),\n        lo = _binarySearch.lo,\n        hi = _binarySearch.hi;\n\n    for (var j = lo; j <= hi; ++j) {\n      var element = data[j];\n\n      if (!element.skip) {\n        handler(element, _index2, j);\n      }\n    }\n  }\n}\n\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  var items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  var evaluationFunc = function evaluationFunc(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  var items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    var _element$getProps = element.getProps(['startAngle', 'endAngle'], useFinalPosition),\n        startAngle = _element$getProps.startAngle,\n        endAngle = _element$getProps.endAngle;\n\n    var _getAngleFromPoint = getAngleFromPoint(element, {\n      x: position.x,\n      y: position.y\n    }),\n        angle = _getAngleFromPoint.angle;\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  var items = [];\n  var distanceMetric = getDistanceMetricForAxis(axis);\n  var minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    var inRange = element.inRange(position.x, position.y, useFinalPosition);\n\n    if (intersect && !inRange) {\n      return;\n    }\n\n    var center = element.getCenterPoint(useFinalPosition);\n    var pointInArea = !!includeInvisible || chart.isPointInArea(center);\n\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    var distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      items = [{\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  var items = [];\n  var rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  var intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, function (element, datasetIndex, index) {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n\n  return items;\n}\n\nvar Interaction = {\n  evaluateInteractionItems: evaluateInteractionItems,\n  modes: {\n    index: function index(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'x';\n      var includeInvisible = options.includeInvisible || false;\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      var elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach(function (meta) {\n        var index = items[0].index;\n        var element = meta.data[index];\n\n        if (element && !element.skip) {\n          elements.push({\n            element: element,\n            datasetIndex: meta.index,\n            index: index\n          });\n        }\n      });\n      return elements;\n    },\n    dataset: function dataset(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        var datasetIndex = items[0].datasetIndex;\n        var data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n\n        for (var i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex: datasetIndex,\n            index: i\n          });\n        }\n      }\n\n      return items;\n    },\n    point: function point(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest: function nearest(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x: function x(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y: function y(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\nvar STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(function (v) {\n    return v.pos === position;\n  });\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(function (v) {\n    return STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis;\n  });\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  var layoutBoxes = [];\n  var i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    var _box = box;\n    pos = _box.position;\n    var _box$options = _box.options;\n    stack = _box$options.stack;\n    var _box$options$stackWei = _box$options.stackWeight;\n    stackWeight = _box$options$stackWei === void 0 ? 1 : _box$options$stackWei;\n    layoutBoxes.push({\n      index: i,\n      box: box,\n      pos: pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight: stackWeight\n    });\n  }\n\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  var stacks = {};\n  var _iteratorNormalCompletion5 = true;\n  var _didIteratorError5 = false;\n  var _iteratorError5 = undefined;\n\n  try {\n    for (var _iterator5 = layouts[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n      var wrap = _step5.value;\n      var stack = wrap.stack,\n          pos = wrap.pos,\n          stackWeight = wrap.stackWeight;\n\n      if (!stack || !STATIC_POSITIONS.includes(pos)) {\n        continue;\n      }\n\n      var _stack = stacks[stack] || (stacks[stack] = {\n        count: 0,\n        placed: 0,\n        weight: 0,\n        size: 0\n      });\n\n      _stack.count++;\n      _stack.weight += stackWeight;\n    }\n  } catch (err) {\n    _didIteratorError5 = true;\n    _iteratorError5 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n        _iterator5.return();\n      }\n    } finally {\n      if (_didIteratorError5) {\n        throw _iteratorError5;\n      }\n    }\n  }\n\n  return stacks;\n}\n\nfunction setLayoutDims(layouts, params) {\n  var stacks = buildStacks(layouts);\n  var vBoxMaxWidth = params.vBoxMaxWidth,\n      hBoxMaxHeight = params.hBoxMaxHeight;\n  var i, ilen, layout;\n\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    var fullSize = layout.box.fullSize;\n    var stack = stacks[layout.stack];\n    var factor = stack && layout.stackWeight / stack.weight;\n\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  var layoutBoxes = wrapBoxes(boxes);\n  var fullSize = sortByWeight(layoutBoxes.filter(function (wrap) {\n    return wrap.box.fullSize;\n  }), true);\n  var left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  var right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  var top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  var bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  var centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  var centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize: fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  var pos = layout.pos,\n      box = layout.box;\n  var maxPadding = chartArea.maxPadding;\n\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n\n    var stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  var newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  var newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  var widthChanged = newWidth !== chartArea.w;\n  var heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\n\nfunction handleMaxPadding(chartArea) {\n  var maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    var change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  var maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    var margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(function (pos) {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  var refitBoxes = [];\n  var i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n\n    var _updateDims = updateDims(chartArea, params, layout, stacks),\n        same = _updateDims.same,\n        other = _updateDims.other;\n\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  var userPadding = params.padding;\n  var x = chartArea.x,\n      y = chartArea.y;\n  var _iteratorNormalCompletion6 = true;\n  var _didIteratorError6 = false;\n  var _iteratorError6 = undefined;\n\n  try {\n    for (var _iterator6 = boxes[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n      var layout = _step6.value;\n      var box = layout.box;\n      var stack = stacks[layout.stack] || {\n        count: 1,\n        placed: 0,\n        weight: 1\n      };\n      var weight = layout.stackWeight / stack.weight || 1;\n\n      if (layout.horizontal) {\n        var width = chartArea.w * weight;\n        var height = stack.size || box.height;\n\n        if (defined(stack.start)) {\n          y = stack.start;\n        }\n\n        if (box.fullSize) {\n          setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n        } else {\n          setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n        }\n\n        stack.start = y;\n        stack.placed += width;\n        y = box.bottom;\n      } else {\n        var _height = chartArea.h * weight;\n\n        var _width = stack.size || box.width;\n\n        if (defined(stack.start)) {\n          x = stack.start;\n        }\n\n        if (box.fullSize) {\n          setBoxDims(box, x, userPadding.top, _width, params.outerHeight - userPadding.bottom - userPadding.top);\n        } else {\n          setBoxDims(box, x, chartArea.top + stack.placed, _width, _height);\n        }\n\n        stack.start = x;\n        stack.placed += _height;\n        x = box.right;\n      }\n    }\n  } catch (err) {\n    _didIteratorError6 = true;\n    _iteratorError6 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n        _iterator6.return();\n      }\n    } finally {\n      if (_didIteratorError6) {\n        throw _iteratorError6;\n      }\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n        draw: function draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure: function configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update: function update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    var padding = toPadding(chart.options.layout.padding);\n    var availableWidth = Math.max(width - padding.width, 0);\n    var availableHeight = Math.max(height - padding.height, 0);\n    var boxes = buildLayoutBoxes(chart.boxes);\n    var verticalBoxes = boxes.vertical;\n    var horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, function (box) {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    var visibleVerticalBoxCount = verticalBoxes.reduce(function (total, wrap) {\n      return wrap.box.options && wrap.box.options.display === false ? total : total + 1;\n    }, 0) || 1;\n    var params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding: padding,\n      availableWidth: availableWidth,\n      availableHeight: availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    var maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    var chartArea = Object.assign({\n      maxPadding: maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    var stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, function (layout) {\n      var box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      });\n    });\n  }\n};\n\nvar BasePlatform =\n/*#__PURE__*/\nfunction () {\n  function BasePlatform() {\n    _classCallCheck(this, BasePlatform);\n  }\n\n  _createClass(BasePlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {}\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      return false;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {}\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type, listener) {}\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return 1;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(element, width, height, aspectRatio) {\n      width = Math.max(0, width || element.width);\n      height = height || element.height;\n      return {\n        width: width,\n        height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n      };\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      return true;\n    }\n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig(config) {}\n  }]);\n\n  return BasePlatform;\n}();\n\nvar BasicPlatform =\n/*#__PURE__*/\nfunction (_BasePlatform) {\n  _inherits(BasicPlatform, _BasePlatform);\n\n  function BasicPlatform() {\n    _classCallCheck(this, BasicPlatform);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BasicPlatform).apply(this, arguments));\n  }\n\n  _createClass(BasicPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(item) {\n      return item && item.getContext && item.getContext('2d') || null;\n    }\n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig(config) {\n      config.options.animation = false;\n    }\n  }]);\n\n  return BasicPlatform;\n}(BasePlatform);\n\nvar EXPANDO_KEY = '$chartjs';\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nvar isNullOrEmpty = function isNullOrEmpty(value) {\n  return value === null || value === '';\n};\n\nfunction initCanvas(canvas, aspectRatio) {\n  var style = canvas.style;\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    var displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n\n  var _getRelativePosition = getRelativePosition(event, chart),\n      x = _getRelativePosition.x,\n      y = _getRelativePosition.y;\n\n  return {\n    type: type,\n    chart: chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  var _iteratorNormalCompletion7 = true;\n  var _didIteratorError7 = false;\n  var _iteratorError7 = undefined;\n\n  try {\n    for (var _iterator7 = nodeList[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n      var node = _step7.value;\n\n      if (node === canvas || node.contains(canvas)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _didIteratorError7 = true;\n    _iteratorError7 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n        _iterator7.return();\n      }\n    } finally {\n      if (_didIteratorError7) {\n        throw _iteratorError7;\n      }\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var observer = new MutationObserver(function (entries) {\n    var trigger = false;\n    var _iteratorNormalCompletion8 = true;\n    var _didIteratorError8 = false;\n    var _iteratorError8 = undefined;\n\n    try {\n      for (var _iterator8 = entries[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n        var entry = _step8.value;\n        trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n      }\n    } catch (err) {\n      _didIteratorError8 = true;\n      _iteratorError8 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n          _iterator8.return();\n        }\n      } finally {\n        if (_didIteratorError8) {\n          throw _iteratorError8;\n        }\n      }\n    }\n\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var observer = new MutationObserver(function (entries) {\n    var trigger = false;\n    var _iteratorNormalCompletion9 = true;\n    var _didIteratorError9 = false;\n    var _iteratorError9 = undefined;\n\n    try {\n      for (var _iterator9 = entries[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n        var entry = _step9.value;\n        trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n      }\n    } catch (err) {\n      _didIteratorError9 = true;\n      _iteratorError9 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n          _iterator9.return();\n        }\n      } finally {\n        if (_didIteratorError9) {\n          throw _iteratorError9;\n        }\n      }\n    }\n\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nvar drpListeningCharts = new Map();\nvar oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  var dpr = window.devicePixelRatio;\n\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach(function (resize, chart) {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n\n  var container = canvas && _getParentNode(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  var resize = throttled(function (width, height) {\n    var w = container.clientWidth;\n    listener(width, height);\n\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  var observer = new ResizeObserver(function (entries) {\n    var entry = entries[0];\n    var width = entry.contentRect.width;\n    var height = entry.contentRect.height;\n\n    if (width === 0 && height === 0) {\n      return;\n    }\n\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  var canvas = chart.canvas;\n  var proxy = throttled(function (event) {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, function (args) {\n    var event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\n\nvar DomPlatform =\n/*#__PURE__*/\nfunction (_BasePlatform2) {\n  _inherits(DomPlatform, _BasePlatform2);\n\n  function DomPlatform() {\n    _classCallCheck(this, DomPlatform);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DomPlatform).apply(this, arguments));\n  }\n\n  _createClass(DomPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {\n      var context = canvas && canvas.getContext && canvas.getContext('2d');\n\n      if (context && context.canvas === canvas) {\n        initCanvas(canvas, aspectRatio);\n        return context;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return false;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      var style = initial.style || {};\n      Object.keys(style).forEach(function (key) {\n        canvas.style[key] = style[key];\n      });\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n      return true;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {\n      this.removeEventListener(chart, type);\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var handlers = {\n        attach: createAttachObserver,\n        detach: createDetachObserver,\n        resize: createResizeObserver\n      };\n      var handler = handlers[type] || createProxyAndListen;\n      proxies[type] = handler(chart, type, listener);\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type) {\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var proxy = proxies[type];\n\n      if (!proxy) {\n        return;\n      }\n\n      var handlers = {\n        attach: releaseObserver,\n        detach: releaseObserver,\n        resize: releaseObserver\n      };\n      var handler = handlers[type] || removeListener;\n      handler(chart, type, proxy);\n      proxies[type] = undefined;\n    }\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return window.devicePixelRatio;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(canvas, width, height, aspectRatio) {\n      return _getMaximumSize(canvas, width, height, aspectRatio);\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      var container = _getParentNode(canvas);\n\n      return !!(container && container.isConnected);\n    }\n  }]);\n\n  return DomPlatform;\n}(BasePlatform);\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n\n  return DomPlatform;\n}\n\nvar Element =\n/*#__PURE__*/\nfunction () {\n  function Element() {\n    _classCallCheck(this, Element);\n\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n\n  _createClass(Element, [{\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      var _this$getProps = this.getProps(['x', 'y'], useFinalPosition),\n          x = _this$getProps.x,\n          y = _this$getProps.y;\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"hasValue\",\n    value: function hasValue() {\n      return isNumber(this.x) && isNumber(this.y);\n    }\n  }, {\n    key: \"getProps\",\n    value: function getProps(props, final) {\n      var _this8 = this;\n\n      var anims = this.$animations;\n\n      if (!final || !anims) {\n        return this;\n      }\n\n      var ret = {};\n      props.forEach(function (prop) {\n        ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : _this8[prop];\n      });\n      return ret;\n    }\n  }]);\n\n  return Element;\n}();\n\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nvar formatters = {\n  values: function values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric: function numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n\n    var locale = this.chart.options.locale;\n    var notation;\n    var delta = tickValue;\n\n    if (ticks.length > 1) {\n      var maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    var logDelta = log10(Math.abs(delta));\n    var numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    var options = {\n      notation: notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic: function logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n\n    var remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n\n    return '';\n  }\n};\n\nfunction calculateDelta(tickValue, ticks) {\n  var delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n\n  return delta;\n}\n\nvar Ticks = {\n  formatters: formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: function tickWidth(_ctx, options) {\n      return options.lineWidth;\n    },\n    tickColor: function tickColor(_ctx, options) {\n      return options.color;\n    },\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: function _scriptable(name) {\n    return !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'tickBorderDash';\n  }\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: function _scriptable(name) {\n    return name !== 'backdropPadding' && name !== 'callback';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'backdropPadding';\n  }\n});\n\nfunction autoSkip(scale, ticks) {\n  var tickOpts = scale.options.ticks;\n  var ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  var majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  var numMajorIndices = majorIndices.length;\n  var first = majorIndices[0];\n  var last = majorIndices[numMajorIndices - 1];\n  var newTicks = [];\n\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  var spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    var i, ilen;\n    var avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  var offset = scale.options.offset;\n\n  var tickLength = scale._tickSize();\n\n  var maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  var maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  var evenMajorSpacing = getEvenSpacing(majorIndices);\n  var spacing = ticks.length / ticksLimit;\n\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  var factors = _factorize(evenMajorSpacing);\n\n  for (var i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    var factor = factors[i];\n\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n\n  return Math.max(spacing, 1);\n}\n\nfunction getMajorIndices(ticks) {\n  var result = [];\n  var i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n\n  return result;\n}\n\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  var count = 0;\n  var next = majorIndices[0];\n  var i;\n  spacing = Math.ceil(spacing);\n\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  var start = valueOrDefault(majorStart, 0);\n  var end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  var count = 0;\n  var length, i, next;\n  spacing = Math.ceil(spacing);\n\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\nfunction getEvenSpacing(arr) {\n  var len = arr.length;\n  var i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n\n  return diff;\n}\n\nvar reverseAlign = function reverseAlign(align) {\n  return align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n};\n\nvar offsetFromEdge = function offsetFromEdge(scale, edge, offset) {\n  return edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n};\n\nfunction sample(arr, numItems) {\n  var result = [];\n  var increment = arr.length / numItems;\n  var len = arr.length;\n  var i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n\n  return result;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  var length = scale.ticks.length;\n  var validIndex = Math.min(index, length - 1);\n  var start = scale._startPixel;\n  var end = scale._endPixel;\n  var epsilon = 1e-6;\n  var lineValue = scale.getPixelForTick(validIndex);\n  var offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n\n    lineValue += validIndex < index ? offset : -offset;\n\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction garbageCollect(caches, length) {\n  each(caches, function (cache) {\n    var gc = cache.gc;\n    var gcLen = gc.length / 2;\n    var i;\n\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  var font = toFont(options.font, fallback);\n  var padding = toPadding(options.padding);\n  var lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale: scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick: tick,\n    index: index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  var ret = _toLeftRightCenter(align);\n\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  var top = scale.top,\n      left = scale.left,\n      bottom = scale.bottom,\n      right = scale.right,\n      chart = scale.chart;\n  var chartArea = chart.chartArea,\n      scales = chart.scales;\n  var rotation = 0;\n  var maxWidth, titleX, titleY;\n  var height = bottom - top;\n  var width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      var positionAxisID = Object.keys(position)[0];\n      var value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      var _positionAxisID = Object.keys(position)[0];\n      var _value = position[_positionAxisID];\n      titleX = scales[_positionAxisID].getPixelForValue(_value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n\n  return {\n    titleX: titleX,\n    titleY: titleY,\n    maxWidth: maxWidth,\n    rotation: rotation\n  };\n}\n\nvar Scale =\n/*#__PURE__*/\nfunction (_Element) {\n  _inherits(Scale, _Element);\n\n  function Scale(cfg) {\n    var _this9;\n\n    _classCallCheck(this, Scale);\n\n    _this9 = _possibleConstructorReturn(this, _getPrototypeOf(Scale).call(this));\n    _this9.id = cfg.id;\n    _this9.type = cfg.type;\n    _this9.options = undefined;\n    _this9.ctx = cfg.ctx;\n    _this9.chart = cfg.chart;\n    _this9.top = undefined;\n    _this9.bottom = undefined;\n    _this9.left = undefined;\n    _this9.right = undefined;\n    _this9.width = undefined;\n    _this9.height = undefined;\n    _this9._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    _this9.maxWidth = undefined;\n    _this9.maxHeight = undefined;\n    _this9.paddingTop = undefined;\n    _this9.paddingBottom = undefined;\n    _this9.paddingLeft = undefined;\n    _this9.paddingRight = undefined;\n    _this9.axis = undefined;\n    _this9.labelRotation = undefined;\n    _this9.min = undefined;\n    _this9.max = undefined;\n    _this9._range = undefined;\n    _this9.ticks = [];\n    _this9._gridLineItems = null;\n    _this9._labelItems = null;\n    _this9._labelSizes = null;\n    _this9._length = 0;\n    _this9._maxLength = 0;\n    _this9._longestTextCache = {};\n    _this9._startPixel = undefined;\n    _this9._endPixel = undefined;\n    _this9._reversePixels = false;\n    _this9._userMax = undefined;\n    _this9._userMin = undefined;\n    _this9._suggestedMax = undefined;\n    _this9._suggestedMin = undefined;\n    _this9._ticksLength = 0;\n    _this9._borderValue = 0;\n    _this9._cache = {};\n    _this9._dataLimitsCached = false;\n    _this9.$context = undefined;\n    return _this9;\n  }\n\n  _createClass(Scale, [{\n    key: \"init\",\n    value: function init(options) {\n      this.options = options.setContext(this.getContext());\n      this.axis = options.axis;\n      this._userMin = this.parse(options.min);\n      this._userMax = this.parse(options.max);\n      this._suggestedMin = this.parse(options.suggestedMin);\n      this._suggestedMax = this.parse(options.suggestedMax);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      return raw;\n    }\n  }, {\n    key: \"getUserBounds\",\n    value: function getUserBounds() {\n      var _userMin = this._userMin,\n          _userMax = this._userMax,\n          _suggestedMin = this._suggestedMin,\n          _suggestedMax = this._suggestedMax;\n      _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n      _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n      _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n      _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n      return {\n        min: finiteOrDefault(_userMin, _suggestedMin),\n        max: finiteOrDefault(_userMax, _suggestedMax),\n        minDefined: isNumberFinite(_userMin),\n        maxDefined: isNumberFinite(_userMax)\n      };\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(canStack) {\n      var _this$getUserBounds = this.getUserBounds(),\n          min = _this$getUserBounds.min,\n          max = _this$getUserBounds.max,\n          minDefined = _this$getUserBounds.minDefined,\n          maxDefined = _this$getUserBounds.maxDefined;\n\n      var range;\n\n      if (minDefined && maxDefined) {\n        return {\n          min: min,\n          max: max\n        };\n      }\n\n      var metas = this.getMatchingVisibleMetas();\n\n      for (var i = 0, ilen = metas.length; i < ilen; ++i) {\n        range = metas[i].controller.getMinMax(this, canStack);\n\n        if (!minDefined) {\n          min = Math.min(min, range.min);\n        }\n\n        if (!maxDefined) {\n          max = Math.max(max, range.max);\n        }\n      }\n\n      min = maxDefined && min > max ? max : min;\n      max = minDefined && min > max ? min : max;\n      return {\n        min: finiteOrDefault(min, finiteOrDefault(max, min)),\n        max: finiteOrDefault(max, finiteOrDefault(min, max))\n      };\n    }\n  }, {\n    key: \"getPadding\",\n    value: function getPadding() {\n      return {\n        left: this.paddingLeft || 0,\n        top: this.paddingTop || 0,\n        right: this.paddingRight || 0,\n        bottom: this.paddingBottom || 0\n      };\n    }\n  }, {\n    key: \"getTicks\",\n    value: function getTicks() {\n      return this.ticks;\n    }\n  }, {\n    key: \"getLabels\",\n    value: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      this._cache = {};\n      this._dataLimitsCached = false;\n    }\n  }, {\n    key: \"beforeUpdate\",\n    value: function beforeUpdate() {\n      callback(this.options.beforeUpdate, [this]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      var _this$options3 = this.options,\n          beginAtZero = _this$options3.beginAtZero,\n          grace = _this$options3.grace,\n          tickOpts = _this$options3.ticks;\n      var sampleSize = tickOpts.sampleSize;\n      this.beforeUpdate();\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins = Object.assign({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      this.ticks = null;\n      this._labelSizes = null;\n      this._gridLineItems = null;\n      this._labelItems = null;\n      this.beforeSetDimensions();\n      this.setDimensions();\n      this.afterSetDimensions();\n      this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n\n      if (!this._dataLimitsCached) {\n        this.beforeDataLimits();\n        this.determineDataLimits();\n        this.afterDataLimits();\n        this._range = _addGrace(this, grace, beginAtZero);\n        this._dataLimitsCached = true;\n      }\n\n      this.beforeBuildTicks();\n      this.ticks = this.buildTicks() || [];\n      this.afterBuildTicks();\n      var samplingEnabled = sampleSize < this.ticks.length;\n\n      this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n      this.configure();\n      this.beforeCalculateLabelRotation();\n      this.calculateLabelRotation();\n      this.afterCalculateLabelRotation();\n\n      if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n        this.ticks = autoSkip(this, this.ticks);\n        this._labelSizes = null;\n        this.afterAutoSkip();\n      }\n\n      if (samplingEnabled) {\n        this._convertTicksToLabels(this.ticks);\n      }\n\n      this.beforeFit();\n      this.fit();\n      this.afterFit();\n      this.afterUpdate();\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var reversePixels = this.options.reverse;\n      var startPixel, endPixel;\n\n      if (this.isHorizontal()) {\n        startPixel = this.left;\n        endPixel = this.right;\n      } else {\n        startPixel = this.top;\n        endPixel = this.bottom;\n        reversePixels = !reversePixels;\n      }\n\n      this._startPixel = startPixel;\n      this._endPixel = endPixel;\n      this._reversePixels = reversePixels;\n      this._length = endPixel - startPixel;\n      this._alignToPixels = this.options.alignToPixels;\n    }\n  }, {\n    key: \"afterUpdate\",\n    value: function afterUpdate() {\n      callback(this.options.afterUpdate, [this]);\n    }\n  }, {\n    key: \"beforeSetDimensions\",\n    value: function beforeSetDimensions() {\n      callback(this.options.beforeSetDimensions, [this]);\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = 0;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = 0;\n        this.bottom = this.height;\n      }\n\n      this.paddingLeft = 0;\n      this.paddingTop = 0;\n      this.paddingRight = 0;\n      this.paddingBottom = 0;\n    }\n  }, {\n    key: \"afterSetDimensions\",\n    value: function afterSetDimensions() {\n      callback(this.options.afterSetDimensions, [this]);\n    }\n  }, {\n    key: \"_callHooks\",\n    value: function _callHooks(name) {\n      this.chart.notifyPlugins(name, this.getContext());\n      callback(this.options[name], [this]);\n    }\n  }, {\n    key: \"beforeDataLimits\",\n    value: function beforeDataLimits() {\n      this._callHooks('beforeDataLimits');\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {}\n  }, {\n    key: \"afterDataLimits\",\n    value: function afterDataLimits() {\n      this._callHooks('afterDataLimits');\n    }\n  }, {\n    key: \"beforeBuildTicks\",\n    value: function beforeBuildTicks() {\n      this._callHooks('beforeBuildTicks');\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      return [];\n    }\n  }, {\n    key: \"afterBuildTicks\",\n    value: function afterBuildTicks() {\n      this._callHooks('afterBuildTicks');\n    }\n  }, {\n    key: \"beforeTickToLabelConversion\",\n    value: function beforeTickToLabelConversion() {\n      callback(this.options.beforeTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var tickOpts = this.options.ticks;\n      var i, ilen, tick;\n\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        tick = ticks[i];\n        tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n      }\n    }\n  }, {\n    key: \"afterTickToLabelConversion\",\n    value: function afterTickToLabelConversion() {\n      callback(this.options.afterTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"beforeCalculateLabelRotation\",\n    value: function beforeCalculateLabelRotation() {\n      callback(this.options.beforeCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"calculateLabelRotation\",\n    value: function calculateLabelRotation() {\n      var options = this.options;\n      var tickOpts = options.ticks;\n      var numTicks = this.ticks.length;\n      var minRotation = tickOpts.minRotation || 0;\n      var maxRotation = tickOpts.maxRotation;\n      var labelRotation = minRotation;\n      var tickWidth, maxHeight, maxLabelDiagonal;\n\n      if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n        this.labelRotation = minRotation;\n        return;\n      }\n\n      var labelSizes = this._getLabelSizes();\n\n      var maxLabelWidth = labelSizes.widest.width;\n      var maxLabelHeight = labelSizes.highest.height;\n\n      var maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n\n      tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n      if (maxLabelWidth + 6 > tickWidth) {\n        tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n        maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n        maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n        labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n        labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n      }\n\n      this.labelRotation = labelRotation;\n    }\n  }, {\n    key: \"afterCalculateLabelRotation\",\n    value: function afterCalculateLabelRotation() {\n      callback(this.options.afterCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"afterAutoSkip\",\n    value: function afterAutoSkip() {}\n  }, {\n    key: \"beforeFit\",\n    value: function beforeFit() {\n      callback(this.options.beforeFit, [this]);\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var minSize = {\n        width: 0,\n        height: 0\n      };\n      var chart = this.chart,\n          _this$options4 = this.options,\n          tickOpts = _this$options4.ticks,\n          titleOpts = _this$options4.title,\n          gridOpts = _this$options4.grid;\n\n      var display = this._isVisible();\n\n      var isHorizontal = this.isHorizontal();\n\n      if (display) {\n        var titleHeight = getTitleHeight(titleOpts, chart.options.font);\n\n        if (isHorizontal) {\n          minSize.width = this.maxWidth;\n          minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n        } else {\n          minSize.height = this.maxHeight;\n          minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n        }\n\n        if (tickOpts.display && this.ticks.length) {\n          var _this$_getLabelSizes = this._getLabelSizes(),\n              first = _this$_getLabelSizes.first,\n              last = _this$_getLabelSizes.last,\n              widest = _this$_getLabelSizes.widest,\n              highest = _this$_getLabelSizes.highest;\n\n          var tickPadding = tickOpts.padding * 2;\n          var angleRadians = toRadians(this.labelRotation);\n          var cos = Math.cos(angleRadians);\n          var sin = Math.sin(angleRadians);\n\n          if (isHorizontal) {\n            var labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n            minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n          } else {\n            var labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n            minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n          }\n\n          this._calculatePadding(first, last, sin, cos);\n        }\n      }\n\n      this._handleMargins();\n\n      if (isHorizontal) {\n        this.width = this._length = chart.width - this._margins.left - this._margins.right;\n        this.height = minSize.height;\n      } else {\n        this.width = minSize.width;\n        this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n      }\n    }\n  }, {\n    key: \"_calculatePadding\",\n    value: function _calculatePadding(first, last, sin, cos) {\n      var _this$options5 = this.options,\n          _this$options5$ticks = _this$options5.ticks,\n          align = _this$options5$ticks.align,\n          padding = _this$options5$ticks.padding,\n          position = _this$options5.position;\n      var isRotated = this.labelRotation !== 0;\n      var labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n      if (this.isHorizontal()) {\n        var offsetLeft = this.getPixelForTick(0) - this.left;\n        var offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n        var paddingLeft = 0;\n        var paddingRight = 0;\n\n        if (isRotated) {\n          if (labelsBelowTicks) {\n            paddingLeft = cos * first.width;\n            paddingRight = sin * last.height;\n          } else {\n            paddingLeft = sin * first.height;\n            paddingRight = cos * last.width;\n          }\n        } else if (align === 'start') {\n          paddingRight = last.width;\n        } else if (align === 'end') {\n          paddingLeft = first.width;\n        } else if (align !== 'inner') {\n          paddingLeft = first.width / 2;\n          paddingRight = last.width / 2;\n        }\n\n        this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n        this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n      } else {\n        var paddingTop = last.height / 2;\n        var paddingBottom = first.height / 2;\n\n        if (align === 'start') {\n          paddingTop = 0;\n          paddingBottom = first.height;\n        } else if (align === 'end') {\n          paddingTop = last.height;\n          paddingBottom = 0;\n        }\n\n        this.paddingTop = paddingTop + padding;\n        this.paddingBottom = paddingBottom + padding;\n      }\n    }\n  }, {\n    key: \"_handleMargins\",\n    value: function _handleMargins() {\n      if (this._margins) {\n        this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n        this._margins.top = Math.max(this.paddingTop, this._margins.top);\n        this._margins.right = Math.max(this.paddingRight, this._margins.right);\n        this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n      }\n    }\n  }, {\n    key: \"afterFit\",\n    value: function afterFit() {\n      callback(this.options.afterFit, [this]);\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var _this$options6 = this.options,\n          axis = _this$options6.axis,\n          position = _this$options6.position;\n      return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n  }, {\n    key: \"isFullSize\",\n    value: function isFullSize() {\n      return this.options.fullSize;\n    }\n  }, {\n    key: \"_convertTicksToLabels\",\n    value: function _convertTicksToLabels(ticks) {\n      this.beforeTickToLabelConversion();\n      this.generateTickLabels(ticks);\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        if (isNullOrUndef(ticks[i].label)) {\n          ticks.splice(i, 1);\n          ilen--;\n          i--;\n        }\n      }\n\n      this.afterTickToLabelConversion();\n    }\n  }, {\n    key: \"_getLabelSizes\",\n    value: function _getLabelSizes() {\n      var labelSizes = this._labelSizes;\n\n      if (!labelSizes) {\n        var sampleSize = this.options.ticks.sampleSize;\n        var ticks = this.ticks;\n\n        if (sampleSize < ticks.length) {\n          ticks = sample(ticks, sampleSize);\n        }\n\n        this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n      }\n\n      return labelSizes;\n    }\n  }, {\n    key: \"_computeLabelSizes\",\n    value: function _computeLabelSizes(ticks, length) {\n      var ctx = this.ctx,\n          caches = this._longestTextCache;\n      var widths = [];\n      var heights = [];\n      var widestLabelSize = 0;\n      var highestLabelSize = 0;\n      var i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n      for (i = 0; i < length; ++i) {\n        label = ticks[i].label;\n        tickFont = this._resolveTickFontOptions(i);\n        ctx.font = fontString = tickFont.string;\n        cache = caches[fontString] = caches[fontString] || {\n          data: {},\n          gc: []\n        };\n        lineHeight = tickFont.lineHeight;\n        width = height = 0;\n\n        if (!isNullOrUndef(label) && !isArray(label)) {\n          width = _measureText(ctx, cache.data, cache.gc, width, label);\n          height = lineHeight;\n        } else if (isArray(label)) {\n          for (j = 0, jlen = label.length; j < jlen; ++j) {\n            nestedLabel = label[j];\n\n            if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n              width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n              height += lineHeight;\n            }\n          }\n        }\n\n        widths.push(width);\n        heights.push(height);\n        widestLabelSize = Math.max(width, widestLabelSize);\n        highestLabelSize = Math.max(height, highestLabelSize);\n      }\n\n      garbageCollect(caches, length);\n      var widest = widths.indexOf(widestLabelSize);\n      var highest = heights.indexOf(highestLabelSize);\n\n      var valueAt = function valueAt(idx) {\n        return {\n          width: widths[idx] || 0,\n          height: heights[idx] || 0\n        };\n      };\n\n      return {\n        first: valueAt(0),\n        last: valueAt(length - 1),\n        widest: valueAt(widest),\n        highest: valueAt(highest),\n        widths: widths,\n        heights: heights\n      };\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value;\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value, index) {\n      return NaN;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {}\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getPixelForDecimal\",\n    value: function getPixelForDecimal(decimal) {\n      if (this._reversePixels) {\n        decimal = 1 - decimal;\n      }\n\n      var pixel = this._startPixel + decimal * this._length;\n      return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n  }, {\n    key: \"getDecimalForPixel\",\n    value: function getDecimalForPixel(pixel) {\n      var decimal = (pixel - this._startPixel) / this._length;\n      return this._reversePixels ? 1 - decimal : decimal;\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    }\n  }, {\n    key: \"getBaseValue\",\n    value: function getBaseValue() {\n      var min = this.min,\n          max = this.max;\n      return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index) {\n      var ticks = this.ticks || [];\n\n      if (index >= 0 && index < ticks.length) {\n        var tick = ticks[index];\n        return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n      }\n\n      return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n  }, {\n    key: \"_tickSize\",\n    value: function _tickSize() {\n      var optionTicks = this.options.ticks;\n      var rot = toRadians(this.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n\n      var labelSizes = this._getLabelSizes();\n\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = labelSizes ? labelSizes.widest.width + padding : 0;\n      var h = labelSizes ? labelSizes.highest.height + padding : 0;\n      return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n  }, {\n    key: \"_isVisible\",\n    value: function _isVisible() {\n      var display = this.options.display;\n\n      if (display !== 'auto') {\n        return !!display;\n      }\n\n      return this.getMatchingVisibleMetas().length > 0;\n    }\n  }, {\n    key: \"_computeGridLineItems\",\n    value: function _computeGridLineItems(chartArea) {\n      var axis = this.axis;\n      var chart = this.chart;\n      var options = this.options;\n      var grid = options.grid,\n          position = options.position;\n      var offset = grid.offset;\n      var isHorizontal = this.isHorizontal();\n      var ticks = this.ticks;\n      var ticksLength = ticks.length + (offset ? 1 : 0);\n      var tl = getTickMarkLength(grid);\n      var items = [];\n      var borderOpts = grid.setContext(this.getContext());\n      var axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n      var axisHalfWidth = axisWidth / 2;\n\n      var alignBorderValue = function alignBorderValue(pixel) {\n        return _alignPixel(chart, pixel, axisWidth);\n      };\n\n      var borderValue, i, lineValue, alignedLineValue;\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n      if (position === 'top') {\n        borderValue = alignBorderValue(this.bottom);\n        ty1 = this.bottom - tl;\n        ty2 = borderValue - axisHalfWidth;\n        y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n        y2 = chartArea.bottom;\n      } else if (position === 'bottom') {\n        borderValue = alignBorderValue(this.top);\n        y1 = chartArea.top;\n        y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = this.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignBorderValue(this.right);\n        tx1 = this.right - tl;\n        tx2 = borderValue - axisHalfWidth;\n        x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n        x2 = chartArea.right;\n      } else if (position === 'right') {\n        borderValue = alignBorderValue(this.left);\n        x1 = chartArea.left;\n        x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n        tx1 = borderValue + axisHalfWidth;\n        tx2 = this.left + tl;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n\n        y1 = chartArea.top;\n        y2 = chartArea.bottom;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = ty1 + tl;\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n        } else if (isObject(position)) {\n          var _positionAxisID2 = Object.keys(position)[0];\n          var _value2 = position[_positionAxisID2];\n          borderValue = alignBorderValue(this.chart.scales[_positionAxisID2].getPixelForValue(_value2));\n        }\n\n        tx1 = borderValue - axisHalfWidth;\n        tx2 = tx1 - tl;\n        x1 = chartArea.left;\n        x2 = chartArea.right;\n      }\n\n      var limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n      var step = Math.max(1, Math.ceil(ticksLength / limit));\n\n      for (i = 0; i < ticksLength; i += step) {\n        var optsAtIndex = grid.setContext(this.getContext(i));\n        var lineWidth = optsAtIndex.lineWidth;\n        var lineColor = optsAtIndex.color;\n        var borderDash = grid.borderDash || [];\n        var borderDashOffset = optsAtIndex.borderDashOffset;\n        var tickWidth = optsAtIndex.tickWidth;\n        var tickColor = optsAtIndex.tickColor;\n        var tickBorderDash = optsAtIndex.tickBorderDash || [];\n        var tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n        lineValue = getPixelForGridLine(this, i, offset);\n\n        if (lineValue === undefined) {\n          continue;\n        }\n\n        alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n        if (isHorizontal) {\n          tx1 = tx2 = x1 = x2 = alignedLineValue;\n        } else {\n          ty1 = ty2 = y1 = y2 = alignedLineValue;\n        }\n\n        items.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          width: lineWidth,\n          color: lineColor,\n          borderDash: borderDash,\n          borderDashOffset: borderDashOffset,\n          tickWidth: tickWidth,\n          tickColor: tickColor,\n          tickBorderDash: tickBorderDash,\n          tickBorderDashOffset: tickBorderDashOffset\n        });\n      }\n\n      this._ticksLength = ticksLength;\n      this._borderValue = borderValue;\n      return items;\n    }\n  }, {\n    key: \"_computeLabelItems\",\n    value: function _computeLabelItems(chartArea) {\n      var axis = this.axis;\n      var options = this.options;\n      var position = options.position,\n          optionTicks = options.ticks;\n      var isHorizontal = this.isHorizontal();\n      var ticks = this.ticks;\n      var align = optionTicks.align,\n          crossAlign = optionTicks.crossAlign,\n          padding = optionTicks.padding,\n          mirror = optionTicks.mirror;\n      var tl = getTickMarkLength(options.grid);\n      var tickAndPadding = tl + padding;\n      var hTickAndPadding = mirror ? -padding : tickAndPadding;\n      var rotation = -toRadians(this.labelRotation);\n      var items = [];\n      var i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n      var textBaseline = 'middle';\n\n      if (position === 'top') {\n        y = this.bottom - hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'bottom') {\n        y = this.top + hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'left') {\n        var ret = this._getYAxisLabelAlignment(tl);\n\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (position === 'right') {\n        var _ret = this._getYAxisLabelAlignment(tl);\n\n        textAlign = _ret.textAlign;\n        x = _ret.x;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n        }\n\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n        } else if (isObject(position)) {\n          var _positionAxisID3 = Object.keys(position)[0];\n          var _value3 = position[_positionAxisID3];\n          x = this.chart.scales[_positionAxisID3].getPixelForValue(_value3);\n        }\n\n        textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n      }\n\n      if (axis === 'y') {\n        if (align === 'start') {\n          textBaseline = 'top';\n        } else if (align === 'end') {\n          textBaseline = 'bottom';\n        }\n      }\n\n      var labelSizes = this._getLabelSizes();\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        label = tick.label;\n        var optsAtIndex = optionTicks.setContext(this.getContext(i));\n        pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n        font = this._resolveTickFontOptions(i);\n        lineHeight = font.lineHeight;\n        lineCount = isArray(label) ? label.length : 1;\n        var halfCount = lineCount / 2;\n        var color = optsAtIndex.color;\n        var strokeColor = optsAtIndex.textStrokeColor;\n        var strokeWidth = optsAtIndex.textStrokeWidth;\n        var tickTextAlign = textAlign;\n\n        if (isHorizontal) {\n          x = pixel;\n\n          if (textAlign === 'inner') {\n            if (i === ilen - 1) {\n              tickTextAlign = !this.options.reverse ? 'right' : 'left';\n            } else if (i === 0) {\n              tickTextAlign = !this.options.reverse ? 'left' : 'right';\n            } else {\n              tickTextAlign = 'center';\n            }\n          }\n\n          if (position === 'top') {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = -lineCount * lineHeight + lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n            } else {\n              textOffset = -labelSizes.highest.height + lineHeight / 2;\n            }\n          } else {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n            } else {\n              textOffset = labelSizes.highest.height - lineCount * lineHeight;\n            }\n          }\n\n          if (mirror) {\n            textOffset *= -1;\n          }\n        } else {\n          y = pixel;\n          textOffset = (1 - lineCount) * lineHeight / 2;\n        }\n\n        var backdrop = void 0;\n\n        if (optsAtIndex.showLabelBackdrop) {\n          var labelPadding = toPadding(optsAtIndex.backdropPadding);\n          var height = labelSizes.heights[i];\n          var width = labelSizes.widths[i];\n          var top = y + textOffset - labelPadding.top;\n          var left = x - labelPadding.left;\n\n          switch (textBaseline) {\n            case 'middle':\n              top -= height / 2;\n              break;\n\n            case 'bottom':\n              top -= height;\n              break;\n          }\n\n          switch (textAlign) {\n            case 'center':\n              left -= width / 2;\n              break;\n\n            case 'right':\n              left -= width;\n              break;\n          }\n\n          backdrop = {\n            left: left,\n            top: top,\n            width: width + labelPadding.width,\n            height: height + labelPadding.height,\n            color: optsAtIndex.backdropColor\n          };\n        }\n\n        items.push({\n          rotation: rotation,\n          label: label,\n          font: font,\n          color: color,\n          strokeColor: strokeColor,\n          strokeWidth: strokeWidth,\n          textOffset: textOffset,\n          textAlign: tickTextAlign,\n          textBaseline: textBaseline,\n          translation: [x, y],\n          backdrop: backdrop\n        });\n      }\n\n      return items;\n    }\n  }, {\n    key: \"_getXAxisLabelAlignment\",\n    value: function _getXAxisLabelAlignment() {\n      var _this$options7 = this.options,\n          position = _this$options7.position,\n          ticks = _this$options7.ticks;\n      var rotation = -toRadians(this.labelRotation);\n\n      if (rotation) {\n        return position === 'top' ? 'left' : 'right';\n      }\n\n      var align = 'center';\n\n      if (ticks.align === 'start') {\n        align = 'left';\n      } else if (ticks.align === 'end') {\n        align = 'right';\n      } else if (ticks.align === 'inner') {\n        align = 'inner';\n      }\n\n      return align;\n    }\n  }, {\n    key: \"_getYAxisLabelAlignment\",\n    value: function _getYAxisLabelAlignment(tl) {\n      var _this$options8 = this.options,\n          position = _this$options8.position,\n          _this$options8$ticks = _this$options8.ticks,\n          crossAlign = _this$options8$ticks.crossAlign,\n          mirror = _this$options8$ticks.mirror,\n          padding = _this$options8$ticks.padding;\n\n      var labelSizes = this._getLabelSizes();\n\n      var tickAndPadding = tl + padding;\n      var widest = labelSizes.widest.width;\n      var textAlign;\n      var x;\n\n      if (position === 'left') {\n        if (mirror) {\n          x = this.right + padding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x += widest;\n          }\n        } else {\n          x = this.right - tickAndPadding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x = this.left;\n          }\n        }\n      } else if (position === 'right') {\n        if (mirror) {\n          x = this.left + padding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x -= widest;\n          }\n        } else {\n          x = this.left + tickAndPadding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x = this.right;\n          }\n        }\n      } else {\n        textAlign = 'right';\n      }\n\n      return {\n        textAlign: textAlign,\n        x: x\n      };\n    }\n  }, {\n    key: \"_computeLabelArea\",\n    value: function _computeLabelArea() {\n      if (this.options.ticks.mirror) {\n        return;\n      }\n\n      var chart = this.chart;\n      var position = this.options.position;\n\n      if (position === 'left' || position === 'right') {\n        return {\n          top: 0,\n          left: this.left,\n          bottom: chart.height,\n          right: this.right\n        };\n      }\n\n      if (position === 'top' || position === 'bottom') {\n        return {\n          top: this.top,\n          left: 0,\n          bottom: this.bottom,\n          right: chart.width\n        };\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var ctx = this.ctx,\n          backgroundColor = this.options.backgroundColor,\n          left = this.left,\n          top = this.top,\n          width = this.width,\n          height = this.height;\n\n      if (backgroundColor) {\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        ctx.fillRect(left, top, width, height);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getLineWidthForValue\",\n    value: function getLineWidthForValue(value) {\n      var grid = this.options.grid;\n\n      if (!this._isVisible() || !grid.display) {\n        return 0;\n      }\n\n      var ticks = this.ticks;\n      var index = ticks.findIndex(function (t) {\n        return t.value === value;\n      });\n\n      if (index >= 0) {\n        var opts = grid.setContext(this.getContext(index));\n        return opts.lineWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid(chartArea) {\n      var grid = this.options.grid;\n      var ctx = this.ctx;\n\n      var items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n\n      var i, ilen;\n\n      var drawLine = function drawLine(p1, p2, style) {\n        if (!style.width || !style.color) {\n          return;\n        }\n\n        ctx.save();\n        ctx.lineWidth = style.width;\n        ctx.strokeStyle = style.color;\n        ctx.setLineDash(style.borderDash || []);\n        ctx.lineDashOffset = style.borderDashOffset;\n        ctx.beginPath();\n        ctx.moveTo(p1.x, p1.y);\n        ctx.lineTo(p2.x, p2.y);\n        ctx.stroke();\n        ctx.restore();\n      };\n\n      if (grid.display) {\n        for (i = 0, ilen = items.length; i < ilen; ++i) {\n          var item = items[i];\n\n          if (grid.drawOnChartArea) {\n            drawLine({\n              x: item.x1,\n              y: item.y1\n            }, {\n              x: item.x2,\n              y: item.y2\n            }, item);\n          }\n\n          if (grid.drawTicks) {\n            drawLine({\n              x: item.tx1,\n              y: item.ty1\n            }, {\n              x: item.tx2,\n              y: item.ty2\n            }, {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {\n      var chart = this.chart,\n          ctx = this.ctx,\n          grid = this.options.grid;\n      var borderOpts = grid.setContext(this.getContext());\n      var axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n\n      if (!axisWidth) {\n        return;\n      }\n\n      var lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n      var borderValue = this._borderValue;\n      var x1, x2, y1, y2;\n\n      if (this.isHorizontal()) {\n        x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n\n      ctx.save();\n      ctx.lineWidth = borderOpts.borderWidth;\n      ctx.strokeStyle = borderOpts.borderColor;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.restore();\n    }\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels(chartArea) {\n      var optionTicks = this.options.ticks;\n\n      if (!optionTicks.display) {\n        return;\n      }\n\n      var ctx = this.ctx;\n\n      var area = this._computeLabelArea();\n\n      if (area) {\n        clipArea(ctx, area);\n      }\n\n      var items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n\n      var i, ilen;\n\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        var item = items[i];\n        var tickFont = item.font;\n        var label = item.label;\n\n        if (item.backdrop) {\n          ctx.fillStyle = item.backdrop.color;\n          ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n        }\n\n        var y = item.textOffset;\n        renderText(ctx, label, 0, y, tickFont, item);\n      }\n\n      if (area) {\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var ctx = this.ctx,\n          _this$options9 = this.options,\n          position = _this$options9.position,\n          title = _this$options9.title,\n          reverse = _this$options9.reverse;\n\n      if (!title.display) {\n        return;\n      }\n\n      var font = toFont(title.font);\n      var padding = toPadding(title.padding);\n      var align = title.align;\n      var offset = font.lineHeight / 2;\n\n      if (position === 'bottom' || position === 'center' || isObject(position)) {\n        offset += padding.bottom;\n\n        if (isArray(title.text)) {\n          offset += font.lineHeight * (title.text.length - 1);\n        }\n      } else {\n        offset += padding.top;\n      }\n\n      var _titleArgs = titleArgs(this, offset, position, align),\n          titleX = _titleArgs.titleX,\n          titleY = _titleArgs.titleY,\n          maxWidth = _titleArgs.maxWidth,\n          rotation = _titleArgs.rotation;\n\n      renderText(ctx, title.text, 0, 0, font, {\n        color: title.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: titleAlign(align, position, reverse),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(chartArea) {\n      if (!this._isVisible()) {\n        return;\n      }\n\n      this.drawBackground();\n      this.drawGrid(chartArea);\n      this.drawBorder();\n      this.drawTitle();\n      this.drawLabels(chartArea);\n    }\n  }, {\n    key: \"_layers\",\n    value: function _layers() {\n      var _this10 = this;\n\n      var opts = this.options;\n      var tz = opts.ticks && opts.ticks.z || 0;\n      var gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n\n      if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n        return [{\n          z: tz,\n          draw: function draw(chartArea) {\n            _this10.draw(chartArea);\n          }\n        }];\n      }\n\n      return [{\n        z: gz,\n        draw: function draw(chartArea) {\n          _this10.drawBackground();\n\n          _this10.drawGrid(chartArea);\n\n          _this10.drawTitle();\n        }\n      }, {\n        z: gz + 1,\n        draw: function draw() {\n          _this10.drawBorder();\n        }\n      }, {\n        z: tz,\n        draw: function draw(chartArea) {\n          _this10.drawLabels(chartArea);\n        }\n      }];\n    }\n  }, {\n    key: \"getMatchingVisibleMetas\",\n    value: function getMatchingVisibleMetas(type) {\n      var metas = this.chart.getSortedVisibleDatasetMetas();\n      var axisID = this.axis + 'AxisID';\n      var result = [];\n      var i, ilen;\n\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        var meta = metas[i];\n\n        if (meta[axisID] === this.id && (!type || meta.type === type)) {\n          result.push(meta);\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_resolveTickFontOptions\",\n    value: function _resolveTickFontOptions(index) {\n      var opts = this.options.ticks.setContext(this.getContext(index));\n      return toFont(opts.font);\n    }\n  }, {\n    key: \"_maxDigits\",\n    value: function _maxDigits() {\n      var fontSize = this._resolveTickFontOptions(0).lineHeight;\n\n      return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n  }]);\n\n  return Scale;\n}(Element);\n\nvar TypedRegistry =\n/*#__PURE__*/\nfunction () {\n  function TypedRegistry(type, scope, override) {\n    _classCallCheck(this, TypedRegistry);\n\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  _createClass(TypedRegistry, [{\n    key: \"isForType\",\n    value: function isForType(type) {\n      return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n  }, {\n    key: \"register\",\n    value: function register(item) {\n      var proto = Object.getPrototypeOf(item);\n      var parentScope;\n\n      if (isIChartComponent(proto)) {\n        parentScope = this.register(proto);\n      }\n\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope + '.' + id;\n\n      if (!id) {\n        throw new Error('class does not have id: ' + item);\n      }\n\n      if (id in items) {\n        return scope;\n      }\n\n      items[id] = item;\n      registerDefaults(item, scope, parentScope);\n\n      if (this.override) {\n        defaults.override(item.id, item.overrides);\n      }\n\n      return scope;\n    }\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      return this.items[id];\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister(item) {\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope;\n\n      if (id in items) {\n        delete items[id];\n      }\n\n      if (scope && id in defaults[scope]) {\n        delete defaults[scope][id];\n\n        if (this.override) {\n          delete overrides[id];\n        }\n      }\n    }\n  }]);\n\n  return TypedRegistry;\n}();\n\nfunction registerDefaults(item, scope, parentScope) {\n  var itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(function (property) {\n    var propertyParts = property.split('.');\n    var sourceName = propertyParts.pop();\n    var sourceScope = [scope].concat(propertyParts).join('.');\n    var parts = routes[property].split('.');\n    var targetName = parts.pop();\n    var targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nvar Registry =\n/*#__PURE__*/\nfunction () {\n  function Registry() {\n    _classCallCheck(this, Registry);\n\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  _createClass(Registry, [{\n    key: \"add\",\n    value: function add() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      this._each('register', args);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      this._each('unregister', args);\n    }\n  }, {\n    key: \"addControllers\",\n    value: function addControllers() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      this._each('register', args, this.controllers);\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      this._each('register', args, this.elements);\n    }\n  }, {\n    key: \"addPlugins\",\n    value: function addPlugins() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      this._each('register', args, this.plugins);\n    }\n  }, {\n    key: \"addScales\",\n    value: function addScales() {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      this._each('register', args, this.scales);\n    }\n  }, {\n    key: \"getController\",\n    value: function getController(id) {\n      return this._get(id, this.controllers, 'controller');\n    }\n  }, {\n    key: \"getElement\",\n    value: function getElement(id) {\n      return this._get(id, this.elements, 'element');\n    }\n  }, {\n    key: \"getPlugin\",\n    value: function getPlugin(id) {\n      return this._get(id, this.plugins, 'plugin');\n    }\n  }, {\n    key: \"getScale\",\n    value: function getScale(id) {\n      return this._get(id, this.scales, 'scale');\n    }\n  }, {\n    key: \"removeControllers\",\n    value: function removeControllers() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n\n      this._each('unregister', args, this.controllers);\n    }\n  }, {\n    key: \"removeElements\",\n    value: function removeElements() {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n\n      this._each('unregister', args, this.elements);\n    }\n  }, {\n    key: \"removePlugins\",\n    value: function removePlugins() {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n\n      this._each('unregister', args, this.plugins);\n    }\n  }, {\n    key: \"removeScales\",\n    value: function removeScales() {\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n\n      this._each('unregister', args, this.scales);\n    }\n  }, {\n    key: \"_each\",\n    value: function _each(method, args, typedRegistry) {\n      var _this11 = this;\n\n      _toConsumableArray(args).forEach(function (arg) {\n        var reg = typedRegistry || _this11._getRegistryForType(arg);\n\n        if (typedRegistry || reg.isForType(arg) || reg === _this11.plugins && arg.id) {\n          _this11._exec(method, reg, arg);\n        } else {\n          each(arg, function (item) {\n            var itemReg = typedRegistry || _this11._getRegistryForType(item);\n\n            _this11._exec(method, itemReg, item);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_exec\",\n    value: function _exec(method, registry, component) {\n      var camelMethod = _capitalize(method);\n\n      callback(component['before' + camelMethod], [], component);\n      registry[method](component);\n      callback(component['after' + camelMethod], [], component);\n    }\n  }, {\n    key: \"_getRegistryForType\",\n    value: function _getRegistryForType(type) {\n      for (var i = 0; i < this._typedRegistries.length; i++) {\n        var reg = this._typedRegistries[i];\n\n        if (reg.isForType(type)) {\n          return reg;\n        }\n      }\n\n      return this.plugins;\n    }\n  }, {\n    key: \"_get\",\n    value: function _get(id, typedRegistry, type) {\n      var item = typedRegistry.get(id);\n\n      if (item === undefined) {\n        throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n      }\n\n      return item;\n    }\n  }]);\n\n  return Registry;\n}();\n\nvar registry = new Registry();\n\nvar PluginService =\n/*#__PURE__*/\nfunction () {\n  function PluginService() {\n    _classCallCheck(this, PluginService);\n\n    this._init = [];\n  }\n\n  _createClass(PluginService, [{\n    key: \"notify\",\n    value: function notify(chart, hook, args, filter) {\n      if (hook === 'beforeInit') {\n        this._init = this._createDescriptors(chart, true);\n\n        this._notify(this._init, chart, 'install');\n      }\n\n      var descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n\n      var result = this._notify(descriptors, chart, hook, args);\n\n      if (hook === 'afterDestroy') {\n        this._notify(descriptors, chart, 'stop');\n\n        this._notify(this._init, chart, 'uninstall');\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(descriptors, chart, hook, args) {\n      args = args || {};\n      var _iteratorNormalCompletion10 = true;\n      var _didIteratorError10 = false;\n      var _iteratorError10 = undefined;\n\n      try {\n        for (var _iterator10 = descriptors[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n          var descriptor = _step10.value;\n          var plugin = descriptor.plugin;\n          var method = plugin[hook];\n          var params = [chart, args, descriptor.options];\n\n          if (callback(method, params, plugin) === false && args.cancelable) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError10 = true;\n        _iteratorError10 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n            _iterator10.return();\n          }\n        } finally {\n          if (_didIteratorError10) {\n            throw _iteratorError10;\n          }\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"invalidate\",\n    value: function invalidate() {\n      if (!isNullOrUndef(this._cache)) {\n        this._oldCache = this._cache;\n        this._cache = undefined;\n      }\n    }\n  }, {\n    key: \"_descriptors\",\n    value: function _descriptors(chart) {\n      if (this._cache) {\n        return this._cache;\n      }\n\n      var descriptors = this._cache = this._createDescriptors(chart);\n\n      this._notifyStateChanges(chart);\n\n      return descriptors;\n    }\n  }, {\n    key: \"_createDescriptors\",\n    value: function _createDescriptors(chart, all) {\n      var config = chart && chart.config;\n      var options = valueOrDefault(config.options && config.options.plugins, {});\n      var plugins = allPlugins(config);\n      return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n  }, {\n    key: \"_notifyStateChanges\",\n    value: function _notifyStateChanges(chart) {\n      var previousDescriptors = this._oldCache || [];\n      var descriptors = this._cache;\n\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.plugin.id === y.plugin.id;\n          });\n        });\n      };\n\n      this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n\n      this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n  }]);\n\n  return PluginService;\n}();\n\nfunction allPlugins(config) {\n  var plugins = [];\n  var keys = Object.keys(registry.plugins.items);\n\n  for (var i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  var local = config.plugins || [];\n\n  for (var _i = 0; _i < local.length; _i++) {\n    var plugin = local[_i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n\n  return plugins;\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n\n  if (options === true) {\n    return {};\n  }\n\n  return options;\n}\n\nfunction createDescriptors(chart, plugins, options, all) {\n  var result = [];\n  var context = chart.getContext();\n\n  for (var i = 0; i < plugins.length; i++) {\n    var plugin = plugins[i];\n    var id = plugin.id;\n    var opts = getOpts(options[id], all);\n\n    if (opts === null) {\n      continue;\n    }\n\n    result.push({\n      plugin: plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, plugin, opts, context) {\n  var keys = config.pluginScopeKeys(plugin);\n  var scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  var datasetDefaults = defaults.datasets[type] || {};\n  var datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  var axis = id;\n\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\n\nfunction mergeScaleConfig(config, options) {\n  var chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  var configScales = options.scales || {};\n  var chartIndexAxis = getIndexAxis(config.type, options);\n  var firstIDs = Object.create(null);\n  var scales = Object.create(null);\n  Object.keys(configScales).forEach(function (id) {\n    var scaleConf = configScales[id];\n\n    if (!isObject(scaleConf)) {\n      return console.error(\"Invalid scale configuration for scale: \".concat(id));\n    }\n\n    if (scaleConf._proxy) {\n      return console.warn(\"Ignoring resolver passed as options for scale: \".concat(id));\n    }\n\n    var axis = determineAxis(id, scaleConf);\n    var defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    var defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis: axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(function (dataset) {\n    var type = dataset.type || config.type;\n    var indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    var datasetDefaults = overrides[type] || {};\n    var defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(function (defaultID) {\n      var axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      var id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis: axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(function (key) {\n    var scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\n\nfunction initOptions(config) {\n  var options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\n\nvar keyCache = new Map();\nvar keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  var keys = keyCache.get(cacheKey);\n\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n\n  return keys;\n}\n\nvar addIfFound = function addIfFound(set, obj, key) {\n  var opts = resolveObjectKey(obj, key);\n\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nvar Config =\n/*#__PURE__*/\nfunction () {\n  function Config(config) {\n    _classCallCheck(this, Config);\n\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  _createClass(Config, [{\n    key: \"update\",\n    value: function update() {\n      var config = this._config;\n      this.clearCache();\n      initOptions(config);\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this._scopeCache.clear();\n\n      this._resolverCache.clear();\n    }\n  }, {\n    key: \"datasetScopeKeys\",\n    value: function datasetScopeKeys(datasetType) {\n      return cachedKeys(datasetType, function () {\n        return [[\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetAnimationScopeKeys\",\n    value: function datasetAnimationScopeKeys(datasetType, transition) {\n      return cachedKeys(\"\".concat(datasetType, \".transition.\").concat(transition), function () {\n        return [[\"datasets.\".concat(datasetType, \".transitions.\").concat(transition), \"transitions.\".concat(transition)], [\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetElementScopeKeys\",\n    value: function datasetElementScopeKeys(datasetType, elementType) {\n      return cachedKeys(\"\".concat(datasetType, \"-\").concat(elementType), function () {\n        return [[\"datasets.\".concat(datasetType, \".elements.\").concat(elementType), \"datasets.\".concat(datasetType), \"elements.\".concat(elementType), '']];\n      });\n    }\n  }, {\n    key: \"pluginScopeKeys\",\n    value: function pluginScopeKeys(plugin) {\n      var id = plugin.id;\n      var type = this.type;\n      return cachedKeys(\"\".concat(type, \"-plugin-\").concat(id), function () {\n        return [[\"plugins.\".concat(id)].concat(_toConsumableArray(plugin.additionalOptionScopes || []))];\n      });\n    }\n  }, {\n    key: \"_cachedScopes\",\n    value: function _cachedScopes(mainScope, resetCache) {\n      var _scopeCache = this._scopeCache;\n\n      var cache = _scopeCache.get(mainScope);\n\n      if (!cache || resetCache) {\n        cache = new Map();\n\n        _scopeCache.set(mainScope, cache);\n      }\n\n      return cache;\n    }\n  }, {\n    key: \"getOptionScopes\",\n    value: function getOptionScopes(mainScope, keyLists, resetCache) {\n      var options = this.options,\n          type = this.type;\n\n      var cache = this._cachedScopes(mainScope, resetCache);\n\n      var cached = cache.get(keyLists);\n\n      if (cached) {\n        return cached;\n      }\n\n      var scopes = new Set();\n      keyLists.forEach(function (keys) {\n        if (mainScope) {\n          scopes.add(mainScope);\n          keys.forEach(function (key) {\n            return addIfFound(scopes, mainScope, key);\n          });\n        }\n\n        keys.forEach(function (key) {\n          return addIfFound(scopes, options, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, overrides[type] || {}, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, defaults, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, descriptors, key);\n        });\n      });\n      var array = Array.from(scopes);\n\n      if (array.length === 0) {\n        array.push(Object.create(null));\n      }\n\n      if (keysCached.has(keyLists)) {\n        cache.set(keyLists, array);\n      }\n\n      return array;\n    }\n  }, {\n    key: \"chartOptionScopes\",\n    value: function chartOptionScopes() {\n      var options = this.options,\n          type = this.type;\n      return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n        type: type\n      }, defaults, descriptors];\n    }\n  }, {\n    key: \"resolveNamedOptions\",\n    value: function resolveNamedOptions(scopes, names, context) {\n      var prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n      var result = {\n        $shared: true\n      };\n\n      var _getResolver = getResolver(this._resolverCache, scopes, prefixes),\n          resolver = _getResolver.resolver,\n          subPrefixes = _getResolver.subPrefixes;\n\n      var options = resolver;\n\n      if (needContext(resolver, names)) {\n        result.$shared = false;\n        context = isFunction(context) ? context() : context;\n        var subResolver = this.createResolver(scopes, context, subPrefixes);\n        options = _attachContext(resolver, context, subResolver);\n      }\n\n      var _iteratorNormalCompletion11 = true;\n      var _didIteratorError11 = false;\n      var _iteratorError11 = undefined;\n\n      try {\n        for (var _iterator11 = names[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n          var prop = _step11.value;\n          result[prop] = options[prop];\n        }\n      } catch (err) {\n        _didIteratorError11 = true;\n        _iteratorError11 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion11 && _iterator11.return != null) {\n            _iterator11.return();\n          }\n        } finally {\n          if (_didIteratorError11) {\n            throw _iteratorError11;\n          }\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"createResolver\",\n    value: function createResolver(scopes, context) {\n      var prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n      var descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n\n      var _getResolver2 = getResolver(this._resolverCache, scopes, prefixes),\n          resolver = _getResolver2.resolver;\n\n      return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n  }, {\n    key: \"platform\",\n    get: function get() {\n      return this._config.platform;\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this._config.type;\n    },\n    set: function set(type) {\n      this._config.type = type;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._config.data;\n    },\n    set: function set(data) {\n      this._config.data = initData(data);\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._config.options;\n    },\n    set: function set(options) {\n      this._config.options = options;\n    }\n  }, {\n    key: \"plugins\",\n    get: function get() {\n      return this._config.plugins;\n    }\n  }]);\n\n  return Config;\n}();\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  var cache = resolverCache.get(scopes);\n\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n\n  var cacheKey = prefixes.join();\n  var cached = cache.get(cacheKey);\n\n  if (!cached) {\n    var resolver = _createResolver(scopes, prefixes);\n\n    cached = {\n      resolver: resolver,\n      subPrefixes: prefixes.filter(function (p) {\n        return !p.toLowerCase().includes('hover');\n      })\n    };\n    cache.set(cacheKey, cached);\n  }\n\n  return cached;\n}\n\nvar hasFunction = function hasFunction(value) {\n  return isObject(value) && Object.getOwnPropertyNames(value).reduce(function (acc, key) {\n    return acc || isFunction(value[key]);\n  }, false);\n};\n\nfunction needContext(proxy, names) {\n  var _descriptors2 = _descriptors(proxy),\n      isScriptable = _descriptors2.isScriptable,\n      isIndexable = _descriptors2.isIndexable;\n\n  var _iteratorNormalCompletion12 = true;\n  var _didIteratorError12 = false;\n  var _iteratorError12 = undefined;\n\n  try {\n    for (var _iterator12 = names[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n      var prop = _step12.value;\n      var scriptable = isScriptable(prop);\n      var indexable = isIndexable(prop);\n      var value = (indexable || scriptable) && proxy[prop];\n\n      if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _didIteratorError12 = true;\n    _iteratorError12 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion12 && _iterator12.return != null) {\n        _iterator12.return();\n      }\n    } finally {\n      if (_didIteratorError12) {\n        throw _iteratorError12;\n      }\n    }\n  }\n\n  return false;\n}\n\nvar version = \"3.8.0\";\nvar KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\n\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\n\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n\n  return item;\n}\n\nvar instances = {};\n\nvar getChart = function getChart(key) {\n  var canvas = getCanvas(key);\n  return Object.values(instances).filter(function (c) {\n    return c.canvas === canvas;\n  }).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  var keys = Object.keys(obj);\n\n  for (var _i2 = 0, _keys = keys; _i2 < _keys.length; _i2++) {\n    var key = _keys[_i2];\n    var intKey = +key;\n\n    if (intKey >= start) {\n      var value = obj[key];\n      delete obj[key];\n\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n\n  if (isClick) {\n    return lastEvent;\n  }\n\n  return e;\n}\n\nvar Chart =\n/*#__PURE__*/\nfunction () {\n  function Chart(item, userConfig) {\n    var _this12 = this;\n\n    _classCallCheck(this, Chart);\n\n    var config = this.config = new Config(userConfig);\n    var initialCanvas = getCanvas(item);\n    var existingChart = getChart(initialCanvas);\n\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas can be reused.');\n    }\n\n    var options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    var context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    var canvas = context && context.canvas;\n    var height = canvas && canvas.height;\n    var width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(function (mode) {\n      return _this12.update(mode);\n    }, options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  _createClass(Chart, [{\n    key: \"_initialize\",\n    value: function _initialize() {\n      this.notifyPlugins('beforeInit');\n\n      if (this.options.responsive) {\n        this.resize();\n      } else {\n        retinaScale(this, this.options.devicePixelRatio);\n      }\n\n      this.bindEvents();\n      this.notifyPlugins('afterInit');\n      return this;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      clearCanvas(this.canvas, this.ctx);\n      return this;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      animator.stop(this);\n      return this;\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {\n      if (!animator.running(this)) {\n        this._resize(width, height);\n      } else {\n        this._resizeBeforeDraw = {\n          width: width,\n          height: height\n        };\n      }\n    }\n  }, {\n    key: \"_resize\",\n    value: function _resize(width, height) {\n      var options = this.options;\n      var canvas = this.canvas;\n      var aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n      var newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n      var newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n      var mode = this.width ? 'resize' : 'attach';\n      this.width = newSize.width;\n      this.height = newSize.height;\n      this._aspectRatio = this.aspectRatio;\n\n      if (!retinaScale(this, newRatio, true)) {\n        return;\n      }\n\n      this.notifyPlugins('resize', {\n        size: newSize\n      });\n      callback(options.onResize, [this, newSize], this);\n\n      if (this.attached) {\n        if (this._doResize(mode)) {\n          this.render();\n        }\n      }\n    }\n  }, {\n    key: \"ensureScalesHaveIDs\",\n    value: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      each(scalesOptions, function (axisOptions, axisID) {\n        axisOptions.id = axisID;\n      });\n    }\n  }, {\n    key: \"buildOrUpdateScales\",\n    value: function buildOrUpdateScales() {\n      var _this13 = this;\n\n      var options = this.options;\n      var scaleOpts = options.scales;\n      var scales = this.scales;\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n      var items = [];\n\n      if (scaleOpts) {\n        items = items.concat(Object.keys(scaleOpts).map(function (id) {\n          var scaleOptions = scaleOpts[id];\n          var axis = determineAxis(id, scaleOptions);\n          var isRadial = axis === 'r';\n          var isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        }));\n      }\n\n      each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var axis = determineAxis(id, scaleOptions);\n        var scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n        if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n        } else {\n          var scaleClass = registry.getScale(scaleType);\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            ctx: _this13.ctx,\n            chart: _this13\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.init(scaleOptions, options);\n      });\n      each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      each(scales, function (scale) {\n        layouts.configure(_this13, scale, scale.options);\n        layouts.addBox(_this13, scale);\n      });\n    }\n  }, {\n    key: \"_updateMetasets\",\n    value: function _updateMetasets() {\n      var metasets = this._metasets;\n      var numData = this.data.datasets.length;\n      var numMeta = metasets.length;\n      metasets.sort(function (a, b) {\n        return a.index - b.index;\n      });\n\n      if (numMeta > numData) {\n        for (var i = numData; i < numMeta; ++i) {\n          this._destroyDatasetMeta(i);\n        }\n\n        metasets.splice(numData, numMeta - numData);\n      }\n\n      this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n  }, {\n    key: \"_removeUnreferencedMetasets\",\n    value: function _removeUnreferencedMetasets() {\n      var _this14 = this;\n\n      var metasets = this._metasets,\n          datasets = this.data.datasets;\n\n      if (metasets.length > datasets.length) {\n        delete this._stacks;\n      }\n\n      metasets.forEach(function (meta, index) {\n        if (datasets.filter(function (x) {\n          return x === meta._dataset;\n        }).length === 0) {\n          _this14._destroyDatasetMeta(index);\n        }\n      });\n    }\n  }, {\n    key: \"buildOrUpdateControllers\",\n    value: function buildOrUpdateControllers() {\n      var newControllers = [];\n      var datasets = this.data.datasets;\n      var i, ilen;\n\n      this._removeUnreferencedMetasets();\n\n      for (i = 0, ilen = datasets.length; i < ilen; i++) {\n        var dataset = datasets[i];\n        var meta = this.getDatasetMeta(i);\n        var type = dataset.type || this.config.type;\n\n        if (meta.type && meta.type !== type) {\n          this._destroyDatasetMeta(i);\n\n          meta = this.getDatasetMeta(i);\n        }\n\n        meta.type = type;\n        meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n        meta.order = dataset.order || 0;\n        meta.index = i;\n        meta.label = '' + dataset.label;\n        meta.visible = this.isDatasetVisible(i);\n\n        if (meta.controller) {\n          meta.controller.updateIndex(i);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = registry.getController(type);\n          var _defaults$datasets$ty = defaults.datasets[type],\n              datasetElementType = _defaults$datasets$ty.datasetElementType,\n              dataElementType = _defaults$datasets$ty.dataElementType;\n          Object.assign(ControllerClass.prototype, {\n            dataElementType: registry.getElement(dataElementType),\n            datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n          });\n          meta.controller = new ControllerClass(this, i);\n          newControllers.push(meta.controller);\n        }\n      }\n\n      this._updateMetasets();\n\n      return newControllers;\n    }\n  }, {\n    key: \"_resetElements\",\n    value: function _resetElements() {\n      var _this15 = this;\n\n      each(this.data.datasets, function (dataset, datasetIndex) {\n        _this15.getDatasetMeta(datasetIndex).controller.reset();\n      }, this);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._resetElements();\n\n      this.notifyPlugins('reset');\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var config = this.config;\n      config.update();\n      var options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n      var animsDisabled = this._animationsDisabled = !options.animation;\n\n      this._updateScales();\n\n      this._checkEventBindings();\n\n      this._updateHiddenIndices();\n\n      this._plugins.invalidate();\n\n      if (this.notifyPlugins('beforeUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      var newControllers = this.buildOrUpdateControllers();\n      this.notifyPlugins('beforeElementsUpdate');\n      var minPadding = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n        var _this$getDatasetMeta = this.getDatasetMeta(i),\n            controller = _this$getDatasetMeta.controller;\n\n        var reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n        controller.buildOrUpdateElements(reset);\n        minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n      }\n\n      minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n\n      this._updateLayout(minPadding);\n\n      if (!animsDisabled) {\n        each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      this._updateDatasets(mode);\n\n      this.notifyPlugins('afterUpdate', {\n        mode: mode\n      });\n\n      this._layers.sort(compare2Level('z', '_idx'));\n\n      var _active = this._active,\n          _lastEvent = this._lastEvent;\n\n      if (_lastEvent) {\n        this._eventHandler(_lastEvent, true);\n      } else if (_active.length) {\n        this._updateHoverStyles(_active, _active, true);\n      }\n\n      this.render();\n    }\n  }, {\n    key: \"_updateScales\",\n    value: function _updateScales() {\n      var _this16 = this;\n\n      each(this.scales, function (scale) {\n        layouts.removeBox(_this16, scale);\n      });\n      this.ensureScalesHaveIDs();\n      this.buildOrUpdateScales();\n    }\n  }, {\n    key: \"_checkEventBindings\",\n    value: function _checkEventBindings() {\n      var options = this.options;\n      var existingEvents = new Set(Object.keys(this._listeners));\n      var newEvents = new Set(options.events);\n\n      if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n        this.unbindEvents();\n        this.bindEvents();\n      }\n    }\n  }, {\n    key: \"_updateHiddenIndices\",\n    value: function _updateHiddenIndices() {\n      var _hiddenIndices = this._hiddenIndices;\n      var changes = this._getUniformDataChanges() || [];\n      var _iteratorNormalCompletion13 = true;\n      var _didIteratorError13 = false;\n      var _iteratorError13 = undefined;\n\n      try {\n        for (var _iterator13 = changes[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n          var _step13$value = _step13.value,\n              method = _step13$value.method,\n              start = _step13$value.start,\n              count = _step13$value.count;\n          var move = method === '_removeElements' ? -count : count;\n          moveNumericKeys(_hiddenIndices, start, move);\n        }\n      } catch (err) {\n        _didIteratorError13 = true;\n        _iteratorError13 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion13 && _iterator13.return != null) {\n            _iterator13.return();\n          }\n        } finally {\n          if (_didIteratorError13) {\n            throw _iteratorError13;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_getUniformDataChanges\",\n    value: function _getUniformDataChanges() {\n      var _dataChanges = this._dataChanges;\n\n      if (!_dataChanges || !_dataChanges.length) {\n        return;\n      }\n\n      this._dataChanges = [];\n      var datasetCount = this.data.datasets.length;\n\n      var makeSet = function makeSet(idx) {\n        return new Set(_dataChanges.filter(function (c) {\n          return c[0] === idx;\n        }).map(function (c, i) {\n          return i + ',' + c.splice(1).join(',');\n        }));\n      };\n\n      var changeSet = makeSet(0);\n\n      for (var i = 1; i < datasetCount; i++) {\n        if (!setsEqual(changeSet, makeSet(i))) {\n          return;\n        }\n      }\n\n      return Array.from(changeSet).map(function (c) {\n        return c.split(',');\n      }).map(function (a) {\n        return {\n          method: a[1],\n          start: +a[2],\n          count: +a[3]\n        };\n      });\n    }\n  }, {\n    key: \"_updateLayout\",\n    value: function _updateLayout(minPadding) {\n      var _this17 = this;\n\n      if (this.notifyPlugins('beforeLayout', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      layouts.update(this, this.width, this.height, minPadding);\n      var area = this.chartArea;\n      var noArea = area.width <= 0 || area.height <= 0;\n      this._layers = [];\n      each(this.boxes, function (box) {\n        var _this17$_layers;\n\n        if (noArea && box.position === 'chartArea') {\n          return;\n        }\n\n        if (box.configure) {\n          box.configure();\n        }\n\n        (_this17$_layers = _this17._layers).push.apply(_this17$_layers, _toConsumableArray(box._layers()));\n      }, this);\n\n      this._layers.forEach(function (item, index) {\n        item._idx = index;\n      });\n\n      this.notifyPlugins('afterLayout');\n    }\n  }, {\n    key: \"_updateDatasets\",\n    value: function _updateDatasets(mode) {\n      if (this.notifyPlugins('beforeDatasetsUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this.getDatasetMeta(i).controller.configure();\n      }\n\n      for (var _i3 = 0, _ilen = this.data.datasets.length; _i3 < _ilen; ++_i3) {\n        this._updateDataset(_i3, isFunction(mode) ? mode({\n          datasetIndex: _i3\n        }) : mode);\n      }\n\n      this.notifyPlugins('afterDatasetsUpdate', {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"_updateDataset\",\n    value: function _updateDataset(index, mode) {\n      var meta = this.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        mode: mode,\n        cancelable: true\n      };\n\n      if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n        return;\n      }\n\n      meta.controller._update(mode);\n\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetUpdate', args);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.notifyPlugins('beforeRender', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      if (animator.has(this)) {\n        if (this.attached && !animator.running(this)) {\n          animator.start(this);\n        }\n      } else {\n        this.draw();\n        onAnimationsComplete({\n          chart: this\n        });\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var i;\n\n      if (this._resizeBeforeDraw) {\n        var _this$_resizeBeforeDr = this._resizeBeforeDraw,\n            width = _this$_resizeBeforeDr.width,\n            height = _this$_resizeBeforeDr.height;\n\n        this._resize(width, height);\n\n        this._resizeBeforeDraw = null;\n      }\n\n      this.clear();\n\n      if (this.width <= 0 || this.height <= 0) {\n        return;\n      }\n\n      if (this.notifyPlugins('beforeDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      var layers = this._layers;\n\n      for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n\n      this._drawDatasets();\n\n      for (; i < layers.length; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n\n      this.notifyPlugins('afterDraw');\n    }\n  }, {\n    key: \"_getSortedDatasetMetas\",\n    value: function _getSortedDatasetMetas(filterVisible) {\n      var metasets = this._sortedMetasets;\n      var result = [];\n      var i, ilen;\n\n      for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n        var meta = metasets[i];\n\n        if (!filterVisible || meta.visible) {\n          result.push(meta);\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"getSortedVisibleDatasetMetas\",\n    value: function getSortedVisibleDatasetMetas() {\n      return this._getSortedDatasetMetas(true);\n    }\n  }, {\n    key: \"_drawDatasets\",\n    value: function _drawDatasets() {\n      if (this.notifyPlugins('beforeDatasetsDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      var metasets = this.getSortedVisibleDatasetMetas();\n\n      for (var i = metasets.length - 1; i >= 0; --i) {\n        this._drawDataset(metasets[i]);\n      }\n\n      this.notifyPlugins('afterDatasetsDraw');\n    }\n  }, {\n    key: \"_drawDataset\",\n    value: function _drawDataset(meta) {\n      var ctx = this.ctx;\n      var clip = meta._clip;\n      var useClip = !clip.disabled;\n      var area = this.chartArea;\n      var args = {\n        meta: meta,\n        index: meta.index,\n        cancelable: true\n      };\n\n      if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n        return;\n      }\n\n      if (useClip) {\n        clipArea(ctx, {\n          left: clip.left === false ? 0 : area.left - clip.left,\n          right: clip.right === false ? this.width : area.right + clip.right,\n          top: clip.top === false ? 0 : area.top - clip.top,\n          bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n        });\n      }\n\n      meta.controller.draw();\n\n      if (useClip) {\n        unclipArea(ctx);\n      }\n\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetDraw', args);\n    }\n  }, {\n    key: \"isPointInArea\",\n    value: function isPointInArea(point) {\n      return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n  }, {\n    key: \"getElementsAtEventForMode\",\n    value: function getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n      var method = Interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options, useFinalPosition);\n      }\n\n      return [];\n    }\n  }, {\n    key: \"getDatasetMeta\",\n    value: function getDatasetMeta(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n      var metasets = this._metasets;\n      var meta = metasets.filter(function (x) {\n        return x && x._dataset === dataset;\n      }).pop();\n\n      if (!meta) {\n        meta = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          xAxisID: null,\n          yAxisID: null,\n          order: dataset && dataset.order || 0,\n          index: datasetIndex,\n          _dataset: dataset,\n          _parsed: [],\n          _sorted: false\n        };\n        metasets.push(meta);\n      }\n\n      return meta;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = createContext(null, {\n        chart: this,\n        type: 'chart'\n      }));\n    }\n  }, {\n    key: \"getVisibleDatasetCount\",\n    value: function getVisibleDatasetCount() {\n      return this.getSortedVisibleDatasetMetas().length;\n    }\n  }, {\n    key: \"isDatasetVisible\",\n    value: function isDatasetVisible(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n\n      if (!dataset) {\n        return false;\n      }\n\n      var meta = this.getDatasetMeta(datasetIndex);\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n  }, {\n    key: \"setDatasetVisibility\",\n    value: function setDatasetVisibility(datasetIndex, visible) {\n      var meta = this.getDatasetMeta(datasetIndex);\n      meta.hidden = !visible;\n    }\n  }, {\n    key: \"toggleDataVisibility\",\n    value: function toggleDataVisibility(index) {\n      this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"getDataVisibility\",\n    value: function getDataVisibility(index) {\n      return !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"_updateVisibility\",\n    value: function _updateVisibility(datasetIndex, dataIndex, visible) {\n      var mode = visible ? 'show' : 'hide';\n      var meta = this.getDatasetMeta(datasetIndex);\n\n      var anims = meta.controller._resolveAnimations(undefined, mode);\n\n      if (defined(dataIndex)) {\n        meta.data[dataIndex].hidden = !visible;\n        this.update();\n      } else {\n        this.setDatasetVisibility(datasetIndex, visible);\n        anims.update(meta, {\n          visible: visible\n        });\n        this.update(function (ctx) {\n          return ctx.datasetIndex === datasetIndex ? mode : undefined;\n        });\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n  }, {\n    key: \"show\",\n    value: function show(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n  }, {\n    key: \"_destroyDatasetMeta\",\n    value: function _destroyDatasetMeta(datasetIndex) {\n      var meta = this._metasets[datasetIndex];\n\n      if (meta && meta.controller) {\n        meta.controller._destroy();\n      }\n\n      delete this._metasets[datasetIndex];\n    }\n  }, {\n    key: \"_stop\",\n    value: function _stop() {\n      var i, ilen;\n      this.stop();\n      animator.remove(this);\n\n      for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.notifyPlugins('beforeDestroy');\n      var canvas = this.canvas,\n          ctx = this.ctx;\n\n      this._stop();\n\n      this.config.clearCache();\n\n      if (canvas) {\n        this.unbindEvents();\n        clearCanvas(canvas, ctx);\n        this.platform.releaseContext(ctx);\n        this.canvas = null;\n        this.ctx = null;\n      }\n\n      this.notifyPlugins('destroy');\n      delete instances[this.id];\n      this.notifyPlugins('afterDestroy');\n    }\n  }, {\n    key: \"toBase64Image\",\n    value: function toBase64Image() {\n      var _this$canvas;\n\n      return (_this$canvas = this.canvas).toDataURL.apply(_this$canvas, arguments);\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      this.bindUserEvents();\n\n      if (this.options.responsive) {\n        this.bindResponsiveEvents();\n      } else {\n        this.attached = true;\n      }\n    }\n  }, {\n    key: \"bindUserEvents\",\n    value: function bindUserEvents() {\n      var _this18 = this;\n\n      var listeners = this._listeners;\n      var platform = this.platform;\n\n      var _add = function _add(type, listener) {\n        platform.addEventListener(_this18, type, listener);\n        listeners[type] = listener;\n      };\n\n      var listener = function listener(e, x, y) {\n        e.offsetX = x;\n        e.offsetY = y;\n\n        _this18._eventHandler(e);\n      };\n\n      each(this.options.events, function (type) {\n        return _add(type, listener);\n      });\n    }\n  }, {\n    key: \"bindResponsiveEvents\",\n    value: function bindResponsiveEvents() {\n      var _this19 = this;\n\n      if (!this._responsiveListeners) {\n        this._responsiveListeners = {};\n      }\n\n      var listeners = this._responsiveListeners;\n      var platform = this.platform;\n\n      var _add = function _add(type, listener) {\n        platform.addEventListener(_this19, type, listener);\n        listeners[type] = listener;\n      };\n\n      var _remove = function _remove(type, listener) {\n        if (listeners[type]) {\n          platform.removeEventListener(_this19, type, listener);\n          delete listeners[type];\n        }\n      };\n\n      var listener = function listener(width, height) {\n        if (_this19.canvas) {\n          _this19.resize(width, height);\n        }\n      };\n\n      var detached;\n\n      var attached = function attached() {\n        _remove('attach', attached);\n\n        _this19.attached = true;\n\n        _this19.resize();\n\n        _add('resize', listener);\n\n        _add('detach', detached);\n      };\n\n      detached = function detached() {\n        _this19.attached = false;\n\n        _remove('resize', listener);\n\n        _this19._stop();\n\n        _this19._resize(0, 0);\n\n        _add('attach', attached);\n      };\n\n      if (platform.isAttached(this.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    }\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      var _this20 = this;\n\n      each(this._listeners, function (listener, type) {\n        _this20.platform.removeEventListener(_this20, type, listener);\n      });\n      this._listeners = {};\n      each(this._responsiveListeners, function (listener, type) {\n        _this20.platform.removeEventListener(_this20, type, listener);\n      });\n      this._responsiveListeners = undefined;\n    }\n  }, {\n    key: \"updateHoverStyle\",\n    value: function updateHoverStyle(items, mode, enabled) {\n      var prefix = enabled ? 'set' : 'remove';\n      var meta, item, i, ilen;\n\n      if (mode === 'dataset') {\n        meta = this.getDatasetMeta(items[0].datasetIndex);\n        meta.controller['_' + prefix + 'DatasetHoverStyle']();\n      }\n\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        item = items[i];\n        var controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n\n        if (controller) {\n          controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n        }\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements) {\n      var _this21 = this;\n\n      var lastActive = this._active || [];\n      var active = activeElements.map(function (_ref2) {\n        var datasetIndex = _ref2.datasetIndex,\n            index = _ref2.index;\n\n        var meta = _this21.getDatasetMeta(datasetIndex);\n\n        if (!meta) {\n          throw new Error('No dataset found at index ' + datasetIndex);\n        }\n\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(active, lastActive);\n\n      if (changed) {\n        this._active = active;\n        this._lastEvent = null;\n\n        this._updateHoverStyles(active, lastActive);\n      }\n    }\n  }, {\n    key: \"notifyPlugins\",\n    value: function notifyPlugins(hook, args, filter) {\n      return this._plugins.notify(this, hook, args, filter);\n    }\n  }, {\n    key: \"_updateHoverStyles\",\n    value: function _updateHoverStyles(active, lastActive, replay) {\n      var hoverOptions = this.options.hover;\n\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.datasetIndex === y.datasetIndex && x.index === y.index;\n          });\n        });\n      };\n\n      var deactivated = diff(lastActive, active);\n      var activated = replay ? active : diff(active, lastActive);\n\n      if (deactivated.length) {\n        this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n      }\n\n      if (activated.length && hoverOptions.mode) {\n        this.updateHoverStyle(activated, hoverOptions.mode, true);\n      }\n    }\n  }, {\n    key: \"_eventHandler\",\n    value: function _eventHandler(e, replay) {\n      var _this22 = this;\n\n      var args = {\n        event: e,\n        replay: replay,\n        cancelable: true,\n        inChartArea: this.isPointInArea(e)\n      };\n\n      var eventFilter = function eventFilter(plugin) {\n        return (plugin.options.events || _this22.options.events).includes(e.native.type);\n      };\n\n      if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n        return;\n      }\n\n      var changed = this._handleEvent(e, replay, args.inChartArea);\n\n      args.cancelable = false;\n      this.notifyPlugins('afterEvent', args, eventFilter);\n\n      if (changed || args.changed) {\n        this.render();\n      }\n\n      return this;\n    }\n  }, {\n    key: \"_handleEvent\",\n    value: function _handleEvent(e, replay, inChartArea) {\n      var _this$_active = this._active,\n          lastActive = _this$_active === void 0 ? [] : _this$_active,\n          options = this.options;\n      var useFinalPosition = replay;\n\n      var active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n\n      var isClick = _isClickEvent(e);\n\n      var lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n      if (inChartArea) {\n        this._lastEvent = null;\n        callback(options.onHover, [e, active, this], this);\n\n        if (isClick) {\n          callback(options.onClick, [e, active, this], this);\n        }\n      }\n\n      var changed = !_elementsEqual(active, lastActive);\n\n      if (changed || replay) {\n        this._active = active;\n\n        this._updateHoverStyles(active, lastActive, replay);\n      }\n\n      this._lastEvent = lastEvent;\n      return changed;\n    }\n  }, {\n    key: \"_getActiveElements\",\n    value: function _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n      if (e.type === 'mouseout') {\n        return [];\n      }\n\n      if (!inChartArea) {\n        return lastActive;\n      }\n\n      var hoverOptions = this.options.hover;\n      return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n  }, {\n    key: \"aspectRatio\",\n    get: function get() {\n      var _this$options10 = this.options,\n          aspectRatio = _this$options10.aspectRatio,\n          maintainAspectRatio = _this$options10.maintainAspectRatio,\n          width = this.width,\n          height = this.height,\n          _aspectRatio = this._aspectRatio;\n\n      if (!isNullOrUndef(aspectRatio)) {\n        return aspectRatio;\n      }\n\n      if (maintainAspectRatio && _aspectRatio) {\n        return _aspectRatio;\n      }\n\n      return height ? width / height : null;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this.config.data;\n    },\n    set: function set(data) {\n      this.config.data = data;\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._options;\n    },\n    set: function set(options) {\n      this.config.options = options;\n    }\n  }]);\n\n  return Chart;\n}();\n\nvar invalidatePlugins = function invalidatePlugins() {\n  return each(Chart.instances, function (chart) {\n    return chart._plugins.invalidate();\n  });\n};\n\nvar enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable: enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable: enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable: enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable: enumerable,\n    value: registry\n  },\n  version: {\n    enumerable: enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable: enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable: enumerable,\n    value: function value() {\n      registry.add.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable: enumerable,\n    value: function value() {\n      registry.remove.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  var startAngle = element.startAngle,\n      pixelMargin = element.pixelMargin,\n      x = element.x,\n      y = element.y,\n      outerRadius = element.outerRadius,\n      innerRadius = element.innerRadius;\n  var angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  var o = toRadiusCorners(arc.options.borderRadius);\n  var halfThickness = (outerRadius - innerRadius) / 2;\n  var innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  var computeOuterLimit = function computeOuterLimit(val) {\n    var outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\n\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\n\nfunction pathArc(ctx, element, offset, spacing, end) {\n  var x = element.x,\n      y = element.y,\n      start = element.startAngle,\n      pixelMargin = element.pixelMargin,\n      innerR = element.innerRadius;\n  var outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  var innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  var spacingOffset = 0;\n  var alpha = end - start;\n\n  if (spacing) {\n    var noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    var noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    var avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    var adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  var beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  var angleOffset = (alpha - beta) / 2;\n  var startAngle = start + angleOffset + spacingOffset;\n  var endAngle = end - angleOffset - spacingOffset;\n\n  var _parseBorderRadius$ = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle),\n      outerStart = _parseBorderRadius$.outerStart,\n      outerEnd = _parseBorderRadius$.outerEnd,\n      innerStart = _parseBorderRadius$.innerStart,\n      innerEnd = _parseBorderRadius$.innerEnd;\n\n  var outerStartAdjustedRadius = outerRadius - outerStart;\n  var outerEndAdjustedRadius = outerRadius - outerEnd;\n  var outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  var outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  var innerStartAdjustedRadius = innerRadius + innerStart;\n  var innerEndAdjustedRadius = innerRadius + innerEnd;\n  var innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  var innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n\n  if (outerEnd > 0) {\n    var pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n\n  var p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n\n  if (innerEnd > 0) {\n    var _pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n\n    ctx.arc(_pCenter.x, _pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n\n  ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n\n  if (innerStart > 0) {\n    var _pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n\n    ctx.arc(_pCenter2.x, _pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n\n  var p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n\n  if (outerStart > 0) {\n    var _pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n\n    ctx.arc(_pCenter3.x, _pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(ctx, element, offset, spacing) {\n  var fullCircles = element.fullCircles,\n      startAngle = element.startAngle,\n      circumference = element.circumference;\n  var endAngle = element.endAngle;\n\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n\n    for (var i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawFullCircleBorders(ctx, element, inner) {\n  var x = element.x,\n      y = element.y,\n      startAngle = element.startAngle,\n      pixelMargin = element.pixelMargin,\n      fullCircles = element.fullCircles;\n  var outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  var innerRadius = element.innerRadius + pixelMargin;\n  var i;\n\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\n\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  var options = element.options;\n  var borderWidth = options.borderWidth,\n      borderJoinStyle = options.borderJoinStyle;\n  var inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\n\nvar ArcElement =\n/*#__PURE__*/\nfunction (_Element2) {\n  _inherits(ArcElement, _Element2);\n\n  function ArcElement(cfg) {\n    var _this23;\n\n    _classCallCheck(this, ArcElement);\n\n    _this23 = _possibleConstructorReturn(this, _getPrototypeOf(ArcElement).call(this));\n    _this23.options = undefined;\n    _this23.circumference = undefined;\n    _this23.startAngle = undefined;\n    _this23.endAngle = undefined;\n    _this23.innerRadius = undefined;\n    _this23.outerRadius = undefined;\n    _this23.pixelMargin = 0;\n    _this23.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this23), cfg);\n    }\n\n    return _this23;\n  }\n\n  _createClass(ArcElement, [{\n    key: \"inRange\",\n    value: function inRange(chartX, chartY, useFinalPosition) {\n      var point = this.getProps(['x', 'y'], useFinalPosition);\n\n      var _getAngleFromPoint2 = getAngleFromPoint(point, {\n        x: chartX,\n        y: chartY\n      }),\n          angle = _getAngleFromPoint2.angle,\n          distance = _getAngleFromPoint2.distance;\n\n      var _this$getProps2 = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n          startAngle = _this$getProps2.startAngle,\n          endAngle = _this$getProps2.endAngle,\n          innerRadius = _this$getProps2.innerRadius,\n          outerRadius = _this$getProps2.outerRadius,\n          circumference = _this$getProps2.circumference;\n\n      var rAdjust = this.options.spacing / 2;\n\n      var _circumference = valueOrDefault(circumference, endAngle - startAngle);\n\n      var betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n\n      var withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n      return betweenAngles && withinRadius;\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps3 = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n          x = _this$getProps3.x,\n          y = _this$getProps3.y,\n          startAngle = _this$getProps3.startAngle,\n          endAngle = _this$getProps3.endAngle,\n          innerRadius = _this$getProps3.innerRadius,\n          outerRadius = _this$getProps3.outerRadius;\n\n      var _this$options11 = this.options,\n          offset = _this$options11.offset,\n          spacing = _this$options11.spacing;\n      var halfAngle = (startAngle + endAngle) / 2;\n      var halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n      return {\n        x: x + Math.cos(halfAngle) * halfRadius,\n        y: y + Math.sin(halfAngle) * halfRadius\n      };\n    }\n  }, {\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      return this.getCenterPoint(useFinalPosition);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options,\n          circumference = this.circumference;\n      var offset = (options.offset || 0) / 2;\n      var spacing = (options.spacing || 0) / 2;\n      this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n      this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n      if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n        return;\n      }\n\n      ctx.save();\n      var radiusOffset = 0;\n\n      if (offset) {\n        radiusOffset = offset / 2;\n        var halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n\n        if (this.circumference >= PI) {\n          radiusOffset = offset;\n        }\n      }\n\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      var endAngle = drawArc(ctx, this, radiusOffset, spacing);\n      drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n      ctx.restore();\n    }\n  }]);\n\n  return ArcElement;\n}(Element);\n\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options) {\n  var style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment) {\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var count = points.length;\n  var _params$start = params.start,\n      paramsStart = _params$start === void 0 ? 0 : _params$start,\n      _params$end = params.end,\n      paramsEnd = _params$end === void 0 ? count - 1 : _params$end;\n  var segmentStart = segment.start,\n      segmentEnd = segment.end;\n  var start = Math.max(paramsStart, segmentStart);\n  var end = Math.min(paramsEnd, segmentEnd);\n  var outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count: count,\n    start: start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\nfunction pathSegment(ctx, line, segment, params) {\n  var points = line.points,\n      options = line.options;\n\n  var _pathVars = pathVars(points, segment, params),\n      count = _pathVars.count,\n      start = _pathVars.start,\n      loop = _pathVars.loop,\n      ilen = _pathVars.ilen;\n\n  var lineMethod = getLineMethod(options);\n\n  var _ref3 = params || {},\n      _ref3$move = _ref3.move,\n      move = _ref3$move === void 0 ? true : _ref3$move,\n      reverse = _ref3.reverse;\n\n  var i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\nfunction fastPathSegment(ctx, line, segment, params) {\n  var points = line.points;\n\n  var _pathVars2 = pathVars(points, segment, params),\n      count = _pathVars2.count,\n      start = _pathVars2.start,\n      ilen = _pathVars2.ilen;\n\n  var _ref4 = params || {},\n      _ref4$move = _ref4.move,\n      move = _ref4$move === void 0 ? true : _ref4$move,\n      reverse = _ref4.reverse;\n\n  var avgX = 0;\n  var countX = 0;\n  var i, point, prevX, minY, maxY, lastY;\n\n  var pointIndex = function pointIndex(index) {\n    return (start + (reverse ? ilen - index : index)) % count;\n  };\n\n  var drawX = function drawX() {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      continue;\n    }\n\n    var x = point.x;\n    var y = point.y;\n    var truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n\n    lastY = y;\n  }\n\n  drawX();\n}\n\nfunction _getSegmentMethod(line) {\n  var opts = line.options;\n  var borderDash = opts.borderDash && opts.borderDash.length;\n  var useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  var path = line._path;\n\n  if (!path) {\n    path = line._path = new Path2D();\n\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  var segments = line.segments,\n      options = line.options;\n\n  var segmentMethod = _getSegmentMethod(line);\n\n  var _iteratorNormalCompletion14 = true;\n  var _didIteratorError14 = false;\n  var _iteratorError14 = undefined;\n\n  try {\n    for (var _iterator14 = segments[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n      var segment = _step14.value;\n      setStyle(ctx, options, segment.style);\n      ctx.beginPath();\n\n      if (segmentMethod(ctx, line, segment, {\n        start: start,\n        end: start + count - 1\n      })) {\n        ctx.closePath();\n      }\n\n      ctx.stroke();\n    }\n  } catch (err) {\n    _didIteratorError14 = true;\n    _iteratorError14 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion14 && _iterator14.return != null) {\n        _iterator14.return();\n      }\n    } finally {\n      if (_didIteratorError14) {\n        throw _iteratorError14;\n      }\n    }\n  }\n}\n\nvar usePath2D = typeof Path2D === 'function';\n\nfunction _draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nvar LineElement =\n/*#__PURE__*/\nfunction (_Element3) {\n  _inherits(LineElement, _Element3);\n\n  function LineElement(cfg) {\n    var _this24;\n\n    _classCallCheck(this, LineElement);\n\n    _this24 = _possibleConstructorReturn(this, _getPrototypeOf(LineElement).call(this));\n    _this24.animated = true;\n    _this24.options = undefined;\n    _this24._chart = undefined;\n    _this24._loop = undefined;\n    _this24._fullLoop = undefined;\n    _this24._path = undefined;\n    _this24._points = undefined;\n    _this24._segments = undefined;\n    _this24._decimated = false;\n    _this24._pointsUpdated = false;\n    _this24._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this24), cfg);\n    }\n\n    return _this24;\n  }\n\n  _createClass(LineElement, [{\n    key: \"updateControlPoints\",\n    value: function updateControlPoints(chartArea, indexAxis) {\n      var options = this.options;\n\n      if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n        var loop = options.spanGaps ? this._loop : this._fullLoop;\n\n        _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n\n        this._pointsUpdated = true;\n      }\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      var segments = this.segments;\n      var points = this.points;\n      return segments.length && points[segments[0].start];\n    }\n  }, {\n    key: \"last\",\n    value: function last() {\n      var segments = this.segments;\n      var points = this.points;\n      var count = segments.length;\n      return count && points[segments[count - 1].end];\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point, property) {\n      var options = this.options;\n      var value = point[property];\n      var points = this.points;\n\n      var segments = _boundSegments(this, {\n        property: property,\n        start: value,\n        end: value\n      });\n\n      if (!segments.length) {\n        return;\n      }\n\n      var result = [];\n\n      var _interpolate = _getInterpolationMethod(options);\n\n      var i, ilen;\n\n      for (i = 0, ilen = segments.length; i < ilen; ++i) {\n        var _segments$i = segments[i],\n            start = _segments$i.start,\n            end = _segments$i.end;\n        var p1 = points[start];\n        var p2 = points[end];\n\n        if (p1 === p2) {\n          result.push(p1);\n          continue;\n        }\n\n        var t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n\n        var interpolated = _interpolate(p1, p2, t, options.stepped);\n\n        interpolated[property] = point[property];\n        result.push(interpolated);\n      }\n\n      return result.length === 1 ? result[0] : result;\n    }\n  }, {\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, segment, params) {\n      var segmentMethod = _getSegmentMethod(this);\n\n      return segmentMethod(ctx, this, segment, params);\n    }\n  }, {\n    key: \"path\",\n    value: function path(ctx, start, count) {\n      var segments = this.segments;\n\n      var segmentMethod = _getSegmentMethod(this);\n\n      var loop = this._loop;\n      start = start || 0;\n      count = count || this.points.length - start;\n      var _iteratorNormalCompletion15 = true;\n      var _didIteratorError15 = false;\n      var _iteratorError15 = undefined;\n\n      try {\n        for (var _iterator15 = segments[Symbol.iterator](), _step15; !(_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done); _iteratorNormalCompletion15 = true) {\n          var segment = _step15.value;\n          loop &= segmentMethod(ctx, this, segment, {\n            start: start,\n            end: start + count - 1\n          });\n        }\n      } catch (err) {\n        _didIteratorError15 = true;\n        _iteratorError15 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion15 && _iterator15.return != null) {\n            _iterator15.return();\n          }\n        } finally {\n          if (_didIteratorError15) {\n            throw _iteratorError15;\n          }\n        }\n      }\n\n      return !!loop;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, chartArea, start, count) {\n      var options = this.options || {};\n      var points = this.points || [];\n\n      if (points.length && options.borderWidth) {\n        ctx.save();\n\n        _draw(ctx, this, start, count);\n\n        ctx.restore();\n      }\n\n      if (this.animated) {\n        this._pointsUpdated = false;\n        this._path = undefined;\n      }\n    }\n  }, {\n    key: \"points\",\n    set: function set(points) {\n      this._points = points;\n      delete this._segments;\n      delete this._path;\n      this._pointsUpdated = false;\n    },\n    get: function get() {\n      return this._points;\n    }\n  }, {\n    key: \"segments\",\n    get: function get() {\n      return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n  }]);\n\n  return LineElement;\n}(Element);\n\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'fill';\n  }\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  var options = el.options;\n\n  var _el$getProps = el.getProps([axis], useFinalPosition),\n      value = _el$getProps[axis];\n\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\n\nvar PointElement =\n/*#__PURE__*/\nfunction (_Element4) {\n  _inherits(PointElement, _Element4);\n\n  function PointElement(cfg) {\n    var _this25;\n\n    _classCallCheck(this, PointElement);\n\n    _this25 = _possibleConstructorReturn(this, _getPrototypeOf(PointElement).call(this));\n    _this25.options = undefined;\n    _this25.parsed = undefined;\n    _this25.skip = undefined;\n    _this25.stop = undefined;\n\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this25), cfg);\n    }\n\n    return _this25;\n  }\n\n  _createClass(PointElement, [{\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      var options = this.options;\n\n      var _this$getProps4 = this.getProps(['x', 'y'], useFinalPosition),\n          x = _this$getProps4.x,\n          y = _this$getProps4.y;\n\n      return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps5 = this.getProps(['x', 'y'], useFinalPosition),\n          x = _this$getProps5.x,\n          y = _this$getProps5.y;\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"size\",\n    value: function size(options) {\n      options = options || this.options || {};\n      var radius = options.radius || 0;\n      radius = Math.max(radius, radius && options.hoverRadius || 0);\n      var borderWidth = radius && options.borderWidth || 0;\n      return (radius + borderWidth) * 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, area) {\n      var options = this.options;\n\n      if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n        return;\n      }\n\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.fillStyle = options.backgroundColor;\n      drawPoint(ctx, options, this.x, this.y);\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange() {\n      var options = this.options || {};\n      return options.radius + options.hitRadius;\n    }\n  }]);\n\n  return PointElement;\n}(Element);\n\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  var _bar$getProps = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition),\n      x = _bar$getProps.x,\n      y = _bar$getProps.y,\n      base = _bar$getProps.base,\n      width = _bar$getProps.width,\n      height = _bar$getProps.height;\n\n  var left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom\n  };\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  var value = bar.options.borderWidth;\n  var skip = bar.borderSkipped;\n  var o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  var _bar$getProps2 = bar.getProps(['enableBorderRadius']),\n      enableBorderRadius = _bar$getProps2.enableBorderRadius;\n\n  var value = bar.options.borderRadius;\n  var o = toTRBLCorners(value);\n  var maxR = Math.min(maxW, maxH);\n  var skip = bar.borderSkipped;\n  var enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  var bounds = getBarBounds(bar);\n  var width = bounds.right - bounds.left;\n  var height = bounds.bottom - bounds.top;\n  var border = parseBorderWidth(bar, width / 2, height / 2);\n  var radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius: radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\n\nfunction _inRange(bar, x, y, useFinalPosition) {\n  var skipX = x === null;\n  var skipY = y === null;\n  var skipBoth = skipX && skipY;\n  var bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount) {\n  var refRect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var x = rect.x !== refRect.x ? -amount : 0;\n  var y = rect.y !== refRect.y ? -amount : 0;\n  var w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  var h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nvar BarElement =\n/*#__PURE__*/\nfunction (_Element5) {\n  _inherits(BarElement, _Element5);\n\n  function BarElement(cfg) {\n    var _this26;\n\n    _classCallCheck(this, BarElement);\n\n    _this26 = _possibleConstructorReturn(this, _getPrototypeOf(BarElement).call(this));\n    _this26.options = undefined;\n    _this26.horizontal = undefined;\n    _this26.base = undefined;\n    _this26.width = undefined;\n    _this26.height = undefined;\n    _this26.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this26), cfg);\n    }\n\n    return _this26;\n  }\n\n  _createClass(BarElement, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      var inflateAmount = this.inflateAmount,\n          _this$options12 = this.options,\n          borderColor = _this$options12.borderColor,\n          backgroundColor = _this$options12.backgroundColor;\n\n      var _boundingRects = boundingRects(this),\n          inner = _boundingRects.inner,\n          outer = _boundingRects.outer;\n\n      var addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n      ctx.save();\n\n      if (outer.w !== inner.w || outer.h !== inner.h) {\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n        ctx.clip();\n        addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n        ctx.fillStyle = borderColor;\n        ctx.fill('evenodd');\n      }\n\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(inner, inflateAmount));\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }, {\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      return _inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return _inRange(this, mouseX, null, useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return _inRange(this, null, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps6 = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition),\n          x = _this$getProps6.x,\n          y = _this$getProps6.y,\n          base = _this$getProps6.base,\n          horizontal = _this$getProps6.horizontal;\n\n      return {\n        x: horizontal ? (x + base) / 2 : x,\n        y: horizontal ? y : (y + base) / 2\n      };\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange(axis) {\n      return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n  }]);\n\n  return BarElement;\n}(Element);\n\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements =\n/*#__PURE__*/\nObject.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  var samples = options.samples || availableWidth;\n\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  var decimated = [];\n  var bucketWidth = (count - 2) / (samples - 2);\n  var sampledIndex = 0;\n  var endIndex = start + count - 1;\n  var a = start;\n  var i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    var avgX = 0;\n    var avgY = 0;\n    var j = void 0;\n    var avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    var avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    var avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    var rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    var rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    var _data$a = data[a],\n        pointAx = _data$a.x,\n        pointAy = _data$a.y;\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  var avgX = 0;\n  var countX = 0;\n  var i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  var decimated = [];\n  var endIndex = start + count - 1;\n  var xMin = data[start].x;\n  var xMax = data[endIndex].x;\n  var dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    var truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      var lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        var intermediateIndex1 = Math.min(minIndex, maxIndex);\n        var intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push(_objectSpread({}, data[intermediateIndex1], {\n            x: avgX\n          }));\n        }\n\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push(_objectSpread({}, data[intermediateIndex2], {\n            x: avgX\n          }));\n        }\n      }\n\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    var data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(function (dataset) {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  var pointCount = points.length;\n  var start = 0;\n  var count;\n  var iScale = meta.iScale;\n\n  var _iScale$getUserBounds2 = iScale.getUserBounds(),\n      min = _iScale$getUserBounds2.min,\n      max = _iScale$getUserBounds2.max,\n      minDefined = _iScale$getUserBounds2.minDefined,\n      maxDefined = _iScale$getUserBounds2.maxDefined;\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {\n    start: start,\n    count: count\n  };\n}\n\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: function beforeElementsUpdate(chart, args, options) {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    var availableWidth = chart.width;\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      var _data = dataset._data,\n          indexAxis = dataset.indexAxis;\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n\n      var xAxis = chart.scales[meta.xAxisID];\n\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n\n      if (chart.options.parsing) {\n        return;\n      }\n\n      var _getStartAndCountOfVi2 = getStartAndCountOfVisiblePointsSimplified(meta, data),\n          start = _getStartAndCountOfVi2.start,\n          count = _getStartAndCountOfVi2.count;\n\n      var threshold = options.threshold || 4 * availableWidth;\n\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function get() {\n            return this._decimated;\n          },\n          set: function set(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      var decimated;\n\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n\n        default:\n          throw new Error(\"Unsupported decimation algorithm '\".concat(options.algorithm, \"'\"));\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n  destroy: function destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  var segments = line.segments;\n  var points = line.points;\n  var tpoints = target.points;\n  var parts = [];\n  var _iteratorNormalCompletion16 = true;\n  var _didIteratorError16 = false;\n  var _iteratorError16 = undefined;\n\n  try {\n    for (var _iterator16 = segments[Symbol.iterator](), _step16; !(_iteratorNormalCompletion16 = (_step16 = _iterator16.next()).done); _iteratorNormalCompletion16 = true) {\n      var segment = _step16.value;\n      var start = segment.start,\n          end = segment.end;\n      end = _findSegmentEnd(start, end, points);\n\n      var bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n      if (!target.segments) {\n        parts.push({\n          source: segment,\n          target: bounds,\n          start: points[start],\n          end: points[end]\n        });\n        continue;\n      }\n\n      var targetSegments = _boundSegments(target, bounds);\n\n      var _iteratorNormalCompletion17 = true;\n      var _didIteratorError17 = false;\n      var _iteratorError17 = undefined;\n\n      try {\n        for (var _iterator17 = targetSegments[Symbol.iterator](), _step17; !(_iteratorNormalCompletion17 = (_step17 = _iterator17.next()).done); _iteratorNormalCompletion17 = true) {\n          var tgt = _step17.value;\n\n          var subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n\n          var fillSources = _boundSegment(segment, points, subBounds);\n\n          var _iteratorNormalCompletion18 = true;\n          var _didIteratorError18 = false;\n          var _iteratorError18 = undefined;\n\n          try {\n            for (var _iterator18 = fillSources[Symbol.iterator](), _step18; !(_iteratorNormalCompletion18 = (_step18 = _iterator18.next()).done); _iteratorNormalCompletion18 = true) {\n              var fillSource = _step18.value;\n              parts.push({\n                source: fillSource,\n                target: tgt,\n                start: _defineProperty({}, property, _getEdge(bounds, subBounds, 'start', Math.max)),\n                end: _defineProperty({}, property, _getEdge(bounds, subBounds, 'end', Math.min))\n              });\n            }\n          } catch (err) {\n            _didIteratorError18 = true;\n            _iteratorError18 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion18 && _iterator18.return != null) {\n                _iterator18.return();\n              }\n            } finally {\n              if (_didIteratorError18) {\n                throw _iteratorError18;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError17 = true;\n        _iteratorError17 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion17 && _iterator17.return != null) {\n            _iterator17.return();\n          }\n        } finally {\n          if (_didIteratorError17) {\n            throw _iteratorError17;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError16 = true;\n    _iteratorError16 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion16 && _iterator16.return != null) {\n        _iterator16.return();\n      }\n    } finally {\n      if (_didIteratorError16) {\n        throw _iteratorError16;\n      }\n    }\n  }\n\n  return parts;\n}\n\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n\n  var start = first[property];\n  var end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n\n  return {\n    property: property,\n    start: start,\n    end: end\n  };\n}\n\nfunction _pointsFromSegments(boundary, line) {\n  var _ref5 = boundary || {},\n      _ref5$x = _ref5.x,\n      x = _ref5$x === void 0 ? null : _ref5$x,\n      _ref5$y = _ref5.y,\n      y = _ref5$y === void 0 ? null : _ref5$y;\n\n  var linePoints = line.points;\n  var points = [];\n  line.segments.forEach(function (_ref6) {\n    var start = _ref6.start,\n        end = _ref6.end;\n    end = _findSegmentEnd(start, end, linePoints);\n    var first = linePoints[start];\n    var last = linePoints[end];\n\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y: y\n      });\n      points.push({\n        x: last.x,\n        y: y\n      });\n    } else if (x !== null) {\n      points.push({\n        x: x,\n        y: first.y\n      });\n      points.push({\n        x: x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\n\nfunction _findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    var point = points[end];\n\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  var points = [];\n  var _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points: points,\n    options: {\n      tension: 0\n    },\n    _loop: _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction _decodeFill(line, index, count) {\n  var fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  var target = parseFloat(fill);\n\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\nfunction _getTargetPixel(fill, scale) {\n  var pixel = null;\n\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n\n  return pixel;\n}\n\nfunction _getTargetValue(fill, scale, startValue) {\n  var value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n\n  return value;\n}\n\nfunction parseFillOption(line) {\n  var options = line.options;\n  var fillOption = options.fill;\n  var fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  var scale = source.scale,\n      index = source.index,\n      line = source.line;\n  var points = [];\n  var segments = line.segments;\n  var sourcePoints = line.points;\n  var linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n\n    for (var j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n\n  return new LineElement({\n    points: points,\n    options: {}\n  });\n}\n\nfunction getLinesBelow(scale, index) {\n  var below = [];\n  var metas = scale.getMatchingVisibleMetas('line');\n\n  for (var i = 0; i < metas.length; i++) {\n    var meta = metas[i];\n\n    if (meta.index === index) {\n      break;\n    }\n\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n\n  return below;\n}\n\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  var postponed = [];\n\n  for (var j = 0; j < linesBelow.length; j++) {\n    var line = linesBelow[j];\n\n    var _findPoint = findPoint(line, sourcePoint, 'x'),\n        first = _findPoint.first,\n        last = _findPoint.last,\n        point = _findPoint.point;\n\n    if (!point || first && last) {\n      continue;\n    }\n\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n\n      if (!last) {\n        break;\n      }\n    }\n  }\n\n  points.push.apply(points, postponed);\n}\n\nfunction findPoint(line, sourcePoint, property) {\n  var point = line.interpolate(sourcePoint, property);\n\n  if (!point) {\n    return {};\n  }\n\n  var pointValue = point[property];\n  var segments = line.segments;\n  var linePoints = line.points;\n  var first = false;\n  var last = false;\n\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    var firstValue = linePoints[segment.start][property];\n    var lastValue = linePoints[segment.end][property];\n\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n\n  return {\n    first: first,\n    last: last,\n    point: point\n  };\n}\n\nvar simpleArc =\n/*#__PURE__*/\nfunction () {\n  function simpleArc(opts) {\n    _classCallCheck(this, simpleArc);\n\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  _createClass(simpleArc, [{\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, bounds, opts) {\n      var x = this.x,\n          y = this.y,\n          radius = this.radius;\n      bounds = bounds || {\n        start: 0,\n        end: TAU\n      };\n      ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n      return !opts.bounds;\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point) {\n      var x = this.x,\n          y = this.y,\n          radius = this.radius;\n      var angle = point.angle;\n      return {\n        x: x + Math.cos(angle) * radius,\n        y: y + Math.sin(angle) * radius,\n        angle: angle\n      };\n    }\n  }]);\n\n  return simpleArc;\n}();\n\nfunction _getTarget(source) {\n  var chart = source.chart,\n      fill = source.fill,\n      line = source.line;\n\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  var boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\nfunction getLineByIndex(chart, index) {\n  var meta = chart.getDatasetMeta(index);\n  var visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  var scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n\n  return computeLinearBoundary(source);\n}\n\nfunction computeLinearBoundary(source) {\n  var _source$scale = source.scale,\n      scale = _source$scale === void 0 ? {} : _source$scale,\n      fill = source.fill;\n\n  var pixel = _getTargetPixel(fill, scale);\n\n  if (isNumberFinite(pixel)) {\n    var horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  var scale = source.scale,\n      fill = source.fill;\n  var options = scale.options;\n  var length = scale.getLabels().length;\n  var start = options.reverse ? scale.max : scale.min;\n\n  var value = _getTargetValue(fill, scale, start);\n\n  var target = [];\n\n  if (options.grid.circular) {\n    var center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (var i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  var target = _getTarget(source);\n\n  var line = source.line,\n      scale = source.scale,\n      axis = source.axis;\n  var lineOpts = line.options;\n  var fillOption = lineOpts.fill;\n  var color = lineOpts.backgroundColor;\n\n  var _ref7 = fillOption || {},\n      _ref7$above = _ref7.above,\n      above = _ref7$above === void 0 ? color : _ref7$above,\n      _ref7$below = _ref7.below,\n      below = _ref7$below === void 0 ? color : _ref7$below;\n\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line: line,\n      target: target,\n      above: above,\n      below: below,\n      area: area,\n      scale: scale,\n      axis: axis\n    });\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  var line = cfg.line,\n      target = cfg.target,\n      above = cfg.above,\n      below = cfg.below,\n      area = cfg.area,\n      scale = cfg.scale;\n  var property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {\n      line: line,\n      target: target,\n      color: above,\n      scale: scale,\n      property: property\n    });\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n\n  fill(ctx, {\n    line: line,\n    target: target,\n    color: below,\n    scale: scale,\n    property: property\n  });\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  var segments = target.segments,\n      points = target.points;\n  var first = true;\n  var lineLoop = false;\n  ctx.beginPath();\n  var _iteratorNormalCompletion19 = true;\n  var _didIteratorError19 = false;\n  var _iteratorError19 = undefined;\n\n  try {\n    for (var _iterator19 = segments[Symbol.iterator](), _step19; !(_iteratorNormalCompletion19 = (_step19 = _iterator19.next()).done); _iteratorNormalCompletion19 = true) {\n      var segment = _step19.value;\n      var start = segment.start,\n          end = segment.end;\n      var firstPoint = points[start];\n\n      var lastPoint = points[_findSegmentEnd(start, end, points)];\n\n      if (first) {\n        ctx.moveTo(firstPoint.x, firstPoint.y);\n        first = false;\n      } else {\n        ctx.lineTo(firstPoint.x, clipY);\n        ctx.lineTo(firstPoint.x, firstPoint.y);\n      }\n\n      lineLoop = !!target.pathSegment(ctx, segment, {\n        move: lineLoop\n      });\n\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        ctx.lineTo(lastPoint.x, clipY);\n      }\n    }\n  } catch (err) {\n    _didIteratorError19 = true;\n    _iteratorError19 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion19 && _iterator19.return != null) {\n        _iterator19.return();\n      }\n    } finally {\n      if (_didIteratorError19) {\n        throw _iteratorError19;\n      }\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  var line = cfg.line,\n      target = cfg.target,\n      property = cfg.property,\n      color = cfg.color,\n      scale = cfg.scale;\n\n  var segments = _segments(line, target, property);\n\n  var _iteratorNormalCompletion20 = true;\n  var _didIteratorError20 = false;\n  var _iteratorError20 = undefined;\n\n  try {\n    for (var _iterator20 = segments[Symbol.iterator](), _step20; !(_iteratorNormalCompletion20 = (_step20 = _iterator20.next()).done); _iteratorNormalCompletion20 = true) {\n      var _step20$value = _step20.value,\n          src = _step20$value.source,\n          tgt = _step20$value.target,\n          start = _step20$value.start,\n          end = _step20$value.end;\n      var _src$style = src.style;\n      _src$style = _src$style === void 0 ? {} : _src$style;\n      var _src$style$background = _src$style.backgroundColor,\n          backgroundColor = _src$style$background === void 0 ? color : _src$style$background;\n      var notShape = target !== true;\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n      ctx.beginPath();\n      var lineLoop = !!line.pathSegment(ctx, src);\n      var loop = void 0;\n\n      if (notShape) {\n        if (lineLoop) {\n          ctx.closePath();\n        } else {\n          interpolatedLineTo(ctx, target, end, property);\n        }\n\n        var targetLoop = !!target.pathSegment(ctx, tgt, {\n          move: lineLoop,\n          reverse: true\n        });\n        loop = lineLoop && targetLoop;\n\n        if (!loop) {\n          interpolatedLineTo(ctx, target, start, property);\n        }\n      }\n\n      ctx.closePath();\n      ctx.fill(loop ? 'evenodd' : 'nonzero');\n      ctx.restore();\n    }\n  } catch (err) {\n    _didIteratorError20 = true;\n    _iteratorError20 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion20 && _iterator20.return != null) {\n        _iterator20.return();\n      }\n    } finally {\n      if (_didIteratorError20) {\n        throw _iteratorError20;\n      }\n    }\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  var _scale$chart$chartAre = scale.chart.chartArea,\n      top = _scale$chart$chartAre.top,\n      bottom = _scale$chart$chartAre.bottom;\n\n  var _ref8 = bounds || {},\n      property = _ref8.property,\n      start = _ref8.start,\n      end = _ref8.end;\n\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  var interpolatedPoint = target.interpolate(point, property);\n\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, _args, options) {\n    var count = (chart.data.datasets || []).length;\n    var sources = [];\n    var meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart: chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line: line\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw: function beforeDraw(chart, _args, options) {\n    var draw = options.drawTime === 'beforeDraw';\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    var area = chart.chartArea;\n\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n\n      if (draw) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw: function beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    var metasets = chart.getSortedVisibleDatasetMetas();\n\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n\n      if (source) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args, options) {\n    var source = args.meta.$filler;\n\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nvar getBoxSize = function getBoxSize(labelOpts, fontSize) {\n  var _labelOpts$boxHeight = labelOpts.boxHeight,\n      boxHeight = _labelOpts$boxHeight === void 0 ? fontSize : _labelOpts$boxHeight,\n      _labelOpts$boxWidth = labelOpts.boxWidth,\n      boxWidth = _labelOpts$boxWidth === void 0 ? fontSize : _labelOpts$boxWidth;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth: boxWidth,\n    boxHeight: boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nvar itemsEqual = function itemsEqual(a, b) {\n  return a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n};\n\nvar Legend =\n/*#__PURE__*/\nfunction (_Element6) {\n  _inherits(Legend, _Element6);\n\n  function Legend(config) {\n    var _this27;\n\n    _classCallCheck(this, Legend);\n\n    _this27 = _possibleConstructorReturn(this, _getPrototypeOf(Legend).call(this));\n    _this27._added = false;\n    _this27.legendHitBoxes = [];\n    _this27._hoveredItem = null;\n    _this27.doughnutMode = false;\n    _this27.chart = config.chart;\n    _this27.options = config.options;\n    _this27.ctx = config.ctx;\n    _this27.legendItems = undefined;\n    _this27.columnSizes = undefined;\n    _this27.lineWidths = undefined;\n    _this27.maxHeight = undefined;\n    _this27.maxWidth = undefined;\n    _this27.top = undefined;\n    _this27.bottom = undefined;\n    _this27.left = undefined;\n    _this27.right = undefined;\n    _this27.height = undefined;\n    _this27.width = undefined;\n    _this27._margins = undefined;\n    _this27.position = undefined;\n    _this27.weight = undefined;\n    _this27.fullSize = undefined;\n    return _this27;\n  }\n\n  _createClass(Legend, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins;\n      this.setDimensions();\n      this.buildLabels();\n      this.fit();\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = this._margins.left;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = this._margins.top;\n        this.bottom = this.height;\n      }\n    }\n  }, {\n    key: \"buildLabels\",\n    value: function buildLabels() {\n      var _this28 = this;\n\n      var labelOpts = this.options.labels || {};\n      var legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, _this28.chart.data);\n        });\n      }\n\n      if (labelOpts.sort) {\n        legendItems = legendItems.sort(function (a, b) {\n          return labelOpts.sort(a, b, _this28.chart.data);\n        });\n      }\n\n      if (this.options.reverse) {\n        legendItems.reverse();\n      }\n\n      this.legendItems = legendItems;\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var options = this.options,\n          ctx = this.ctx;\n\n      if (!options.display) {\n        this.width = this.height = 0;\n        return;\n      }\n\n      var labelOpts = options.labels;\n      var labelFont = toFont(labelOpts.font);\n      var fontSize = labelFont.size;\n\n      var titleHeight = this._computeTitleHeight();\n\n      var _getBoxSize = getBoxSize(labelOpts, fontSize),\n          boxWidth = _getBoxSize.boxWidth,\n          itemHeight = _getBoxSize.itemHeight;\n\n      var width, height;\n      ctx.font = labelFont.string;\n\n      if (this.isHorizontal()) {\n        width = this.maxWidth;\n        height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      } else {\n        height = this.maxHeight;\n        width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      }\n\n      this.width = Math.min(width, options.maxWidth || this.maxWidth);\n      this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n  }, {\n    key: \"_fitRows\",\n    value: function _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n      var ctx = this.ctx,\n          maxWidth = this.maxWidth,\n          padding = this.options.labels.padding;\n      var hitboxes = this.legendHitBoxes = [];\n      var lineWidths = this.lineWidths = [0];\n      var lineHeight = itemHeight + padding;\n      var totalHeight = titleHeight;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      var row = -1;\n      var top = -lineHeight;\n      this.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n        if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n          totalHeight += lineHeight;\n          lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n          top += lineHeight;\n          row++;\n        }\n\n        hitboxes[i] = {\n          left: 0,\n          top: top,\n          row: row,\n          width: itemWidth,\n          height: itemHeight\n        };\n        lineWidths[lineWidths.length - 1] += itemWidth + padding;\n      });\n      return totalHeight;\n    }\n  }, {\n    key: \"_fitCols\",\n    value: function _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n      var ctx = this.ctx,\n          maxHeight = this.maxHeight,\n          padding = this.options.labels.padding;\n      var hitboxes = this.legendHitBoxes = [];\n      var columnSizes = this.columnSizes = [];\n      var heightLimit = maxHeight - titleHeight;\n      var totalWidth = padding;\n      var currentColWidth = 0;\n      var currentColHeight = 0;\n      var left = 0;\n      var col = 0;\n      this.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n        if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n          totalWidth += currentColWidth + padding;\n          columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n          });\n          left += currentColWidth + padding;\n          col++;\n          currentColWidth = currentColHeight = 0;\n        }\n\n        hitboxes[i] = {\n          left: left,\n          top: currentColHeight,\n          col: col,\n          width: itemWidth,\n          height: itemHeight\n        };\n        currentColWidth = Math.max(currentColWidth, itemWidth);\n        currentColHeight += itemHeight + padding;\n      });\n      totalWidth += currentColWidth;\n      columnSizes.push({\n        width: currentColWidth,\n        height: currentColHeight\n      });\n      return totalWidth;\n    }\n  }, {\n    key: \"adjustHitBoxes\",\n    value: function adjustHitBoxes() {\n      if (!this.options.display) {\n        return;\n      }\n\n      var titleHeight = this._computeTitleHeight();\n\n      var hitboxes = this.legendHitBoxes,\n          _this$options13 = this.options,\n          align = _this$options13.align,\n          padding = _this$options13.labels.padding,\n          rtl = _this$options13.rtl;\n      var rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n\n      if (this.isHorizontal()) {\n        var row = 0;\n\n        var left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n\n        var _iteratorNormalCompletion21 = true;\n        var _didIteratorError21 = false;\n        var _iteratorError21 = undefined;\n\n        try {\n          for (var _iterator21 = hitboxes[Symbol.iterator](), _step21; !(_iteratorNormalCompletion21 = (_step21 = _iterator21.next()).done); _iteratorNormalCompletion21 = true) {\n            var hitbox = _step21.value;\n\n            if (row !== hitbox.row) {\n              row = hitbox.row;\n              left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            }\n\n            hitbox.top += this.top + titleHeight + padding;\n            hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n            left += hitbox.width + padding;\n          }\n        } catch (err) {\n          _didIteratorError21 = true;\n          _iteratorError21 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion21 && _iterator21.return != null) {\n              _iterator21.return();\n            }\n          } finally {\n            if (_didIteratorError21) {\n              throw _iteratorError21;\n            }\n          }\n        }\n      } else {\n        var col = 0;\n\n        var top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n\n        var _iteratorNormalCompletion22 = true;\n        var _didIteratorError22 = false;\n        var _iteratorError22 = undefined;\n\n        try {\n          for (var _iterator22 = hitboxes[Symbol.iterator](), _step22; !(_iteratorNormalCompletion22 = (_step22 = _iterator22.next()).done); _iteratorNormalCompletion22 = true) {\n            var _hitbox = _step22.value;\n\n            if (_hitbox.col !== col) {\n              col = _hitbox.col;\n              top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            }\n\n            _hitbox.top = top;\n            _hitbox.left += this.left + padding;\n            _hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(_hitbox.left), _hitbox.width);\n            top += _hitbox.height + padding;\n          }\n        } catch (err) {\n          _didIteratorError22 = true;\n          _iteratorError22 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion22 && _iterator22.return != null) {\n              _iterator22.return();\n            }\n          } finally {\n            if (_didIteratorError22) {\n              throw _iteratorError22;\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      if (this.options.display) {\n        var ctx = this.ctx;\n        clipArea(ctx, this);\n\n        this._draw();\n\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"_draw\",\n    value: function _draw() {\n      var _this29 = this;\n\n      var opts = this.options,\n          columnSizes = this.columnSizes,\n          lineWidths = this.lineWidths,\n          ctx = this.ctx;\n      var align = opts.align,\n          labelOpts = opts.labels;\n      var defaultColor = defaults.color;\n      var rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      var labelFont = toFont(labelOpts.font);\n      var fontColor = labelOpts.color,\n          padding = labelOpts.padding;\n      var fontSize = labelFont.size;\n      var halfFontSize = fontSize / 2;\n      var cursor;\n      this.drawTitle();\n      ctx.textAlign = rtlHelper.textAlign('left');\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.font = labelFont.string;\n\n      var _getBoxSize2 = getBoxSize(labelOpts, fontSize),\n          boxWidth = _getBoxSize2.boxWidth,\n          boxHeight = _getBoxSize2.boxHeight,\n          itemHeight = _getBoxSize2.itemHeight;\n\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n          return;\n        }\n\n        ctx.save();\n        var lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n        ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n        if (labelOpts.usePointStyle) {\n          var drawOptions = {\n            radius: boxWidth * Math.SQRT2 / 2,\n            pointStyle: legendItem.pointStyle,\n            rotation: legendItem.rotation,\n            borderWidth: lineWidth\n          };\n          var centerX = rtlHelper.xPlus(x, boxWidth / 2);\n          var centerY = y + halfFontSize;\n          drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n          var yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n          var xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n          var borderRadius = toTRBLCorners(legendItem.borderRadius);\n          ctx.beginPath();\n\n          if (Object.values(borderRadius).some(function (v) {\n            return v !== 0;\n          })) {\n            addRoundedRectPath(ctx, {\n              x: xBoxLeft,\n              y: yBoxTop,\n              w: boxWidth,\n              h: boxHeight,\n              radius: borderRadius\n            });\n          } else {\n            ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n          }\n\n          ctx.fill();\n\n          if (lineWidth !== 0) {\n            ctx.stroke();\n          }\n        }\n\n        ctx.restore();\n      };\n\n      var fillText = function fillText(x, y, legendItem) {\n        renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n          strikethrough: legendItem.hidden,\n          textAlign: rtlHelper.textAlign(legendItem.textAlign)\n        });\n      };\n\n      var isHorizontal = this.isHorizontal();\n\n      var titleHeight = this._computeTitleHeight();\n\n      if (isHorizontal) {\n        cursor = {\n          x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n          y: this.top + padding + titleHeight,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: this.left + padding,\n          y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n          line: 0\n        };\n      }\n\n      overrideTextDirection(this.ctx, opts.textDirection);\n      var lineHeight = itemHeight + padding;\n      this.legendItems.forEach(function (legendItem, i) {\n        ctx.strokeStyle = legendItem.fontColor || fontColor;\n        ctx.fillStyle = legendItem.fontColor || fontColor;\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n        var width = boxWidth + halfFontSize + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n        rtlHelper.setWidth(_this29.width);\n\n        if (isHorizontal) {\n          if (i > 0 && x + width + padding > _this29.right) {\n            y = cursor.y += lineHeight;\n            cursor.line++;\n            x = cursor.x = _alignStartEnd(align, _this29.left + padding, _this29.right - lineWidths[cursor.line]);\n          }\n        } else if (i > 0 && y + lineHeight > _this29.bottom) {\n          x = cursor.x = x + columnSizes[cursor.line].width + padding;\n          cursor.line++;\n          y = cursor.y = _alignStartEnd(align, _this29.top + titleHeight + padding, _this29.bottom - columnSizes[cursor.line].height);\n        }\n\n        var realX = rtlHelper.x(x);\n        drawLegendBox(realX, y, legendItem);\n        x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : _this29.right, opts.rtl);\n        fillText(rtlHelper.x(x), y, legendItem);\n\n        if (isHorizontal) {\n          cursor.x += width + padding;\n        } else {\n          cursor.y += lineHeight;\n        }\n      });\n      restoreTextDirection(this.ctx, opts.textDirection);\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var opts = this.options;\n      var titleOpts = opts.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n\n      if (!titleOpts.display) {\n        return;\n      }\n\n      var rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      var ctx = this.ctx;\n      var position = titleOpts.position;\n      var halfFontSize = titleFont.size / 2;\n      var topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n      var y;\n      var left = this.left;\n      var maxWidth = this.width;\n\n      if (this.isHorizontal()) {\n        maxWidth = Math.max.apply(Math, _toConsumableArray(this.lineWidths));\n        y = this.top + topPaddingPlusHalfFontSize;\n        left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n      } else {\n        var maxHeight = this.columnSizes.reduce(function (acc, size) {\n          return Math.max(acc, size.height);\n        }, 0);\n        y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n      }\n\n      var x = _alignStartEnd(position, left, left + maxWidth);\n\n      ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n      ctx.textBaseline = 'middle';\n      ctx.strokeStyle = titleOpts.color;\n      ctx.fillStyle = titleOpts.color;\n      ctx.font = titleFont.string;\n      renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n  }, {\n    key: \"_computeTitleHeight\",\n    value: function _computeTitleHeight() {\n      var titleOpts = this.options.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n      return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n  }, {\n    key: \"_getLegendItemAt\",\n    value: function _getLegendItemAt(x, y) {\n      var i, hitBox, lh;\n\n      if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n        lh = this.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n            return this.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e) {\n      var opts = this.options;\n\n      if (!isListened(e.type, opts)) {\n        return;\n      }\n\n      var hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n      if (e.type === 'mousemove' || e.type === 'mouseout') {\n        var previous = this._hoveredItem;\n        var sameItem = itemsEqual(previous, hoveredItem);\n\n        if (previous && !sameItem) {\n          callback(opts.onLeave, [e, previous, this], this);\n        }\n\n        this._hoveredItem = hoveredItem;\n\n        if (hoveredItem && !sameItem) {\n          callback(opts.onHover, [e, hoveredItem, this], this);\n        }\n      } else if (hoveredItem) {\n        callback(opts.onClick, [e, hoveredItem, this], this);\n      }\n    }\n  }]);\n\n  return Legend;\n}(Element);\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n\n  return false;\n}\n\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start: function start(chart, _args, options) {\n    var legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate: function afterUpdate(chart) {\n    var legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick: function onClick(e, legendItem, legend) {\n      var index = legendItem.datasetIndex;\n      var ci = legend.chart;\n\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      boxWidth: 40,\n      padding: 10,\n      generateLabels: function generateLabels(chart) {\n        var datasets = chart.data.datasets;\n        var _chart$legend$options = chart.legend.options.labels,\n            usePointStyle = _chart$legend$options.usePointStyle,\n            pointStyle = _chart$legend$options.pointStyle,\n            textAlign = _chart$legend$options.textAlign,\n            color = _chart$legend$options.color;\n        return chart._getSortedDatasetMetas().map(function (meta) {\n          var style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          var borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return !name.startsWith('on');\n    },\n    labels: {\n      _scriptable: function _scriptable(name) {\n        return !['generateLabels', 'filter', 'sort'].includes(name);\n      }\n    }\n  }\n};\n\nvar Title =\n/*#__PURE__*/\nfunction (_Element7) {\n  _inherits(Title, _Element7);\n\n  function Title(config) {\n    var _this30;\n\n    _classCallCheck(this, Title);\n\n    _this30 = _possibleConstructorReturn(this, _getPrototypeOf(Title).call(this));\n    _this30.chart = config.chart;\n    _this30.options = config.options;\n    _this30.ctx = config.ctx;\n    _this30._padding = undefined;\n    _this30.top = undefined;\n    _this30.bottom = undefined;\n    _this30.left = undefined;\n    _this30.right = undefined;\n    _this30.width = undefined;\n    _this30.height = undefined;\n    _this30.position = undefined;\n    _this30.weight = undefined;\n    _this30.fullSize = undefined;\n    return _this30;\n  }\n\n  _createClass(Title, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight) {\n      var opts = this.options;\n      this.left = 0;\n      this.top = 0;\n\n      if (!opts.display) {\n        this.width = this.height = this.right = this.bottom = 0;\n        return;\n      }\n\n      this.width = this.right = maxWidth;\n      this.height = this.bottom = maxHeight;\n      var lineCount = isArray(opts.text) ? opts.text.length : 1;\n      this._padding = toPadding(opts.padding);\n\n      var textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n      if (this.isHorizontal()) {\n        this.height = textSize;\n      } else {\n        this.width = textSize;\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    }\n  }, {\n    key: \"_drawArgs\",\n    value: function _drawArgs(offset) {\n      var top = this.top,\n          left = this.left,\n          bottom = this.bottom,\n          right = this.right,\n          options = this.options;\n      var align = options.align;\n      var rotation = 0;\n      var maxWidth, titleX, titleY;\n\n      if (this.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        if (options.position === 'left') {\n          titleX = left + offset;\n          titleY = _alignStartEnd(align, bottom, top);\n          rotation = PI * -0.5;\n        } else {\n          titleX = right - offset;\n          titleY = _alignStartEnd(align, top, bottom);\n          rotation = PI * 0.5;\n        }\n\n        maxWidth = bottom - top;\n      }\n\n      return {\n        titleX: titleX,\n        titleY: titleY,\n        maxWidth: maxWidth,\n        rotation: rotation\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var ctx = this.ctx;\n      var opts = this.options;\n\n      if (!opts.display) {\n        return;\n      }\n\n      var fontOpts = toFont(opts.font);\n      var lineHeight = fontOpts.lineHeight;\n      var offset = lineHeight / 2 + this._padding.top;\n\n      var _this$_drawArgs = this._drawArgs(offset),\n          titleX = _this$_drawArgs.titleX,\n          titleY = _this$_drawArgs.titleY,\n          maxWidth = _this$_drawArgs.maxWidth,\n          rotation = _this$_drawArgs.rotation;\n\n      renderText(ctx, opts.text, 0, 0, fontOpts, {\n        color: opts.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: _toLeftRightCenter(opts.align),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }]);\n\n  return Title;\n}(Element);\n\nfunction createTitle(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start: function start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop: function stop(chart) {\n    var titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start: function start(chart, _args, options) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar positioners = {\n  average: function average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    var i, len;\n    var x = 0;\n    var y = 0;\n    var count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest: function nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n        var d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n}\n\nfunction createTooltipItem(chart, item) {\n  var element = item.element,\n      datasetIndex = item.datasetIndex,\n      index = item.index;\n  var controller = chart.getDatasetMeta(datasetIndex).controller;\n\n  var _controller$getLabelA = controller.getLabelAndValue(index),\n      label = _controller$getLabelA.label,\n      value = _controller$getLabelA.value;\n\n  return {\n    chart: chart,\n    label: label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex: datasetIndex,\n    element: element\n  };\n}\n\nfunction getTooltipSize(tooltip, options) {\n  var ctx = tooltip.chart.ctx;\n  var body = tooltip.body,\n      footer = tooltip.footer,\n      title = tooltip.title;\n  var boxWidth = options.boxWidth,\n      boxHeight = options.boxHeight;\n  var bodyFont = toFont(options.bodyFont);\n  var titleFont = toFont(options.titleFont);\n  var footerFont = toFont(options.footerFont);\n  var titleLineCount = title.length;\n  var footerLineCount = footer.length;\n  var bodyLineItemCount = body.length;\n  var padding = toPadding(options.padding);\n  var height = padding.height;\n  var width = 0;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n\n  if (combinedBodyLength) {\n    var bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  var widthPadding = 0;\n\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n  each(body, function (bodyItem) {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction determineYAlign(chart, size) {\n  var y = size.y,\n      height = size.height;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  var x = size.x,\n      width = size.width;\n  var caret = options.caretSize + options.caretPadding;\n\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  var x = size.x,\n      width = size.width;\n  var chartWidth = chart.width,\n      _chart$chartArea = chart.chartArea,\n      left = _chart$chartArea.left,\n      right = _chart$chartArea.right;\n  var xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\nfunction determineAlignment(chart, options, size) {\n  var yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign: yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  var x = size.x,\n      width = size.width;\n\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  var y = size.y,\n      height = size.height;\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n\n  return y;\n}\n\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  var caretSize = options.caretSize,\n      caretPadding = options.caretPadding,\n      cornerRadius = options.cornerRadius;\n  var xAlign = alignment.xAlign,\n      yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n\n  var _toTRBLCorners = toTRBLCorners(cornerRadius),\n      topLeft = _toTRBLCorners.topLeft,\n      topRight = _toTRBLCorners.topRight,\n      bottomLeft = _toTRBLCorners.bottomLeft,\n      bottomRight = _toTRBLCorners.bottomRight;\n\n  var x = alignX(size, xAlign);\n  var y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  var padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip: tooltip,\n    tooltipItems: tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  var override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nvar Tooltip =\n/*#__PURE__*/\nfunction (_Element8) {\n  _inherits(Tooltip, _Element8);\n\n  function Tooltip(config) {\n    var _this31;\n\n    _classCallCheck(this, Tooltip);\n\n    _this31 = _possibleConstructorReturn(this, _getPrototypeOf(Tooltip).call(this));\n    _this31.opacity = 0;\n    _this31._active = [];\n    _this31._eventPosition = undefined;\n    _this31._size = undefined;\n    _this31._cachedAnimations = undefined;\n    _this31._tooltipItems = [];\n    _this31.$animations = undefined;\n    _this31.$context = undefined;\n    _this31.chart = config.chart || config._chart;\n    _this31._chart = _this31.chart;\n    _this31.options = config.options;\n    _this31.dataPoints = undefined;\n    _this31.title = undefined;\n    _this31.beforeBody = undefined;\n    _this31.body = undefined;\n    _this31.afterBody = undefined;\n    _this31.footer = undefined;\n    _this31.xAlign = undefined;\n    _this31.yAlign = undefined;\n    _this31.x = undefined;\n    _this31.y = undefined;\n    _this31.height = undefined;\n    _this31.width = undefined;\n    _this31.caretX = undefined;\n    _this31.caretY = undefined;\n    _this31.labelColors = undefined;\n    _this31.labelPointStyles = undefined;\n    _this31.labelTextColors = undefined;\n    return _this31;\n  }\n\n  _createClass(Tooltip, [{\n    key: \"initialize\",\n    value: function initialize(options) {\n      this.options = options;\n      this._cachedAnimations = undefined;\n      this.$context = undefined;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations() {\n      var cached = this._cachedAnimations;\n\n      if (cached) {\n        return cached;\n      }\n\n      var chart = this.chart;\n      var options = this.options.setContext(this.getContext());\n      var opts = options.enabled && chart.options.animation && options.animations;\n      var animations = new Animations(this.chart, opts);\n\n      if (opts._cacheable) {\n        this._cachedAnimations = Object.freeze(animations);\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle(context, options) {\n      var callbacks = options.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n      var title = callbacks.title.apply(this, [context]);\n      var afterTitle = callbacks.afterTitle.apply(this, [context]);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    }\n  }, {\n    key: \"getBeforeBody\",\n    value: function getBeforeBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n    }\n  }, {\n    key: \"getBody\",\n    value: function getBody(tooltipItems, options) {\n      var _this32 = this;\n\n      var callbacks = options.callbacks;\n      var bodyItems = [];\n      each(tooltipItems, function (context) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        var scoped = overrideCallbacks(callbacks, context);\n        pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(_this32, context)));\n        pushOrConcat(bodyItem.lines, scoped.label.call(_this32, context));\n        pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(_this32, context)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    }\n  }, {\n    key: \"getAfterBody\",\n    value: function getAfterBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n    }\n  }, {\n    key: \"getFooter\",\n    value: function getFooter(tooltipItems, options) {\n      var callbacks = options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n      var footer = callbacks.footer.apply(this, [tooltipItems]);\n      var afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    }\n  }, {\n    key: \"_createItems\",\n    value: function _createItems(options) {\n      var _this33 = this;\n\n      var active = this._active;\n      var data = this.chart.data;\n      var labelColors = [];\n      var labelPointStyles = [];\n      var labelTextColors = [];\n      var tooltipItems = [];\n      var i, len;\n\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(this.chart, active[i]));\n      }\n\n      if (options.filter) {\n        tooltipItems = tooltipItems.filter(function (element, index, array) {\n          return options.filter(element, index, array, data);\n        });\n      }\n\n      if (options.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return options.itemSort(a, b, data);\n        });\n      }\n\n      each(tooltipItems, function (context) {\n        var scoped = overrideCallbacks(options.callbacks, context);\n        labelColors.push(scoped.labelColor.call(_this33, context));\n        labelPointStyles.push(scoped.labelPointStyle.call(_this33, context));\n        labelTextColors.push(scoped.labelTextColor.call(_this33, context));\n      });\n      this.labelColors = labelColors;\n      this.labelPointStyles = labelPointStyles;\n      this.labelTextColors = labelTextColors;\n      this.dataPoints = tooltipItems;\n      return tooltipItems;\n    }\n  }, {\n    key: \"update\",\n    value: function update(changed, replay) {\n      var options = this.options.setContext(this.getContext());\n      var active = this._active;\n      var properties;\n      var tooltipItems = [];\n\n      if (!active.length) {\n        if (this.opacity !== 0) {\n          properties = {\n            opacity: 0\n          };\n        }\n      } else {\n        var position = positioners[options.position].call(this, active, this._eventPosition);\n        tooltipItems = this._createItems(options);\n        this.title = this.getTitle(tooltipItems, options);\n        this.beforeBody = this.getBeforeBody(tooltipItems, options);\n        this.body = this.getBody(tooltipItems, options);\n        this.afterBody = this.getAfterBody(tooltipItems, options);\n        this.footer = this.getFooter(tooltipItems, options);\n        var size = this._size = getTooltipSize(this, options);\n        var positionAndSize = Object.assign({}, position, size);\n        var alignment = determineAlignment(this.chart, options, positionAndSize);\n        var backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        properties = {\n          opacity: 1,\n          x: backgroundPoint.x,\n          y: backgroundPoint.y,\n          width: size.width,\n          height: size.height,\n          caretX: position.x,\n          caretY: position.y\n        };\n      }\n\n      this._tooltipItems = tooltipItems;\n      this.$context = undefined;\n\n      if (properties) {\n        this._resolveAnimations().update(this, properties);\n      }\n\n      if (changed && options.external) {\n        options.external.call(this, {\n          chart: this.chart,\n          tooltip: this,\n          replay: replay\n        });\n      }\n    }\n  }, {\n    key: \"drawCaret\",\n    value: function drawCaret(tooltipPoint, ctx, size, options) {\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n  }, {\n    key: \"getCaretPosition\",\n    value: function getCaretPosition(tooltipPoint, size, options) {\n      var xAlign = this.xAlign,\n          yAlign = this.yAlign;\n      var caretSize = options.caretSize,\n          cornerRadius = options.cornerRadius;\n\n      var _toTRBLCorners2 = toTRBLCorners(cornerRadius),\n          topLeft = _toTRBLCorners2.topLeft,\n          topRight = _toTRBLCorners2.topRight,\n          bottomLeft = _toTRBLCorners2.bottomLeft,\n          bottomRight = _toTRBLCorners2.bottomRight;\n\n      var ptX = tooltipPoint.x,\n          ptY = tooltipPoint.y;\n      var width = size.width,\n          height = size.height;\n      var x1, x2, x3, y1, y2, y3;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n\n        x3 = x1;\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n        } else {\n          x2 = this.caretX;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          x1 = x2 + caretSize;\n          x3 = x2 - caretSize;\n        }\n\n        y3 = y1;\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle(pt, ctx, options) {\n      var title = this.title;\n      var length = title.length;\n      var titleFont, titleSpacing, i;\n\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.titleAlign, options);\n        ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n        ctx.textBaseline = 'middle';\n        titleFont = toFont(options.titleFont);\n        titleSpacing = options.titleSpacing;\n        ctx.fillStyle = options.titleColor;\n        ctx.font = titleFont.string;\n\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n          pt.y += titleFont.lineHeight + titleSpacing;\n\n          if (i + 1 === length) {\n            pt.y += options.titleMarginBottom - titleSpacing;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_drawColorBox\",\n    value: function _drawColorBox(ctx, pt, i, rtlHelper, options) {\n      var labelColors = this.labelColors[i];\n      var labelPointStyle = this.labelPointStyles[i];\n      var boxHeight = options.boxHeight,\n          boxWidth = options.boxWidth,\n          boxPadding = options.boxPadding;\n      var bodyFont = toFont(options.bodyFont);\n      var colorX = getAlignedX(this, 'left', options);\n      var rtlColorX = rtlHelper.x(colorX);\n      var yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n      var colorY = pt.y + yOffSet;\n\n      if (options.usePointStyle) {\n        var drawOptions = {\n          radius: Math.min(boxWidth, boxHeight) / 2,\n          pointStyle: labelPointStyle.pointStyle,\n          rotation: labelPointStyle.rotation,\n          borderWidth: 1\n        };\n        var centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n        var centerY = colorY + boxHeight / 2;\n        ctx.strokeStyle = options.multiKeyBackground;\n        ctx.fillStyle = options.multiKeyBackground;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.fillStyle = labelColors.backgroundColor;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        ctx.lineWidth = labelColors.borderWidth || 1;\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.setLineDash(labelColors.borderDash || []);\n        ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n        var outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n        var innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n        var borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n        if (Object.values(borderRadius).some(function (v) {\n          return v !== 0;\n        })) {\n          ctx.beginPath();\n          ctx.fillStyle = options.multiKeyBackground;\n          addRoundedRectPath(ctx, {\n            x: outerX,\n            y: colorY,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n          ctx.fill();\n          ctx.stroke();\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.beginPath();\n          addRoundedRectPath(ctx, {\n            x: innerX,\n            y: colorY + 1,\n            w: boxWidth - 2,\n            h: boxHeight - 2,\n            radius: borderRadius\n          });\n          ctx.fill();\n        } else {\n          ctx.fillStyle = options.multiKeyBackground;\n          ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n        }\n      }\n\n      ctx.fillStyle = this.labelTextColors[i];\n    }\n  }, {\n    key: \"drawBody\",\n    value: function drawBody(pt, ctx, options) {\n      var body = this.body;\n      var bodySpacing = options.bodySpacing,\n          bodyAlign = options.bodyAlign,\n          displayColors = options.displayColors,\n          boxHeight = options.boxHeight,\n          boxWidth = options.boxWidth,\n          boxPadding = options.boxPadding;\n      var bodyFont = toFont(options.bodyFont);\n      var bodyLineHeight = bodyFont.lineHeight;\n      var xLinePadding = 0;\n      var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n        pt.y += bodyLineHeight + bodySpacing;\n      };\n\n      var bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n      var bodyItem, textColor, lines, i, j, ilen, jlen;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'middle';\n      ctx.font = bodyFont.string;\n      pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n      ctx.fillStyle = options.bodyColor;\n      each(this.beforeBody, fillLineOfText);\n      xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n\n      for (i = 0, ilen = body.length; i < ilen; ++i) {\n        bodyItem = body[i];\n        textColor = this.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        each(bodyItem.before, fillLineOfText);\n        lines = bodyItem.lines;\n\n        if (displayColors && lines.length) {\n          this._drawColorBox(ctx, pt, i, rtlHelper, options);\n\n          bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n        }\n\n        for (j = 0, jlen = lines.length; j < jlen; ++j) {\n          fillLineOfText(lines[j]);\n          bodyLineHeight = bodyFont.lineHeight;\n        }\n\n        each(bodyItem.after, fillLineOfText);\n      }\n\n      xLinePadding = 0;\n      bodyLineHeight = bodyFont.lineHeight;\n      each(this.afterBody, fillLineOfText);\n      pt.y -= bodySpacing;\n    }\n  }, {\n    key: \"drawFooter\",\n    value: function drawFooter(pt, ctx, options) {\n      var footer = this.footer;\n      var length = footer.length;\n      var footerFont, i;\n\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.footerAlign, options);\n        pt.y += options.footerMarginTop;\n        ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n        ctx.textBaseline = 'middle';\n        footerFont = toFont(options.footerFont);\n        ctx.fillStyle = options.footerColor;\n        ctx.font = footerFont.string;\n\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n          pt.y += footerFont.lineHeight + options.footerSpacing;\n        }\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground(pt, ctx, tooltipSize, options) {\n      var xAlign = this.xAlign,\n          yAlign = this.yAlign;\n      var x = pt.x,\n          y = pt.y;\n      var width = tooltipSize.width,\n          height = tooltipSize.height;\n\n      var _toTRBLCorners3 = toTRBLCorners(options.cornerRadius),\n          topLeft = _toTRBLCorners3.topLeft,\n          topRight = _toTRBLCorners3.topRight,\n          bottomLeft = _toTRBLCorners3.bottomLeft,\n          bottomRight = _toTRBLCorners3.bottomRight;\n\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.beginPath();\n      ctx.moveTo(x + topLeft, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + width - topRight, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + width, y + height - bottomRight);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + bottomLeft, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x, y + topLeft);\n      ctx.quadraticCurveTo(x, y, x + topLeft, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (options.borderWidth > 0) {\n        ctx.stroke();\n      }\n    }\n  }, {\n    key: \"_updateAnimationTarget\",\n    value: function _updateAnimationTarget(options) {\n      var chart = this.chart;\n      var anims = this.$animations;\n      var animX = anims && anims.x;\n      var animY = anims && anims.y;\n\n      if (animX || animY) {\n        var position = positioners[options.position].call(this, this._active, this._eventPosition);\n\n        if (!position) {\n          return;\n        }\n\n        var size = this._size = getTooltipSize(this, options);\n        var positionAndSize = Object.assign({}, position, this._size);\n        var alignment = determineAlignment(chart, options, positionAndSize);\n        var point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n\n        if (animX._to !== point.x || animY._to !== point.y) {\n          this.xAlign = alignment.xAlign;\n          this.yAlign = alignment.yAlign;\n          this.width = size.width;\n          this.height = size.height;\n          this.caretX = position.x;\n          this.caretY = position.y;\n\n          this._resolveAnimations().update(this, point);\n        }\n      }\n    }\n  }, {\n    key: \"_willRender\",\n    value: function _willRender() {\n      return !!this.opacity;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options.setContext(this.getContext());\n      var opacity = this.opacity;\n\n      if (!opacity) {\n        return;\n      }\n\n      this._updateAnimationTarget(options);\n\n      var tooltipSize = {\n        width: this.width,\n        height: this.height\n      };\n      var pt = {\n        x: this.x,\n        y: this.y\n      };\n      opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n      var padding = toPadding(options.padding);\n      var hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n      if (options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        this.drawBackground(pt, ctx, tooltipSize, options);\n        overrideTextDirection(ctx, options.textDirection);\n        pt.y += padding.top;\n        this.drawTitle(pt, ctx, options);\n        this.drawBody(pt, ctx, options);\n        this.drawFooter(pt, ctx, options);\n        restoreTextDirection(ctx, options.textDirection);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements, eventPosition) {\n      var _this34 = this;\n\n      var lastActive = this._active;\n      var active = activeElements.map(function (_ref9) {\n        var datasetIndex = _ref9.datasetIndex,\n            index = _ref9.index;\n\n        var meta = _this34.chart.getDatasetMeta(datasetIndex);\n\n        if (!meta) {\n          throw new Error('Cannot find a dataset at index ' + datasetIndex);\n        }\n\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(lastActive, active);\n\n      var positionChanged = this._positionChanged(active, eventPosition);\n\n      if (changed || positionChanged) {\n        this._active = active;\n        this._eventPosition = eventPosition;\n        this._ignoreReplayEvents = true;\n        this.update(true);\n      }\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e, replay) {\n      var inChartArea = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n      if (replay && this._ignoreReplayEvents) {\n        return false;\n      }\n\n      this._ignoreReplayEvents = false;\n      var options = this.options;\n      var lastActive = this._active || [];\n\n      var active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n      var positionChanged = this._positionChanged(active, e);\n\n      var changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n      if (changed) {\n        this._active = active;\n\n        if (options.enabled || options.external) {\n          this._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          this.update(true, replay);\n        }\n      }\n\n      return changed;\n    }\n  }, {\n    key: \"_getActiveElements\",\n    value: function _getActiveElements(e, lastActive, replay, inChartArea) {\n      var options = this.options;\n\n      if (e.type === 'mouseout') {\n        return [];\n      }\n\n      if (!inChartArea) {\n        return lastActive;\n      }\n\n      var active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n      if (options.reverse) {\n        active.reverse();\n      }\n\n      return active;\n    }\n  }, {\n    key: \"_positionChanged\",\n    value: function _positionChanged(active, e) {\n      var caretX = this.caretX,\n          caretY = this.caretY,\n          options = this.options;\n      var position = positioners[options.position].call(this, active, e);\n      return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n  }]);\n\n  return Tooltip;\n}(Element);\n\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners: positioners,\n  afterInit: function afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        chart: chart,\n        options: options\n      });\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset: function reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw: function afterDraw(chart) {\n    var tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      var args = {\n        tooltip: tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (chart.tooltip) {\n      var useFinalPosition = args.replay;\n\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: function boxHeight(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    boxWidth: function boxWidth(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title: function title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          var item = tooltipItems[0];\n          var labels = item.chart.data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label: function label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n\n        var label = tooltipItem.dataset.label || '';\n\n        if (label) {\n          label += ': ';\n        }\n\n        var value = tooltipItem.formattedValue;\n\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n\n        return label;\n      },\n      labelColor: function labelColor(tooltipItem) {\n        var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0\n        };\n      },\n      labelTextColor: function labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle: function labelPointStyle(tooltipItem) {\n        var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return name !== 'filter' && name !== 'itemSort' && name !== 'external';\n    },\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins =\n/*#__PURE__*/\nObject.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: index,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\n\nvar addIfString = function addIfString(labels, raw, index, addedLabels) {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({\n      index: index,\n      label: raw\n    });\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  var first = labels.indexOf(raw);\n\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n\n  var last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nvar validIndex = function validIndex(index, max) {\n  return index === null ? null : _limitValue(Math.round(index), 0, max);\n};\n\nvar CategoryScale =\n/*#__PURE__*/\nfunction (_Scale) {\n  _inherits(CategoryScale, _Scale);\n\n  function CategoryScale(cfg) {\n    var _this35;\n\n    _classCallCheck(this, CategoryScale);\n\n    _this35 = _possibleConstructorReturn(this, _getPrototypeOf(CategoryScale).call(this, cfg));\n    _this35._startValue = undefined;\n    _this35._valueRange = 0;\n    _this35._addedLabels = [];\n    return _this35;\n  }\n\n  _createClass(CategoryScale, [{\n    key: \"init\",\n    value: function init(scaleOptions) {\n      var added = this._addedLabels;\n\n      if (added.length) {\n        var labels = this.getLabels();\n        var _iteratorNormalCompletion23 = true;\n        var _didIteratorError23 = false;\n        var _iteratorError23 = undefined;\n\n        try {\n          for (var _iterator23 = added[Symbol.iterator](), _step23; !(_iteratorNormalCompletion23 = (_step23 = _iterator23.next()).done); _iteratorNormalCompletion23 = true) {\n            var _step23$value = _step23.value,\n                _index3 = _step23$value.index,\n                label = _step23$value.label;\n\n            if (labels[_index3] === label) {\n              labels.splice(_index3, 1);\n            }\n          }\n        } catch (err) {\n          _didIteratorError23 = true;\n          _iteratorError23 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion23 && _iterator23.return != null) {\n              _iterator23.return();\n            }\n          } finally {\n            if (_didIteratorError23) {\n              throw _iteratorError23;\n            }\n          }\n        }\n\n        this._addedLabels = [];\n      }\n\n      _get(_getPrototypeOf(CategoryScale.prototype), \"init\", this).call(this, scaleOptions);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n\n      var labels = this.getLabels();\n      index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n      return validIndex(index, labels.length - 1);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getUserBounds2 = this.getUserBounds(),\n          minDefined = _this$getUserBounds2.minDefined,\n          maxDefined = _this$getUserBounds2.maxDefined;\n\n      var _this$getMinMax = this.getMinMax(true),\n          min = _this$getMinMax.min,\n          max = _this$getMinMax.max;\n\n      if (this.options.bounds === 'ticks') {\n        if (!minDefined) {\n          min = 0;\n        }\n\n        if (!maxDefined) {\n          max = this.getLabels().length - 1;\n        }\n      }\n\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var min = this.min;\n      var max = this.max;\n      var offset = this.options.offset;\n      var ticks = [];\n      var labels = this.getLabels();\n      labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n      this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n      this._startValue = this.min - (offset ? 0.5 : 0);\n\n      for (var value = min; value <= max; value++) {\n        ticks.push({\n          value: value\n        });\n      }\n\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var labels = this.getLabels();\n\n      if (value >= 0 && value < labels.length) {\n        return labels[value];\n      }\n\n      return value;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      _get(_getPrototypeOf(CategoryScale.prototype), \"configure\", this).call(this);\n\n      if (!this.isHorizontal()) {\n        this._reversePixels = !this._reversePixels;\n      }\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      if (typeof value !== 'number') {\n        value = this.parse(value);\n      }\n\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.bottom;\n    }\n  }]);\n\n  return CategoryScale;\n}(Scale);\n\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  var ticks = [];\n  var MIN_SPACING = 1e-14;\n  var bounds = generationOptions.bounds,\n      step = generationOptions.step,\n      min = generationOptions.min,\n      max = generationOptions.max,\n      precision = generationOptions.precision,\n      count = generationOptions.count,\n      maxTicks = generationOptions.maxTicks,\n      maxDigits = generationOptions.maxDigits,\n      includeBounds = generationOptions.includeBounds;\n  var unit = step || 1;\n  var maxSpaces = maxTicks - 1;\n  var rmin = dataRange.min,\n      rmax = dataRange.max;\n  var minDefined = !isNullOrUndef(min);\n  var maxDefined = !isNullOrUndef(max);\n  var countDefined = !isNullOrUndef(count);\n  var minSpacing = (rmax - rmin) / (maxDigits + 1);\n  var spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  var factor, niceMin, niceMax, numSpaces;\n\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  var decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  var j = 0;\n\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n\n      if (niceMin < min) {\n        j++;\n      }\n\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, _ref10) {\n  var horizontal = _ref10.horizontal,\n      minRotation = _ref10.minRotation;\n  var rad = toRadians(minRotation);\n  var ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  var length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nvar LinearScaleBase =\n/*#__PURE__*/\nfunction (_Scale2) {\n  _inherits(LinearScaleBase, _Scale2);\n\n  function LinearScaleBase(cfg) {\n    var _this36;\n\n    _classCallCheck(this, LinearScaleBase);\n\n    _this36 = _possibleConstructorReturn(this, _getPrototypeOf(LinearScaleBase).call(this, cfg));\n    _this36.start = undefined;\n    _this36.end = undefined;\n    _this36._startValue = undefined;\n    _this36._endValue = undefined;\n    _this36._valueRange = 0;\n    return _this36;\n  }\n\n  _createClass(LinearScaleBase, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n\n      if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n        return null;\n      }\n\n      return +raw;\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var beginAtZero = this.options.beginAtZero;\n\n      var _this$getUserBounds3 = this.getUserBounds(),\n          minDefined = _this$getUserBounds3.minDefined,\n          maxDefined = _this$getUserBounds3.maxDefined;\n\n      var min = this.min,\n          max = this.max;\n\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n\n      if (beginAtZero) {\n        var minSign = sign(min);\n        var maxSign = sign(max);\n\n        if (minSign < 0 && maxSign < 0) {\n          setMax(0);\n        } else if (minSign > 0 && maxSign > 0) {\n          setMin(0);\n        }\n      }\n\n      if (min === max) {\n        var offset = 1;\n\n        if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n          offset = Math.abs(max * 0.05);\n        }\n\n        setMax(max + offset);\n\n        if (!beginAtZero) {\n          setMin(min - offset);\n        }\n      }\n\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"getTickLimit\",\n    value: function getTickLimit() {\n      var tickOpts = this.options.ticks;\n      var maxTicksLimit = tickOpts.maxTicksLimit,\n          stepSize = tickOpts.stepSize;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n\n        if (maxTicks > 1000) {\n          console.warn(\"scales.\".concat(this.id, \".ticks.stepSize: \").concat(stepSize, \" would result generating up to \").concat(maxTicks, \" ticks. Limiting to 1000.\"));\n          maxTicks = 1000;\n        }\n      } else {\n        maxTicks = this.computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var opts = this.options;\n      var tickOpts = opts.ticks;\n      var maxTicks = this.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        bounds: opts.bounds,\n        min: opts.min,\n        max: opts.max,\n        precision: tickOpts.precision,\n        step: tickOpts.stepSize,\n        count: tickOpts.count,\n        maxDigits: this._maxDigits(),\n        horizontal: this.isHorizontal(),\n        minRotation: tickOpts.minRotation || 0,\n        includeBounds: tickOpts.includeBounds !== false\n      };\n      var dataRange = this._range || this;\n      var ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n\n      return ticks;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var ticks = this.ticks;\n      var start = this.min;\n      var end = this.max;\n\n      _get(_getPrototypeOf(LinearScaleBase.prototype), \"configure\", this).call(this);\n\n      if (this.options.offset && ticks.length) {\n        var offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n        start -= offset;\n        end += offset;\n      }\n\n      this._startValue = start;\n      this._endValue = end;\n      this._valueRange = end - start;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n  }]);\n\n  return LinearScaleBase;\n}(Scale);\n\nvar LinearScale =\n/*#__PURE__*/\nfunction (_LinearScaleBase) {\n  _inherits(LinearScale, _LinearScaleBase);\n\n  function LinearScale() {\n    _classCallCheck(this, LinearScale);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(LinearScale).apply(this, arguments));\n  }\n\n  _createClass(LinearScale, [{\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax2 = this.getMinMax(true),\n          min = _this$getMinMax2.min,\n          max = _this$getMinMax2.max;\n\n      this.min = isNumberFinite(min) ? min : 0;\n      this.max = isNumberFinite(max) ? max : 1;\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      var horizontal = this.isHorizontal();\n      var length = horizontal ? this.width : this.height;\n      var minRotation = toRadians(this.options.ticks.minRotation);\n      var ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n\n      var tickFont = this._resolveTickFontOptions(0);\n\n      return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n  }]);\n\n  return LinearScale;\n}(LinearScaleBase);\n\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  var remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\n\nfunction generateTicks(generationOptions, dataRange) {\n  var endExp = Math.floor(log10(dataRange.max));\n  var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  var ticks = [];\n  var tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  var exp = Math.floor(log10(tickVal));\n  var significand = Math.floor(tickVal / Math.pow(10, exp));\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n  var lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\n\nvar LogarithmicScale =\n/*#__PURE__*/\nfunction (_Scale3) {\n  _inherits(LogarithmicScale, _Scale3);\n\n  function LogarithmicScale(cfg) {\n    var _this37;\n\n    _classCallCheck(this, LogarithmicScale);\n\n    _this37 = _possibleConstructorReturn(this, _getPrototypeOf(LogarithmicScale).call(this, cfg));\n    _this37.start = undefined;\n    _this37.end = undefined;\n    _this37._startValue = undefined;\n    _this37._valueRange = 0;\n    return _this37;\n  }\n\n  _createClass(LogarithmicScale, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      var value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n\n      if (value === 0) {\n        this._zero = true;\n        return undefined;\n      }\n\n      return isNumberFinite(value) && value > 0 ? value : null;\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax3 = this.getMinMax(true),\n          min = _this$getMinMax3.min,\n          max = _this$getMinMax3.max;\n\n      this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n      this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n\n      if (this.options.beginAtZero) {\n        this._zero = true;\n      }\n\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var _this$getUserBounds4 = this.getUserBounds(),\n          minDefined = _this$getUserBounds4.minDefined,\n          maxDefined = _this$getUserBounds4.maxDefined;\n\n      var min = this.min;\n      var max = this.max;\n\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n\n      var exp = function exp(v, m) {\n        return Math.pow(10, Math.floor(log10(v)) + m);\n      };\n\n      if (min === max) {\n        if (min <= 0) {\n          setMin(1);\n          setMax(10);\n        } else {\n          setMin(exp(min, -1));\n          setMax(exp(max, +1));\n        }\n      }\n\n      if (min <= 0) {\n        setMin(exp(max, -1));\n      }\n\n      if (max <= 0) {\n        setMax(exp(min, +1));\n      }\n\n      if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n        setMin(exp(min, -1));\n      }\n\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var opts = this.options;\n      var generationOptions = {\n        min: this._userMin,\n        max: this._userMax\n      };\n      var ticks = generateTicks(generationOptions, this);\n\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var start = this.min;\n\n      _get(_getPrototypeOf(LogarithmicScale.prototype), \"configure\", this).call(this);\n\n      this._startValue = log10(start);\n      this._valueRange = log10(this.max) - log10(start);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      if (value === undefined || value === 0) {\n        value = this.min;\n      }\n\n      if (value === null || isNaN(value)) {\n        return NaN;\n      }\n\n      return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var decimal = this.getDecimalForPixel(pixel);\n      return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n  }]);\n\n  return LogarithmicScale;\n}(Scale);\n\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  var tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    var padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\nfunction fitWithPointLabels(scale) {\n  var orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  var limits = Object.assign({}, orig);\n  var labelSizes = [];\n  var padding = [];\n  var valueCount = scale._pointLabels.length;\n  var pointLabelOpts = scale.options.pointLabels;\n  var additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (var i = 0; i < valueCount; i++) {\n    var opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    var pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    var plFont = toFont(opts.font);\n    var textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    var angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n\n    var angle = Math.round(toDegrees(angleRadians));\n    var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  var sin = Math.abs(Math.sin(angle));\n  var cos = Math.abs(Math.cos(angle));\n  var x = 0;\n  var y = 0;\n\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  var items = [];\n  var valueCount = scale._pointLabels.length;\n  var opts = scale.options;\n  var extra = getTickBackdropHeight(opts) / 2;\n  var outerDistance = scale.drawingArea;\n  var additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (var i = 0; i < valueCount; i++) {\n    var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    var angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    var size = labelSizes[i];\n    var y = yForAngle(pointLabelPosition.y, size.h, angle);\n    var textAlign = getTextAlignForAngle(angle);\n    var left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y: y,\n      textAlign: textAlign,\n      left: left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  var ctx = scale.ctx,\n      pointLabels = scale.options.pointLabels;\n\n  for (var i = labelCount - 1; i >= 0; i--) {\n    var optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    var plFont = toFont(optsAtIndex.font);\n    var _scale$_pointLabelIte = scale._pointLabelItems[i],\n        x = _scale$_pointLabelIte.x,\n        y = _scale$_pointLabelIte.y,\n        textAlign = _scale$_pointLabelIte.textAlign,\n        left = _scale$_pointLabelIte.left,\n        top = _scale$_pointLabelIte.top,\n        right = _scale$_pointLabelIte.right,\n        bottom = _scale$_pointLabelIte.bottom;\n    var backdropColor = optsAtIndex.backdropColor;\n\n    if (!isNullOrUndef(backdropColor)) {\n      var borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      var padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      var backdropLeft = left - padding.left;\n      var backdropTop = top - padding.top;\n      var backdropWidth = right - left + padding.width;\n      var backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(function (v) {\n        return v !== 0;\n      })) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  var ctx = scale.ctx;\n\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    var pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (var i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  var ctx = scale.ctx;\n  var circular = gridLineOpts.circular;\n  var color = gridLineOpts.color,\n      lineWidth = gridLineOpts.lineWidth;\n\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label: label,\n    index: index,\n    type: 'pointLabel'\n  });\n}\n\nvar RadialLinearScale =\n/*#__PURE__*/\nfunction (_LinearScaleBase2) {\n  _inherits(RadialLinearScale, _LinearScaleBase2);\n\n  function RadialLinearScale(cfg) {\n    var _this38;\n\n    _classCallCheck(this, RadialLinearScale);\n\n    _this38 = _possibleConstructorReturn(this, _getPrototypeOf(RadialLinearScale).call(this, cfg));\n    _this38.xCenter = undefined;\n    _this38.yCenter = undefined;\n    _this38.drawingArea = undefined;\n    _this38._pointLabels = [];\n    _this38._pointLabelItems = [];\n    return _this38;\n  }\n\n  _createClass(RadialLinearScale, [{\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n      var w = this.width = this.maxWidth - padding.width;\n      var h = this.height = this.maxHeight - padding.height;\n      this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n      this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n      this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax4 = this.getMinMax(false),\n          min = _this$getMinMax4.min,\n          max = _this$getMinMax4.max;\n\n      this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n      this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var _this39 = this;\n\n      LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n      this._pointLabels = this.getLabels().map(function (value, index) {\n        var label = callback(_this39.options.pointLabels.callback, [value, index], _this39);\n        return label || label === 0 ? label : '';\n      }).filter(function (v, i) {\n        return _this39.chart.getDataVisibility(i);\n      });\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var opts = this.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        this.setCenterPoint(0, 0, 0, 0);\n      }\n    }\n  }, {\n    key: \"setCenterPoint\",\n    value: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n      this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n      this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n  }, {\n    key: \"getIndexAngle\",\n    value: function getIndexAngle(index) {\n      var angleMultiplier = TAU / (this._pointLabels.length || 1);\n      var startAngle = this.options.startAngle || 0;\n      return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n  }, {\n    key: \"getDistanceFromCenterForValue\",\n    value: function getDistanceFromCenterForValue(value) {\n      if (isNullOrUndef(value)) {\n        return NaN;\n      }\n\n      var scalingFactor = this.drawingArea / (this.max - this.min);\n\n      if (this.options.reverse) {\n        return (this.max - value) * scalingFactor;\n      }\n\n      return (value - this.min) * scalingFactor;\n    }\n  }, {\n    key: \"getValueForDistanceFromCenter\",\n    value: function getValueForDistanceFromCenter(distance) {\n      if (isNullOrUndef(distance)) {\n        return NaN;\n      }\n\n      var scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n      return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n  }, {\n    key: \"getPointLabelContext\",\n    value: function getPointLabelContext(index) {\n      var pointLabels = this._pointLabels || [];\n\n      if (index >= 0 && index < pointLabels.length) {\n        var pointLabel = pointLabels[index];\n        return createPointLabelContext(this.getContext(), index, pointLabel);\n      }\n    }\n  }, {\n    key: \"getPointPosition\",\n    value: function getPointPosition(index, distanceFromCenter) {\n      var additionalAngle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n      return {\n        x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n        y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n        angle: angle\n      };\n    }\n  }, {\n    key: \"getPointPositionForValue\",\n    value: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n  }, {\n    key: \"getBasePosition\",\n    value: function getBasePosition(index) {\n      return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n  }, {\n    key: \"getPointLabelPosition\",\n    value: function getPointLabelPosition(index) {\n      var _this$_pointLabelItem = this._pointLabelItems[index],\n          left = _this$_pointLabelItem.left,\n          top = _this$_pointLabelItem.top,\n          right = _this$_pointLabelItem.right,\n          bottom = _this$_pointLabelItem.bottom;\n      return {\n        left: left,\n        top: top,\n        right: right,\n        bottom: bottom\n      };\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var _this$options14 = this.options,\n          backgroundColor = _this$options14.backgroundColor,\n          circular = _this$options14.grid.circular;\n\n      if (backgroundColor) {\n        var ctx = this.ctx;\n        ctx.save();\n        ctx.beginPath();\n        pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n        ctx.closePath();\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid() {\n      var _this40 = this;\n\n      var ctx = this.ctx;\n      var opts = this.options;\n      var angleLines = opts.angleLines,\n          grid = opts.grid;\n      var labelCount = this._pointLabels.length;\n      var i, offset, position;\n\n      if (opts.pointLabels.display) {\n        drawPointLabels(this, labelCount);\n      }\n\n      if (grid.display) {\n        this.ticks.forEach(function (tick, index) {\n          if (index !== 0) {\n            offset = _this40.getDistanceFromCenterForValue(tick.value);\n            var optsAtIndex = grid.setContext(_this40.getContext(index - 1));\n            drawRadiusLine(_this40, optsAtIndex, offset, labelCount);\n          }\n        });\n      }\n\n      if (angleLines.display) {\n        ctx.save();\n\n        for (i = labelCount - 1; i >= 0; i--) {\n          var optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n          var color = optsAtIndex.color,\n              lineWidth = optsAtIndex.lineWidth;\n\n          if (!lineWidth || !color) {\n            continue;\n          }\n\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = color;\n          ctx.setLineDash(optsAtIndex.borderDash);\n          ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n          offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n          position = this.getPointPosition(i, offset);\n          ctx.beginPath();\n          ctx.moveTo(this.xCenter, this.yCenter);\n          ctx.lineTo(position.x, position.y);\n          ctx.stroke();\n        }\n\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {}\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels() {\n      var _this41 = this;\n\n      var ctx = this.ctx;\n      var opts = this.options;\n      var tickOpts = opts.ticks;\n\n      if (!tickOpts.display) {\n        return;\n      }\n\n      var startAngle = this.getIndexAngle(0);\n      var offset, width;\n      ctx.save();\n      ctx.translate(this.xCenter, this.yCenter);\n      ctx.rotate(startAngle);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      this.ticks.forEach(function (tick, index) {\n        if (index === 0 && !opts.reverse) {\n          return;\n        }\n\n        var optsAtIndex = tickOpts.setContext(_this41.getContext(index));\n        var tickFont = toFont(optsAtIndex.font);\n        offset = _this41.getDistanceFromCenterForValue(_this41.ticks[index].value);\n\n        if (optsAtIndex.showLabelBackdrop) {\n          ctx.font = tickFont.string;\n          width = ctx.measureText(tick.label).width;\n          ctx.fillStyle = optsAtIndex.backdropColor;\n          var padding = toPadding(optsAtIndex.backdropPadding);\n          ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n        }\n\n        renderText(ctx, tick.label, 0, -offset, tickFont, {\n          color: optsAtIndex.color\n        });\n      });\n      ctx.restore();\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {}\n  }]);\n\n  return RadialLinearScale;\n}(LinearScaleBase);\n\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback: function callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction _parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  var adapter = scale._adapter;\n  var _scale$_parseOpts = scale._parseOpts,\n      parser = _scale$_parseOpts.parser,\n      round = _scale$_parseOpts.round,\n      isoWeekday = _scale$_parseOpts.isoWeekday;\n  var value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n\n  for (var i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    var interval = INTERVALS[UNITS[i]];\n    var factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (var i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    var unit = UNITS[i];\n\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    var _lookup2 = _lookup(timestamps, time),\n        lo = _lookup2.lo,\n        hi = _lookup2.hi;\n\n    var timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  var adapter = scale._adapter;\n  var first = +adapter.startOf(ticks[0].value, majorUnit);\n  var last = ticks[ticks.length - 1].value;\n  var major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n\n  return ticks;\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  var ticks = [];\n  var map = {};\n  var ilen = values.length;\n  var i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value: value,\n      major: false\n    });\n  }\n\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nvar TimeScale =\n/*#__PURE__*/\nfunction (_Scale4) {\n  _inherits(TimeScale, _Scale4);\n\n  function TimeScale(props) {\n    var _this42;\n\n    _classCallCheck(this, TimeScale);\n\n    _this42 = _possibleConstructorReturn(this, _getPrototypeOf(TimeScale).call(this, props));\n    _this42._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    _this42._unit = 'day';\n    _this42._majorUnit = undefined;\n    _this42._offsets = {};\n    _this42._normalized = false;\n    _this42._parseOpts = undefined;\n    return _this42;\n  }\n\n  _createClass(TimeScale, [{\n    key: \"init\",\n    value: function init(scaleOpts, opts) {\n      var time = scaleOpts.time || (scaleOpts.time = {});\n      var adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n      mergeIf(time.displayFormats, adapter.formats());\n      this._parseOpts = {\n        parser: time.parser,\n        round: time.round,\n        isoWeekday: time.isoWeekday\n      };\n\n      _get(_getPrototypeOf(TimeScale.prototype), \"init\", this).call(this, scaleOpts);\n\n      this._normalized = opts.normalized;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (raw === undefined) {\n        return null;\n      }\n\n      return _parse(this, raw);\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      _get(_getPrototypeOf(TimeScale.prototype), \"beforeLayout\", this).call(this);\n\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var options = this.options;\n      var adapter = this._adapter;\n      var unit = options.time.unit || 'day';\n\n      var _this$getUserBounds5 = this.getUserBounds(),\n          min = _this$getUserBounds5.min,\n          max = _this$getUserBounds5.max,\n          minDefined = _this$getUserBounds5.minDefined,\n          maxDefined = _this$getUserBounds5.maxDefined;\n\n      function _applyBounds(bounds) {\n        if (!minDefined && !isNaN(bounds.min)) {\n          min = Math.min(min, bounds.min);\n        }\n\n        if (!maxDefined && !isNaN(bounds.max)) {\n          max = Math.max(max, bounds.max);\n        }\n      }\n\n      if (!minDefined || !maxDefined) {\n        _applyBounds(this._getLabelBounds());\n\n        if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n          _applyBounds(this.getMinMax(false));\n        }\n      }\n\n      min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n      max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n      this.min = Math.min(min, max - 1);\n      this.max = Math.max(min + 1, max);\n    }\n  }, {\n    key: \"_getLabelBounds\",\n    value: function _getLabelBounds() {\n      var arr = this.getLabelTimestamps();\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n\n      if (arr.length) {\n        min = arr[0];\n        max = arr[arr.length - 1];\n      }\n\n      return {\n        min: min,\n        max: max\n      };\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var options = this.options;\n      var timeOpts = options.time;\n      var tickOpts = options.ticks;\n      var timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        this.min = this._userMin || timestamps[0];\n        this.max = this._userMax || timestamps[timestamps.length - 1];\n      }\n\n      var min = this.min;\n      var max = this.max;\n\n      var ticks = _filterBetween(timestamps, min, max);\n\n      this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n      this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n      this.initOffsets(timestamps);\n\n      if (options.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n  }, {\n    key: \"afterAutoSkip\",\n    value: function afterAutoSkip() {\n      if (this.options.offsetAfterAutoskip) {\n        this.initOffsets(this.ticks.map(function (tick) {\n          return +tick.value;\n        }));\n      }\n    }\n  }, {\n    key: \"initOffsets\",\n    value: function initOffsets(timestamps) {\n      var start = 0;\n      var end = 0;\n      var first, last;\n\n      if (this.options.offset && timestamps.length) {\n        first = this.getDecimalForValue(timestamps[0]);\n\n        if (timestamps.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n        }\n\n        last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n\n        if (timestamps.length === 1) {\n          end = last;\n        } else {\n          end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n        }\n      }\n\n      var limit = timestamps.length < 3 ? 0.5 : 0.25;\n      start = _limitValue(start, 0, limit);\n      end = _limitValue(end, 0, limit);\n      this._offsets = {\n        start: start,\n        end: end,\n        factor: 1 / (start + 1 + end)\n      };\n    }\n  }, {\n    key: \"_generate\",\n    value: function _generate() {\n      var adapter = this._adapter;\n      var min = this.min;\n      var max = this.max;\n      var options = this.options;\n      var timeOpts = options.time;\n      var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n      var stepSize = valueOrDefault(timeOpts.stepSize, 1);\n      var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n      var hasWeekday = isNumber(weekday) || weekday === true;\n      var ticks = {};\n      var first = min;\n      var time, count;\n\n      if (hasWeekday) {\n        first = +adapter.startOf(first, 'isoWeek', weekday);\n      }\n\n      first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n      if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n        throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n      }\n\n      var timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n\n      for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n        addTick(ticks, time, timestamps);\n      }\n\n      if (time === max || options.bounds === 'ticks' || count === 1) {\n        addTick(ticks, time, timestamps);\n      }\n\n      return Object.keys(ticks).sort(function (a, b) {\n        return a - b;\n      }).map(function (x) {\n        return +x;\n      });\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var adapter = this._adapter;\n      var timeOpts = this.options.time;\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(value, timeOpts.tooltipFormat);\n      }\n\n      return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n  }, {\n    key: \"_tickFormatFunction\",\n    value: function _tickFormatFunction(time, index, ticks, format) {\n      var options = this.options;\n      var formats = options.time.displayFormats;\n      var unit = this._unit;\n      var majorUnit = this._majorUnit;\n      var minorFormat = unit && formats[unit];\n      var majorFormat = majorUnit && formats[majorUnit];\n      var tick = ticks[index];\n      var major = majorUnit && majorFormat && tick && tick.major;\n\n      var label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n\n      var formatter = options.ticks.callback;\n      return formatter ? callback(formatter, [label, index, ticks], this) : label;\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var i, ilen, tick;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        tick.label = this._tickFormatFunction(tick.value, i, ticks);\n      }\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var offsets = this._offsets;\n      var pos = this.getDecimalForValue(value);\n      return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var offsets = this._offsets;\n      var pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return this.min + pos * (this.max - this.min);\n    }\n  }, {\n    key: \"_getLabelSize\",\n    value: function _getLabelSize(label) {\n      var ticksOpts = this.options.ticks;\n      var tickLabelWidth = this.ctx.measureText(label).width;\n      var angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n\n      var tickFontSize = this._resolveTickFontOptions(0).size;\n\n      return {\n        w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n        h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n      };\n    }\n  }, {\n    key: \"_getLabelCapacity\",\n    value: function _getLabelCapacity(exampleTime) {\n      var timeOpts = this.options.time;\n      var displayFormats = timeOpts.displayFormats;\n      var format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n\n      var exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n\n      var size = this._getLabelSize(exampleLabel);\n\n      var capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n      return capacity > 0 ? capacity : 1;\n    }\n  }, {\n    key: \"getDataTimestamps\",\n    value: function getDataTimestamps() {\n      var timestamps = this._cache.data || [];\n      var i, ilen;\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      var metas = this.getMatchingVisibleMetas();\n\n      if (this._normalized && metas.length) {\n        return this._cache.data = metas[0].controller.getAllParsedValues(this);\n      }\n\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n      }\n\n      return this._cache.data = this.normalize(timestamps);\n    }\n  }, {\n    key: \"getLabelTimestamps\",\n    value: function getLabelTimestamps() {\n      var timestamps = this._cache.labels || [];\n      var i, ilen;\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      var labels = this.getLabels();\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        timestamps.push(_parse(this, labels[i]));\n      }\n\n      return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(values) {\n      return _arrayUnique(values.sort(sorter));\n    }\n  }]);\n\n  return TimeScale;\n}(Scale);\n\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  var lo = 0;\n  var hi = table.length - 1;\n  var prevSource, nextSource, prevTarget, nextTarget;\n\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      var _lookupByKey2 = _lookupByKey(table, 'pos', val);\n\n      lo = _lookupByKey2.lo;\n      hi = _lookupByKey2.hi;\n    }\n\n    var _table$lo = table[lo];\n    prevSource = _table$lo.pos;\n    prevTarget = _table$lo.time;\n    var _table$hi = table[hi];\n    nextSource = _table$hi.pos;\n    nextTarget = _table$hi.time;\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      var _lookupByKey3 = _lookupByKey(table, 'time', val);\n\n      lo = _lookupByKey3.lo;\n      hi = _lookupByKey3.hi;\n    }\n\n    var _table$lo2 = table[lo];\n    prevSource = _table$lo2.time;\n    prevTarget = _table$lo2.pos;\n    var _table$hi2 = table[hi];\n    nextSource = _table$hi2.time;\n    nextTarget = _table$hi2.pos;\n  }\n\n  var span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nvar TimeSeriesScale =\n/*#__PURE__*/\nfunction (_TimeScale) {\n  _inherits(TimeSeriesScale, _TimeScale);\n\n  function TimeSeriesScale(props) {\n    var _this43;\n\n    _classCallCheck(this, TimeSeriesScale);\n\n    _this43 = _possibleConstructorReturn(this, _getPrototypeOf(TimeSeriesScale).call(this, props));\n    _this43._table = [];\n    _this43._minPos = undefined;\n    _this43._tableRange = undefined;\n    return _this43;\n  }\n\n  _createClass(TimeSeriesScale, [{\n    key: \"initOffsets\",\n    value: function initOffsets() {\n      var timestamps = this._getTimestampsForTable();\n\n      var table = this._table = this.buildLookupTable(timestamps);\n      this._minPos = interpolate(table, this.min);\n      this._tableRange = interpolate(table, this.max) - this._minPos;\n\n      _get(_getPrototypeOf(TimeSeriesScale.prototype), \"initOffsets\", this).call(this, timestamps);\n    }\n  }, {\n    key: \"buildLookupTable\",\n    value: function buildLookupTable(timestamps) {\n      var min = this.min,\n          max = this.max;\n      var items = [];\n      var table = [];\n      var i, ilen, prev, curr, next;\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        curr = timestamps[i];\n\n        if (curr >= min && curr <= max) {\n          items.push(curr);\n        }\n      }\n\n      if (items.length < 2) {\n        return [{\n          time: min,\n          pos: 0\n        }, {\n          time: max,\n          pos: 1\n        }];\n      }\n\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        next = items[i + 1];\n        prev = items[i - 1];\n        curr = items[i];\n\n        if (Math.round((next + prev) / 2) !== curr) {\n          table.push({\n            time: curr,\n            pos: i / (ilen - 1)\n          });\n        }\n      }\n\n      return table;\n    }\n  }, {\n    key: \"_getTimestampsForTable\",\n    value: function _getTimestampsForTable() {\n      var timestamps = this._cache.all || [];\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      var data = this.getDataTimestamps();\n      var label = this.getLabelTimestamps();\n\n      if (data.length && label.length) {\n        timestamps = this.normalize(data.concat(label));\n      } else {\n        timestamps = data.length ? data : label;\n      }\n\n      timestamps = this._cache.all = timestamps;\n      return timestamps;\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var offsets = this._offsets;\n      var decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n  }]);\n\n  return TimeSeriesScale;\n}(TimeScale);\n\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales =\n/*#__PURE__*/\nObject.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nvar registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"sources":["/Users/yan/Desktop/WISERStudentSystem/client/node_modules/chart.js/dist/chart.esm.js"],"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","d","defaults","i","isObject","b","isArray","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","createContext","j","defined","s","sign","k","isNullOrUndef","_","_arrayUnique","t","toRadians","m","toPercentage","n","toDimension","T","TAU","o","formatNumber","p","_angleBetween","H","HALF_PI","P","PI","q","isNumber","w","_limitValue","x","_lookupByKey","y","_parseObjectDataRadialScale","z","getRelativePosition","A","_rlookupByKey","B","_isPointInArea","C","getAngleFromPoint","D","toPadding","E","each","F","getMaximumSize","G","_getParentNode","I","readUsedSize","J","throttled","K","supportsEventListenerOptions","L","_isDomSupported","M","log10","N","_factorize","O","finiteOrDefault","Q","callback","R","_addGrace","S","toDegrees","U","_measureText","V","_int16Range","W","_alignPixel","X","clipArea","Y","renderText","Z","unclipArea","$","toFont","a0","_toLeftRightCenter","a1","_alignStartEnd","a2","overrides","a3","merge","a4","_capitalize","a5","descriptors","a6","isFunction","a7","_attachContext","a8","_createResolver","a9","_descriptors","aa","mergeIf","ab","uid","ac","debounce","ad","retinaScale","ae","clearCanvas","af","setsEqual","ag","_elementsEqual","ah","_isClickEvent","ai","_isBetween","aj","_readValueToProps","ak","_updateBezierControlPoints","al","_computeSegments","am","_boundSegments","an","_steppedInterpolation","ao","_bezierInterpolation","ap","_pointInLine","aq","_steppedLineTo","ar","_bezierCurveTo","as","drawPoint","at","addRoundedRectPath","au","toTRBL","av","toTRBLCorners","aw","_boundSegment","ax","_normalizeAngle","ay","getRtlAdapter","az","overrideTextDirection","aA","_textX","aB","restoreTextDirection","aC","noop","aD","distanceBetweenPoints","aE","_setMinAndMaxByKey","aF","niceNum","aG","almostWhole","aH","almostEquals","aI","_decimalPlaces","aJ","_longestText","aK","_filterBetween","aL","_lookup","Animator","_request","_charts","Map","_running","_lastDate","undefined","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","call","window","_update","_refresh","Date","now","remaining","running","items","length","draw","item","_active","_total","tick","pop","_notify","charts","get","complete","progress","set","event","cb","_getAnims","push","reduce","acc","cur","max","_duration","cancel","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","active","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","has","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","_animateOptions","value","update","size","assign","add","anim","wait","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","addElements","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","isExtensible","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","parse","xAxisKey","yAxisKey","range","parsedValue","NaN","otherScale","_getOtherScale","otherMin","otherMax","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","clip","getMaxOverflow","elements","area","chartArea","drawActiveElementsOnTop","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","_cacheable","sharedOptions","_animationsDisabled","_resolveAnimations","getStyle","getSharedOptions","_setStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","args","_dataChanges","arguments","_sync","newCount","prototype","getAllScaleValues","_cache","$bar","visibleMetas","concat","getAllParsedValues","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","obj","bars","reset","getBasePixel","_getRuler","firstOpts","includeOptions","updateSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","updateElement","last","grouped","val","isNaN","indexOf","_getStacks","_startPixel","_endPixel","_getStackCount","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","stackIndex","_getStackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","radius","points","point","iPixel","vPixel","skip","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","getter","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","_getRotationExtents","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","stop","border","firstPoint","lastPoint","updateControlPoints","pointCount","lo","hi","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","interaction","controllers","__proto__","abstract","Error","DateAdapter","format","timestamp","amount","unit","weekday","override","members","adapters","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","padding","autoPadding","addBox","_layers","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","canvas","listener","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","addEventListener","removeListener","removeEventListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","diff","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","metas","getMinMax","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","pixel","decimal","getBaseValue","optionTicks","rot","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","tickTextAlign","backdrop","labelPadding","translation","save","fillRect","restore","findIndex","_computeGridLineItems","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","_computeLabelArea","_computeLabelItems","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","axisID","fontSize","TypedRegistry","scope","create","isPrototypeOf","proto","getPrototypeOf","parentScope","isIChartComponent","register","registerDefaults","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","hook","_createDescriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","getPlugin","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","console","error","_proxy","warn","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","getResolver","resolver","subPrefixes","needContext","subResolver","descriptorDefaults","platform","resolverCache","hasFunction","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","userConfig","initialCanvas","existingChart","chartOptionScopes","updateConfig","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","listen","_initialize","responsive","bindEvents","_resize","_resizeBeforeDraw","maintainAspectRatio","newSize","newRatio","getDevicePixelRatio","onResize","render","scalesOptions","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","getScale","init","hasUpdated","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","order","updateIndex","ControllerClass","getController","getElement","_updateMetasets","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","setDatasetVisibility","_updateVisibility","_destroy","remove","_stop","releaseContext","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","isAttached","prefix","activeElements","lastActive","notify","replay","hoverOptions","hover","deactivated","activated","updateHoverStyle","eventFilter","_handleEvent","_getActiveElements","onHover","getElementsAtEventForMode","invalidatePlugins","enumerable","defineProperties","unregister","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","borderJoinStyle","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","translate","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","capBezierPoints","inRange$1","hitRadius","PointElement","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","refRect","BarElement","addRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","configurable","destroy","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_resolveTarget","sources","propagate","visited","_decodeFill","parseFillOption","parseFloat","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","interpolate","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","isListened","hoveredItem","_getLegendItemAt","sameItem","onLeave","plugin_legend","_element","adjustHitBoxes","afterEvent","handleEvent","ci","Title","_padding","textSize","fontOpts","_drawArgs","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_willRender","labelCount","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","getDecimalForPixel","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","rad","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","stepSize","computeTickLimit","getTickLimit","numericGeneratorOptions","_maxDigits","LinearScale","handleTickRangeOptions","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","scaledDistance","pointLabel","distanceFromCenter","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","_parseOpts","parser","isoWeekday","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","formatter","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","_adapters"],"mappings":"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","sourcesContent":["/*!\n * Chart.js v3.8.0\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _isPointInArea, C as getAngleFromPoint, D as toPadding, E as each, F as getMaximumSize, G as _getParentNode, I as readUsedSize, J as throttled, K as supportsEventListenerOptions, L as _isDomSupported, M as log10, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as toDegrees, U as _measureText, V as _int16Range, W as _alignPixel, X as clipArea, Y as renderText, Z as unclipArea, $ as toFont, a0 as _toLeftRightCenter, a1 as _alignStartEnd, a2 as overrides, a3 as merge, a4 as _capitalize, a5 as descriptors, a6 as isFunction, a7 as _attachContext, a8 as _createResolver, a9 as _descriptors, aa as mergeIf, ab as uid, ac as debounce, ad as retinaScale, ae as clearCanvas, af as setsEqual, ag as _elementsEqual, ah as _isClickEvent, ai as _isBetween, aj as _readValueToProps, ak as _updateBezierControlPoints, al as _computeSegments, am as _boundSegments, an as _steppedInterpolation, ao as _bezierInterpolation, ap as _pointInLine, aq as _steppedLineTo, ar as _bezierCurveTo, as as drawPoint, at as addRoundedRectPath, au as toTRBL, av as toTRBLCorners, aw as _boundSegment, ax as _normalizeAngle, ay as getRtlAdapter, az as overrideTextDirection, aA as _textX, aB as restoreTextDirection, aC as noop, aD as distanceBetweenPoints, aE as _setMinAndMaxByKey, aF as niceNum, aG as almostWhole, aH as almostEquals, aI as _decimalPlaces, aJ as _longestText, aK as _filterBetween, aL as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.8.0\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"]},"metadata":{},"sourceType":"module"}