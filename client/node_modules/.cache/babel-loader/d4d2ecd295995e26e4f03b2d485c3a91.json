{"ast":null,"code":"var _jsxFileName = \"/Users/yan/Desktop/WISERStudentSystem/client/src/components/student.component.js\";\nimport React, { Component } from \"react\";\nimport studentDataService from \"../services/student.service\";\nexport default class student extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangename = this.onChangename.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.getstudent = this.getstudent.bind(this);\n    this.updatePublished = this.updatePublished.bind(this);\n    this.updatestudent = this.updatestudent.bind(this);\n    this.deletestudent = this.deletestudent.bind(this);\n    this.state = {\n      currentstudent: {\n        id: null,\n        name: \"\",\n        description: \"\",\n        published: false\n      },\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getstudent(this.props.match.params.id);\n  }\n\n  onChangename(e) {\n    const name = e.target.value;\n    this.setState(function (prevState) {\n      return {\n        currentstudent: { ...prevState.currentstudent,\n          name: name\n        }\n      };\n    });\n  }\n\n  onChangeDescription(e) {\n    const description = e.target.value;\n    this.setState(prevState => ({\n      currentstudent: { ...prevState.currentstudent,\n        description: description\n      }\n    }));\n  }\n\n  getstudent(id) {\n    studentDataService.get(id).then(response => {\n      this.setState({\n        currentstudent: response.data\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  updatePublished(status) {\n    var data = {\n      id: this.state.currentstudent.id,\n      name: this.state.currentstudent.name,\n      description: this.state.currentstudent.description,\n      published: status\n    };\n    studentDataService.update(this.state.currentstudent.id, data).then(response => {\n      this.setState(prevState => ({\n        currentstudent: { ...prevState.currentstudent,\n          published: status\n        }\n      }));\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  updatestudent() {\n    studentDataService.update(this.state.currentstudent.id, this.state.currentstudent).then(response => {\n      console.log(response.data);\n      this.setState({\n        message: \"The student info was updated successfully!\"\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  deletestudent() {\n    studentDataService.delete(this.state.currentstudent.id).then(response => {\n      console.log(response.data);\n      this.props.history.push('/students');\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  render() {\n    const {\n      currentstudent\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, currentstudent ? React.createElement(\"div\", {\n      className: \"edit-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Student\"), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Full Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"name\",\n      value: currentstudent.name,\n      onChange: this.onChangename,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Form\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"description\",\n      value: currentstudent.description,\n      onChange: this.onChangeDescription,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Status:\")), currentstudent.published ? \"Graduated\" : \"In School\")), currentstudent.published ? React.createElement(\"button\", {\n      className: \"badge badge-primary mr-2\",\n      onClick: () => this.updatePublished(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"In School\") : React.createElement(\"button\", {\n      className: \"badge badge-primary mr-2\",\n      onClick: () => this.updatePublished(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Graduated\"), React.createElement(\"button\", {\n      className: \"badge badge-danger mr-2\",\n      onClick: this.deletestudent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"badge badge-success\",\n      onClick: this.updatestudent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Update\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, this.state.message)) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Please click to select a student...\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/yan/Desktop/WISERStudentSystem/client/src/components/student.component.js"],"names":["React","Component","studentDataService","student","constructor","props","onChangename","bind","onChangeDescription","getstudent","updatePublished","updatestudent","deletestudent","state","currentstudent","id","name","description","published","message","componentDidMount","match","params","e","target","value","setState","prevState","get","then","response","data","console","log","catch","status","update","delete","history","push","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport studentDataService from \"../services/student.service\";\n\nexport default class student extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangename = this.onChangename.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.getstudent = this.getstudent.bind(this);\n    this.updatePublished = this.updatePublished.bind(this);\n    this.updatestudent = this.updatestudent.bind(this);\n    this.deletestudent = this.deletestudent.bind(this);\n\n    this.state = {\n      currentstudent: {\n        id: null,\n        name: \"\",\n        description: \"\",\n        published: false\n      },\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getstudent(this.props.match.params.id);\n  }\n\n  onChangename(e) {\n    const name = e.target.value;\n\n    this.setState(function(prevState) {\n      return {\n        currentstudent: {\n          ...prevState.currentstudent,\n          name: name\n        }\n      };\n    });\n  }\n\n  onChangeDescription(e) {\n    const description = e.target.value;\n    \n    this.setState(prevState => ({\n      currentstudent: {\n        ...prevState.currentstudent,\n        description: description\n      }\n    }));\n  }\n\n  getstudent(id) {\n    studentDataService.get(id)\n      .then(response => {\n        this.setState({\n          currentstudent: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  updatePublished(status) {\n    var data = {\n      id: this.state.currentstudent.id,\n      name: this.state.currentstudent.name,\n      description: this.state.currentstudent.description,\n      published: status\n    };\n\n    studentDataService.update(this.state.currentstudent.id, data)\n      .then(response => {\n        this.setState(prevState => ({\n          currentstudent: {\n            ...prevState.currentstudent,\n            published: status\n          }\n        }));\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  updatestudent() {\n    studentDataService.update(\n      this.state.currentstudent.id,\n      this.state.currentstudent\n    )\n      .then(response => {\n        console.log(response.data);\n        this.setState({\n          message: \"The student info was updated successfully!\"\n        });\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  deletestudent() {    \n    studentDataService.delete(this.state.currentstudent.id)\n      .then(response => {\n        console.log(response.data);\n        this.props.history.push('/students')\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { currentstudent } = this.state;\n\n    return (\n      <div>\n        {currentstudent ? (\n          <div className=\"edit-form\">\n            <h4>Student</h4>\n            <form>\n              <div className=\"form-group\">\n                <label htmlFor=\"name\">Full Name</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"name\"\n                  value={currentstudent.name}\n                  onChange={this.onChangename}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"description\">Form</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"description\"\n                  value={currentstudent.description}\n                  onChange={this.onChangeDescription}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>\n                  <strong>Status:</strong>\n                </label>\n                {currentstudent.published ? \"Graduated\" : \"In School\"}\n              </div>\n            </form>\n\n            {currentstudent.published ? (\n              <button\n                className=\"badge badge-primary mr-2\"\n                onClick={() => this.updatePublished(false)}\n              >\n                In School\n              </button>\n            ) : (\n              <button\n                className=\"badge badge-primary mr-2\"\n                onClick={() => this.updatePublished(true)}\n              >\n                Graduated\n              </button>\n            )}\n\n            <button\n              className=\"badge badge-danger mr-2\"\n              onClick={this.deletestudent}\n            >\n              Delete\n            </button>\n\n            <button\n              type=\"submit\"\n              className=\"badge badge-success\"\n              onClick={this.updatestudent}\n            >\n              Update\n            </button>\n            <p>{this.state.message}</p>\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>Please click to select a student...</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}